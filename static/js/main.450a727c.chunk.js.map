{"version":3,"sources":["lib/grid/gridProperties.js","components/InteractiveGrid/Grid/Grid.js","components/DeleteButton/index.js","components/InteractiveGrid/Item/Item.js","components/InteractiveGrid/index.js","components/ImageComponent/Overlay.js","lib/RgbaImageBuffer.js","lib/coordinates.js","components/ImageComponent/index.js","components/HistogramComponent/index.js","components/HistogramAndInfoComponent/index.js","components/Toolbar/Submenus/FileSubmenu.js","components/Toolbar/Submenus/ImageSubmenu.js","components/Toolbar/Submenus/PointOperationsSubmenu/Dialogs/LinearTransformationDialog/InputCoordinate.js","components/Toolbar/Submenus/PointOperationsSubmenu/Dialogs/LinearTransformationDialog/index.js","lib/Checks.js","components/Toolbar/Submenus/PointOperationsSubmenu/Dialogs/BrightnessAndContrastDialog.js","components/Toolbar/Submenus/PointOperationsSubmenu/Dialogs/gammaCorrectionDialog.js","components/Toolbar/Submenus/PointOperationsSubmenu/Dialogs/ImageDifferenceDialog.js","components/Toolbar/Submenus/PointOperationsSubmenu/Dialogs/HistogramSpecificationDialog.js","components/Toolbar/Submenus/PointOperationsSubmenu/Dialogs/ChangesDetectionDialog.js","components/Toolbar/Submenus/PointOperationsSubmenu/index.js","components/Toolbar/index.js","lib/Histogram.js","lib/ImageProcessing/grayscale.js","lib/ImageProcessing/transformImage.js","lib/Exceptions/ImageLoadException.js","lib/Exceptions/ValueOutOfBoundsException.js","lib/Exceptions/ImageOperationException.js","lib/ImageProcessing/linearTransformation.js","lib/ImageProcessing/brightnessAndContrastAdjustment.js","lib/ImageProcessing/gammaCorrection.js","lib/ImageProcessing/imagesDifference.js","lib/ImageProcessing/changesDetection.js","lib/ImageProcessing/histogramSpecification.js","lib/ImageProcessing/histogramEqualization.js","lib/ImageProcessing/crop.js","lib/imageHelper.js","lib/grid/calculateLayout.js","lib/CumulativeHistogram.js","components/App/index.js","index.js"],"names":["gridProperties","GRID_COLUMNS","lg","md","sm","xs","xxs","LAYOUT_BREAKPOINTS","DEFAULT_GRID_ITEM_COLS","DEFAULT_GRID_ITEM_ROWS","GRID_ITEM_ROW_HEIGHT","ResponsiveGrid","WidthProvider","Responsive","Grid","_ref","children","props","Object","objectWithoutProperties","react_default","a","createElement","assign","cols","GRID_PROPERTIES","breakpoints","rowHeight","defaultProps","objectSpread","layouts","DeleteButton","onDelete","className","onClick","disabled","aria-label","stopEvent","event","preventDefault","stopPropagation","Item","state","isDraggable","onDragHandleMouseDown","_this","setState","onDragHandleMouseUp","onDragStart","onMouseDown","onDragEnd","onMouseUp","id","onSelect","document","addEventListener","this","removeEventListener","_this$props","style","name","isSelected","concat","draggable","onFocus","tabIndex","components_DeleteButton","React","Component","onDeselect","InteractiveGrid","Overlay","position","width","right","left","height","bottom","top","backgroundColor","border","opacity","RgbaImageBuffer","pixels","classCallCheck","toImageData","copy","Uint8ClampedArray","getPixel","_ref3","x","y","Math","max","min","pixelPosition","_mapMatrixPositionToArray","slice","NUM_CHANNELS","_width","_height","_pixels","data","_ref2","imgData","ImageData","set","mapToCoordinatesRelativeToElement","coords","parentElement","parentElementBoundingBox","clientX","ceil","clientY","mapToRelativeCoordinates","getBoundingClientRect","calculateRect","coords1","coords2","areCoordinatesAligned","ImageComponent","isImageLoading","isMouseDown","mouseDownOriginCoordinates","currentMouseCoordinates","onMouseMove","mouseEvent","coordinates","Coordinates","refs","canvas","pixel","rgbaImage","_this$state","_this$props$rgbaImage","onSelection","_calculateRect","context","getContext","putImageData","overlayPosition","ref","display","maxHeight","ImageComponent_Overlay","HistogramComponent","emphasizedValue","histogramVisualizationData","histogram","map","value","index","x0","_this2","es","margin","onMouseLeave","onNearestX","align","horizontal","vertical","fontSize","format","dataPoint","title","HistogramAndInfoComponent","currentTab","updateCurrentTab","_","newTab","_this$props$histogram","histogramValues","histogramInfo","counts","cHistogram","Fragment","justifyContent","Button_default","boxShadow","e","alignItems","components_HistogramComponent","maxWidth","Table_default","TableHead_default","TableRow_default","TableCell_default","numeric","TableBody_default","count","mean","toFixed","stdDev","minValue","maxValue","mode","entropy","FileSubmenu","open","handleToggle","handleClose","anchorEl","contains","target","onFileInputted","onFileInput","fileInputForm","reset","onDownload","buttonRef","node","aria-owns","undefined","aria-haspopup","color","Popper_default","transition","disablePortal","TransitionProps","placement","Grow_default","transformOrigin","Paper_default","ClickAwayListener_default","onClickAway","MenuList_default","htmlFor","MenuItem_default","hidden","type","accept","onChange","ImageSubmenu","onShowHistogram","onCrop","InputCoordinate","onYChange","number","Number","parseFloat","coordinate","isFinite","onXChange","TextField_default","placeholder","InputProps","startAdornment","InputAdornment_default","IconButton_default","Delete_default","styles","center","marginTop","marginBottom","LinearTransformationDialog","onDataChange","newData","prevState","coord","i","onDataDelete","filter","addNewCoordinate","newCoord","length","toConsumableArray","onSubmit","Dialog_default","isOpen","onClose","scroll","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","xDomain","yDomain","fullWidth","variant","InputCoordinate_InputCoordinate","key","DialogActions_default","isInRange","inputsContainer","flexWrap","input","BrightnessAndContrastDialog","brightness","brightnessErrorMessage","contrast","contrastErrorMessage","valueStateName","errorMessageStateName","minPossibleValue","maxPossibleValue","_this$setState2","_this$setState","defineProperty","onBrightnessChange","onContrastChange","error","label","GammaCorrectionDialog","gamma","gammaErrorMessage","errorMessage","POSITIVE_INFINITY","onGammaChange","ImageDifferenceDialog","imgName","HistogramSpecificationDialog","ChangesDetectionDialog","rgbaColor","r","g","b","threshold","onImgNameChange","onThresholdChange","newValue","handleChangeComplete","rgb","lib","onChangeComplete","PointOperationsSubmenu","isLinearTransformDialogOpen","isLightnessAndContrastDialogOpen","isGammaCorrectionDialogOpen","isImageDifferenceDialogOpen","isHistogramSpecificationDialogOpen","isChangesDetectionDialogOpen","handleDialogOpen","dialogStateName","handleDialogClose","onGrayscale","histogramEqualization","LinearTransformationDialog_LinearTransformationDialog","linearTransformation","BrightnessAndContrastDialog_BrightnessAndContrastDialog","brightnessAndContrastAdjustment","gammaCorrectionDialog_GammaCorrectionDialog","gammaValue","gammaCorrection","ImageDifferenceDialog_ImageDifferenceDialog","imagesDifference","HistogramSpecificationDialog_HistogramSpecificationDialog","histogramSpecification","ChangesDetectionDialog_ChangesDetectionDialog","userInput","changesDetection","AppToolbar","AppBar_default","Toolbar_default","FileSubmenu_FileSubmenu","ImageSubmenu_ImageSubmenu","PointOperationsSubmenu_PointOperationsSubmenu","Histogram","imagePixels","setImagePixels","Array","fill","reduce","previousValue","currentElement","sqrt","pow","maxIndex","maxCount","forEach","probability","log2","imageToGrayscale","imgBuffer","grayscaleStrategy","arguments","pixelToGrayscalePal","result","grayValue","rComponent","gComponent","bComponent","round","transformImage","lookupTable","ImageLoadException","Error","errorImageSrc","possibleConstructorReturn","getPrototypeOf","call","src","ImageOperationException","exceptionName","message","points","sections","newSection","slope","push","currentSectionIndex","frontier","yIntercept","oldBrightness","oldContrast","newBrightness","newContrast","A","B","firstImgBuffer","secondImgBuffer","abs","changeHighlightColor","difference","originImageCHistogram","targetImageCHistogram","normalizedOriginImageCHistogram","normalizedTargetImageCHistogram","j","imageCHistogram","equalizationLevel","crop","_ref$top","_ref$left","_ref$height","_ref$width","resultPixels","currentIndex","yOffset","xOffset","loadFromObject","obj","URL","createObjectURL","image","Image","Promise","resolve","reject","onload","onerror","load","finally","revokeObjectURL","createNewSetOfLayouts","keys","layoutName","createNewElementLayoutInfo","Infinity","w","h","minW","minH","addNewElementsToLayouts","currentLayouts","newElementsIds","newElementsLayoutInfos","newLayouts","removeElementsFromLayout","ids","includes","CumulativeHistogram","App","imagesInfos","histogramInfos","gridLayouts","GridLayoutHelper","selectedGridItem","pixelCoords","pixelValue","removedImagesCount","notify","messageType","enqueueSnackbar","onMouseMoveOverImage","onImageRegionSelection","newRegion","info","region","addNewImage","imageBuffer","imageSection","imageKey","histogramKey","visible","onNewImageFromFile","files","ImageHelper","then","naturalWidth","naturalHeight","drawImage","getImageData","fromImageData","catch","isGridItemSelected","onGridLayoutChange","requestAnimationFrame","onGridItemSelection","deleteAllImageRelatedInfo","newSelectedItem","hideHistogram","showHistogramOfCurrentImage","_this$state$selectedG","downloadCurrentImage","_this$state$selectedG2","imgInfo","_imgInfo$region","imageData","toBlob","blob","imgUrl","downloadAnchor","href","click","currentImageToGrayscale","_this$state$selectedG3","currentImageLinearTransformation","_this$state$selectedG4","currentImageBrightnessAndContrastAdjustment","_this$state$selectedG5","currentImageGammaCorrection","_this$state$selectedG6","applyImagesDifference","otherImgName","_this$state$selectedG7","otherImageInfo","find","applyChangesDetection","_this$state$selectedG8","applyHistogramSpecification","_this$state$selectedG9","otherImgIndex","findIndex","_ref4","currentImageHistogramEqualization","_this$state$selectedG10","cropCurrentImage","_this$state$selectedG11","components_Toolbar","getGridComponent","getDisplayForPixelUnderMouse","download","onLayoutChange","getImageGridItem","getHistogramGridItem","element","_ref5","components_ImageComponent","_ref6","HistogramAndInfoComponent_HistogramAndInfoComponent","currentPixelRgbaValue","join","padding","borderRadius","withSnackbar","theme","createMuiTheme","palette","common","black","white","background","paper","default","primary","light","main","dark","contrastText","secondary","text","hint","typography","useNextVariants","ReactDOM","render","core_styles","build","maxSnack","anchorOrigin","action","size","Date","now","components_App","getElementById"],"mappings":"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","file":"static/js/main.450a727c.chunk.js","sourcesContent":["/**\n * Object defining the constants properties of the Grids\n */\nexport default {\n  GRID_COLUMNS: { lg: 10, md: 8, sm: 6, xs: 4, xxs: 2 },\n  LAYOUT_BREAKPOINTS: { lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 },\n  DEFAULT_GRID_ITEM_COLS: 2, // Number of columns each item is tall on creation\n  DEFAULT_GRID_ITEM_ROWS: 4, // Number of rows each item is wide on creation\n  GRID_ITEM_ROW_HEIGHT: 50 // Height in number pixels of each row\n};","import React from \"react\";\nimport { WidthProvider, Responsive } from \"react-grid-layout\";\nimport GRID_PROPERTIES from \"../../../lib/grid/gridProperties\";\n\nconst ResponsiveGrid = WidthProvider(Responsive);\n\n/**\n * react-grid-layout responsive grid with some default props given as defined in\n * gridProperties: cols, breakpoints and rowHeight\n */\nconst Grid = ({ children, ...props }) => {\n  return (\n    <ResponsiveGrid\n      cols={GRID_PROPERTIES.GRID_COLUMNS}\n      breakpoints={GRID_PROPERTIES.LAYOUT_BREAKPOINTS}\n      rowHeight={GRID_PROPERTIES.GRID_ITEM_ROW_HEIGHT}\n      {...props}\n    >\n      {children}\n    </ResponsiveGrid>\n  );\n};\n\nGrid.propTypes = ResponsiveGrid.propTypes;\nGrid.defaultProps = { layouts: {}, ...ResponsiveGrid.defaultProps };\n\nexport default Grid;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./DeleteButton.css\";\n\n/**\n * Delete button component. Renders a circular button with a\n * cross to let the user know that they can delete something.\n *\n * The parent component is notified when the user wants to\n * delete via the `onDelete` prop. If `onDelete` is not\n * provided, the button will be rendered as a disabled button\n */\nconst DeleteButton = ({ onDelete, ...props }) => (\n  <button\n    className=\"DeleteButton\"\n    onClick={onDelete}\n    disabled={!onDelete}\n    aria-label=\"delete\"\n    {...props}\n  >\n    ×\n  </button>\n);\n\nDeleteButton.propTypes = {\n  onDelete: PropTypes.func\n};\n\nDeleteButton.defaultProps = {\n  onDelete: null\n};\n\nexport default DeleteButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DeleteButton from \"../../DeleteButton\";\nimport \"./Item.css\";\n\n/** Helper method to prevent the default behaviour and stop the propagation of\n * an event */\nconst stopEvent = event => {\n  event.preventDefault();\n  event.stopPropagation();\n};\n\n/**\n * Grid Item component. Forces grid items to be draggable only by a toolbar at\n * the top and also allows to listen to delete events (renders a delete button\n * and the event fires when the user wants to delete the item). It can also\n * notifiy when the user selects and deselects this component via props\n */\nexport default class Item extends React.Component {\n  /** The rest of the props are provided by the grid */\n  static propTypes = {\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n      PropTypes.symbol,\n      PropTypes.object\n    ]).isRequired,\n    name: PropTypes.string,\n    onDelete: PropTypes.func,\n    onSelect: PropTypes.func,\n    isSelected: PropTypes.bool\n  };\n\n  static defaultProps = {\n    name: \"\",\n    onDelete: null,\n    onSelect: null,\n    onDeselect: null,\n    isSelected: false\n  };\n\n  /** We only want to allow the item being drag when the user is trying to drag\n   * it from a part of the item, a toolbar at the top */\n  state = {\n    isDraggable: false\n  };\n\n  /**\n   * Listen for document mouse up event so we can react to it even if the users\n   * triggers it out of this element\n   */\n  componentDidMount() {\n    document.addEventListener(\"mouseup\", this.onDragHandleMouseUp);\n  }\n\n  /**\n   * Clean the mouse up listener from the document when the component will be\n   * unmounted\n   */\n  componentWillUnmount() {\n    document.removeEventListener(\"mouseup\", this.onDragHandleMouseUp);\n  }\n\n  /** Update the state to allow the item be dragged only when the user is\n   * clicking on the top toolbar */\n  onDragHandleMouseDown = () => this.setState({ isDraggable: true });\n\n  /** Update the state to forbid the item being dragged when the user stops\n   * clicking the top toolbar. This listener is attached to the document so it\n   * works even if the user drags the element out of the viewport and releses\n   * the mouse there */\n  onDragHandleMouseUp = () =>\n    this.state.isDraggable &&\n    this.setState({\n      isDraggable: false\n    });\n\n  /** Listener for the drag start event, but only allow the drag behaviour if\n   * the state says so */\n  onDragStart = event => {\n    if (this.state.isDraggable) {\n      stopEvent(event);\n      this.props.onMouseDown && this.props.onMouseDown(event);\n    }\n  };\n\n  /** Listener for the drag end event */\n  onDragEnd = event => {\n    if (this.state.isDraggable) {\n      stopEvent(event);\n      this.props.onMouseUp && this.props.onMouseUp(event);\n    }\n  };\n\n  /** When the user wants to delete the item, call the props `onDelete` callback\n   * with the ID of this element */\n  onDelete = () => this.props.onDelete(this.props.id);\n\n  /** When the user selects this item, call the props `onSelect` callback with\n   * the ID of this element */\n  onSelect = () => this.props.onSelect(this.props.id);\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      name,\n      onSelect,\n      onDelete,\n      isSelected\n    } = this.props;\n\n    return (\n      <div\n        className={`Item ${className} ${isSelected && \"is-selected\"}`}\n        style={style}\n        draggable={this.state.isDraggable}\n        onDragStart={this.onDragStart}\n        onMouseUp={this.onDragEnd} // OnMouseUp instead of DragEnd because DragStart prevents default\n        onFocus={onSelect ? this.onSelect : null}\n        tabIndex=\"0\"\n      >\n        <div onMouseDown={this.onDragHandleMouseDown} className=\"Item__toolbar\">\n          <DeleteButton\n            onMouseDown={stopEvent}\n            onDelete={onDelete ? this.onDelete : null}\n          />\n          <span className=\"Item__name\">{name}</span>\n        </div>\n        <div className=\"Item__childrenContainer\">{children}</div>\n      </div>\n    );\n  }\n}\n","import Grid from \"./Grid/Grid\";\nimport Item from \"./Item/Item\";\n\nexport default {\n  Grid,\n  Item\n};\n","import React from \"react\";\n\n/**\n * Rectangle to show when the user is dragging the mouse over a canvas to\n * select a part of it\n */\nconst Overlay = ({ position }) => (\n  <div\n    style={{\n      width: `${position.right - position.left}px`,\n      height: `${position.bottom - position.top}px`,\n      position: \"absolute\",\n      top: position.top + \"px\",\n      left: position.left + \"px\",\n      right: position.right + \"px\",\n      bottom: position.bottom + \"px\",\n      backgroundColor: \"#99ccff\",\n      border: \"1px solid #0000DD\",\n      opacity: \"0.3\"\n    }}\n  />\n);\n\nexport default Overlay;\n","// TODO: pollyfill ImageData constructor\n/**\n * Class to represent a RGBA pixel matrix (an image). This class aims to\n * abstract away the pixel related manipulations by providing a set of\n * convenience methods for iterating through pixels.\n */\nexport default class RgbaImageBuffer {\n  /** Number of channels in a RGBA pixel */\n  static NUM_CHANNELS = 4;\n\n  /**\n   * Convenient function to create a RgbaImage instance from an ImageData object\n   * where the width, height are copied but the pixel array is only copied the\n   * references\n   *\n   * @param {ImageData} imgData ImageData instance to create the RgbaImage from\n   * @returns {RgbaImageBuffer} Instance of RgbaImage initialized from the ImgData\n   */\n  static fromImageData({ width, height, data }) {\n    return new RgbaImageBuffer(width, height, data);\n  }\n\n  /**\n   * Convenient function to create an ImageData object from a RgbaImage object\n   *\n   * @param {RgbaImageBuffer} rgbaImage Instance of RgbaImage used to create the\n   * ImageData\n   * @returns {ImageData} ImageData instance with a copy of the width, height\n   * and pixels of the given RgbaImage\n   */\n  static toImageData({ width, height, pixels }) {\n    const imgData = new ImageData(width, height);\n    imgData.data.set(pixels);\n\n    return imgData;\n  }\n\n  /**\n   * Creates an instance of this class. Note: this treats the given pixels as\n   * RGBA pixels\n   *\n   * @param {number} width Pixel matrix width\n   * @param {number} height Pixel matrix height\n   * @param {Uint8ClampedArray} pixels TypedArray of RGBA Pixels\n   */\n  constructor(width, height, pixels) {\n    // TODO: check that everything is right (width, height > 0; width * height *\n    // rgbaDimension = pixels.length; etc)\n    this._width = width;\n    this._height = height;\n    this._pixels = pixels;\n  }\n\n  /** Alias for RgbaImage.toImageData(instanceOfRgbaImage) */\n  toImageData = () => RgbaImageBuffer.toImageData(this);\n\n  /** Returns a deep copy of this RgbaImage instance */\n  copy = () =>\n    new RgbaImageBuffer(\n      this.width,\n      this.height,\n      new Uint8ClampedArray(this.pixels)\n    );\n\n  /**\n   * Returns the pixel value at the given position\n   *\n   * @param {Object} coordinates Matrix coordinates of the pixel to get\n   * @param {number} coordinates.x Horizontal coordinate\n   * @param {number} coordinates.y Vertical coordinate\n   * @returns {Array} Pixel value at the given coordinates (an array with one\n   *  element per pixel dimension, 4 in case of RGBA for example)\n   */\n  getPixel = ({ x, y }) => {\n    x = Math.max(0, Math.min(this.width - 1, x));\n    y = Math.max(0, Math.min(this.height - 1, y));\n\n    const pixelPosition = this._mapMatrixPositionToArray(x, y);\n\n    return this.pixels.slice(\n      pixelPosition,\n      pixelPosition + RgbaImageBuffer.NUM_CHANNELS\n    );\n  };\n\n  /**\n   * @returns {Uint8ClampedArray} Pixels values of the image, an element for\n   * each pixel dimension (4 in case of RGBA for example)\n   */\n  get pixels() {\n    return this._pixels;\n  }\n\n  /** @returns {number} The width of the image */\n  get width() {\n    return this._width;\n  }\n\n  /** @returns {number} The height of the image */\n  get height() {\n    return this._height;\n  }\n\n  /**\n   * Given a coordinate in matrix space (2 dimensions) this method returns the\n   * corresponding coordinate in vector space (1 dimension).\n   *\n   * @param {number} x Horizontal coordinate\n   * @param {number} y Vertical coordinate\n   * @returns {number} Corresponding vector coordinate\n   */\n  _mapMatrixPositionToArray = (x, y) =>\n    (y * this.width + x) * RgbaImageBuffer.NUM_CHANNELS;\n}\n","/**\n * Maps the given coordinates with respect to the viewport to coordinates\n * with respect to the given element\n *\n * @param {Object} coords Coordinates to map to relative coordinates\n * @param {number} coords.clientX Horizontal coordinate with respect to the app viewport\n * @param {number} coords.clientY Vertical coordinate with respect to the app viewport\n * @param {Element} parentElement Element to get the bounding box from to\n * map the given coordinates to be relative to this element\n * @returns {Object} {x, y} Mouse coordinates with respect to the given element\n */\nexport function mapToCoordinatesRelativeToElement(coords, parentElement) {\n  return mapToRelativeCoordinates(\n    coords,\n    parentElement.getBoundingClientRect()\n  );\n}\n\n/**\n * Maps the mouse coordinates from the given mouse event to relative\n * coordinates with respect to the given element bounding box\n *\n * @param {Object} coords Coordinates to map to relative coordinates\n * @param {number} coords.clientX Horizontal coordinate with respect to the app viewport\n * @param {number} coords.clientY Vertical coordinate with respect to the app viewport\n * @param {DOMRectReadOnly} parentElementBoundingBox Bounding box where to\n * map the coordinates to\n * @returns {Object} {x, y} Mouse coordinates with respect the given bounding box\n */\nexport function mapToRelativeCoordinates(coords, parentElementBoundingBox) {\n  const { top, left } = parentElementBoundingBox;\n\n  // Top and left can be real numbers. If, for example, top = 66.19\n  // it means that the top of the element is at 66.19 CSS pixels\n  // from the top of the viewport. However we want to map that\n  // to integer values. The mouse position is relative to the viewport and it is\n  // an integer value. If the element top is at 66.19 CSS pixels from the top of the\n  // viewport then the first integer pixel would be 67. Cannot be 66 because\n  // there aren't element pixels below 66.19. So to consider the top and\n  // left values as integers we have to consider the ceiling.\n\n  return {\n    x: coords.clientX - Math.ceil(left),\n    y: coords.clientY - Math.ceil(top)\n  };\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Overlay from \"./Overlay\";\nimport RgbaImageBuffer from \"../../lib/RgbaImageBuffer\";\nimport * as Coordinates from \"../../lib/coordinates\";\n\n/**\n * Returns an object defining the rectangle given by the two coordinates\n *\n * @param {Object} coords1 {x: number, y: number} First corner of the rectangle\n * @param {Object} coords2 {x: number, y: number} First corner of the rectangle\n * @returns {Object} { left, right, top, bottom } An object defining the sides\n * of the rectangle\n */\nconst calculateRect = (coords1, coords2) => {\n  const left = Math.min(coords1.x, coords2.x);\n  const right = Math.max(coords1.x, coords2.x);\n  const top = Math.min(coords1.y, coords2.y);\n  const bottom = Math.max(coords1.y, coords2.y);\n\n  return { left, right, top, bottom };\n};\n\n/**\n * Returns whether the two given coordinates form a rectangle with a width or\n * height of 0 or not.\n *\n * @param {Object} coords1 {x: number, y: number}\n * @param {Object} coords2 {x: number, y: number}\n * @returns {boolean} Whether the two coordinates define a rectangle with some\n * dimension of 0\n */\nconst areCoordinatesAligned = (coords1, coords2) =>\n  coords1.x === coords2.x || coords1.y === coords2.y;\n\n// FIXME: the selection functionality doesn't work well when:\n// - The mouse up event is done outside the component\n// - The user wants to select a part passing the scroll\n/**\n * Component that renders an image from the given RgbaImage instance\n */\nclass ImageComponent extends Component {\n  static propTypes = {\n    /** RgbaImage instance to render */\n    rgbaImage: PropTypes.instanceOf(RgbaImageBuffer).isRequired,\n    /** Callback called with the mouse position relative to the\n     * image and the pixel value at that position */\n    onMouseMove: PropTypes.func,\n    /** Called when the user selects a region of the image */\n    onSelection: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    onMouseMove: null\n  };\n\n  /** Component state */\n  state = {\n    /** Flag to know if the image is currently being loaded */\n    isImageLoading: false,\n    /** Flag to know if the user clicked and is holding the mouse down */\n    isMouseDown: false,\n    /** Coordinates of the mouse when the user started pressing it */\n    mouseDownOriginCoordinates: { x: -1, y: -1 },\n    /** Current mouse coordinates relative to the image viewport */\n    currentMouseCoordinates: { x: -1, y: -1 }\n  };\n\n  componentDidMount() {\n    // Try to get the image and draw it to the canvas If there is an error\n    // update the state.error\n    const canvas = this.refs.canvas;\n    const context = canvas.getContext(\"2d\");\n\n    canvas.width = this.props.rgbaImage.width;\n    canvas.height = this.props.rgbaImage.height;\n    context.putImageData(this.props.rgbaImage.toImageData(), 0, 0);\n\n    this.setState({\n      isImageLoading: false\n    });\n  }\n\n  /** Mouse move event handler, gets the coordinates relative to the image where\n   * the user mouse is pointing to and the pixel RGBA value there and calls\n   * props.onMouseMove */\n  onMouseMove = mouseEvent => {\n    if (!this.props.onMouseMove || this.state.isImageLoading) {\n      return;\n    }\n\n    const coordinates = Coordinates.mapToCoordinatesRelativeToElement(\n      mouseEvent,\n      this.refs.canvas\n    );\n    const pixel = this.props.rgbaImage.getPixel(coordinates);\n\n    if (this.state.isMouseDown) {\n      this.setState({\n        currentMouseCoordinates: coordinates\n      });\n    }\n\n    this.props.onMouseMove(coordinates, pixel);\n  };\n\n  /**\n   * Event listener for the mouse down event. Updates the state to know that the\n   * user wants to select a part of the image and sets the origin mouse\n   * coordinate\n   */\n  onMouseDown = mouseEvent => {\n    const coordinates = Coordinates.mapToCoordinatesRelativeToElement(\n      mouseEvent,\n      this.refs.canvas\n    );\n\n    this.setState({\n      mouseDownOriginCoordinates: coordinates,\n      isMouseDown: true,\n      currentMouseCoordinates: coordinates\n    });\n  };\n\n  /**\n   * Event listener for the mouse up event. Updates the state to know that the\n   * user stopped the selection of the part of the image. Then, if the resulting\n   * rectangle has 0 width or height it is discarted.\n   *\n   * MAYBE TODO: set the current mouse coordinate to the ones on mouse up TODO:\n   * notify the parent component of the selection\n   */\n  onMouseUp = () => {\n    const {\n      isMouseDown,\n      mouseDownOriginCoordinates,\n      currentMouseCoordinates\n    } = this.state;\n\n    if (!isMouseDown) {\n      return;\n    }\n\n    if (\n      areCoordinatesAligned(mouseDownOriginCoordinates, currentMouseCoordinates)\n    ) {\n      this.setState({\n        isMouseDown: false,\n        mouseDownOriginCoordinates: { x: -1, y: -1 },\n        currentMouseCoordinates: { x: -1, y: -1 }\n      });\n      const { width, height } = this.props.rgbaImage;\n      this.props.onSelection({ top: 0, left: 0, width, height });\n    } else {\n      this.setState({ isMouseDown: false });\n      const { top, left, right, bottom } = calculateRect(\n        mouseDownOriginCoordinates,\n        currentMouseCoordinates\n      );\n      this.props.onSelection({\n        top,\n        left,\n        width: right - left + 1,\n        height: bottom - top + 1\n      });\n    }\n  };\n\n  render() {\n    const overlayPosition = calculateRect(\n      this.state.mouseDownOriginCoordinates,\n      this.state.currentMouseCoordinates\n    );\n\n    // TODO: check if loading\n    return (\n      <div\n        style={{\n          position: \"relative\"\n        }}\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp}\n        onMouseMove={this.onMouseMove}\n      >\n        <canvas\n          ref=\"canvas\"\n          style={{\n            display: \"block\",\n            backgroundColor: \"#eee\",\n            maxHeight: \"100%\"\n          }}\n        />\n        <Overlay position={overlayPosition} />\n      </div>\n    );\n  }\n}\n\nexport default ImageComponent;\n","import React, { Component } from \"react\";\nimport \"react-vis/dist/style.css\";\nimport {\n  FlexibleXYPlot,\n  XAxis,\n  YAxis,\n  VerticalGridLines,\n  HorizontalGridLines,\n  VerticalRectSeries,\n  Hint\n} from \"react-vis\";\n\nclass HistogramComponent extends Component {\n  state = {\n    emphasizedValue: null,\n    histogramVisualizationData: []\n  };\n\n  componentDidMount() {\n    this.setState({\n      histogramVisualizationData: this.props.histogram.map(\n        (value, index) => ({ x0: index, x: index + 1, y: value })\n      )\n    });\n  }\n\n  render() {\n    return (\n      <FlexibleXYPlot\n        margin={{\n          top: 50,\n          left: 70\n        }}\n        onMouseLeave={() => this.setState({ emphasizedValue: null })}\n      >\n        <VerticalGridLines />\n        <HorizontalGridLines />\n        <XAxis />\n        <YAxis />\n        <VerticalRectSeries\n          onNearestX={value => this.setState({ emphasizedValue: value })}\n          data={this.state.histogramVisualizationData}\n        />\n        {this.state.emphasizedValue ? (\n          <Hint\n            value={this.state.emphasizedValue}\n            align={{ horizontal: \"auto\", vertical: \"top\" }}\n            style={{ fontSize: 14 }}\n            format={dataPoint => {\n              return [\n                {\n                  title: \"Value: \" + dataPoint.x0,\n                  value: \"Count: \" + dataPoint.y\n                }\n              ];\n            }}\n          />\n        ) : null}\n      </FlexibleXYPlot>\n    );\n  }\n}\n\nexport default HistogramComponent;\n","import React from \"react\";\nimport HistogramComponent from \"../HistogramComponent\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\n/**\n * Renders the given histogram and its information\n */\nexport default class HistogramAndInfoComponent extends React.Component {\n  state = {\n    currentTab: 0\n  };\n\n  updateCurrentTab = (_, newTab) => this.setState({ currentTab: newTab });\n\n  render() {\n    const { currentTab } = this.state;\n    const { histogramValues, histogramInfo } = this.props.histogram;\n    const { counts } = this.props.cHistogram;\n\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\"\n          }}\n        >\n          <Button\n            style={\n              currentTab === 0\n                ? {\n                    boxShadow: \"0px 4px 6px -5px black\"\n                  }\n                : {}\n            }\n            onClick={e => this.updateCurrentTab(e, 0)}\n          >\n            Hist.\n          </Button>\n          <Button\n            style={\n              currentTab === 1\n                ? {\n                    boxShadow: \"0px 4px 6px -5px black\"\n                  }\n                : {}\n            }\n            onClick={e => this.updateCurrentTab(e, 1)}\n          >\n            Cumul.\n          </Button>\n          <Button\n            style={\n              currentTab === 2\n                ? {\n                    boxShadow: \"0px 4px 6px -5px black\"\n                  }\n                : {}\n            }\n            onClick={e => this.updateCurrentTab(e, 2)}\n          >\n            Info.\n          </Button>\n        </div>\n        <div\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            maxHeight: \"80%\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          }}\n        >\n          {currentTab === 0 && (\n            <HistogramComponent histogram={histogramValues} />\n          )}\n          {currentTab === 1 && (\n            <HistogramComponent histogram={counts} />\n          )}\n          {currentTab === 2 && (\n            <div\n              className=\"scrollable\"\n              style={{\n                maxWidth: \"500px\"\n              }}\n            >\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Variable</TableCell>\n                    <TableCell numeric>Value</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableRow>\n                    <TableCell>Count</TableCell>\n                    <TableCell numeric>{histogramInfo.count}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Brightness</TableCell>\n                    <TableCell numeric>\n                      {histogramInfo.mean.toFixed(3)}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Contrast</TableCell>\n                    <TableCell numeric>\n                      {histogramInfo.stdDev.toFixed(3)}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Minimum value</TableCell>\n                    <TableCell numeric>{histogramInfo.minValue}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Maximum value</TableCell>\n                    <TableCell numeric>{histogramInfo.maxValue}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Mode</TableCell>\n                    <TableCell numeric>{histogramInfo.mode.value}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Entropy</TableCell>\n                    <TableCell numeric>{histogramInfo.entropy}</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </div>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuList from \"@material-ui/core/MenuList\";\n\n/**\n * \"File\" Appbar Dropdown menu. Contains all the options that the user can\n * choose about files (upload, download, etc)\n */\nexport default class FileSubmenu extends React.Component {\n  static propTypes = {\n    onFileInput: PropTypes.func.isRequired,\n    onDownload: PropTypes.func.isRequired\n  };\n\n  state = {\n    open: false\n  };\n\n  handleToggle = () => {\n    this.setState(state => ({ open: !state.open }));\n  };\n\n  handleClose = event => {\n    if (this.anchorEl.contains(event.target)) {\n      return;\n    }\n\n    this.setState({ open: false });\n  };\n\n  onFileInputted = event => {\n    this.props.onFileInput(event);\n    this.refs.fileInputForm.reset();\n  };\n\n  onDownload = event => {\n    this.handleClose(event);\n    this.props.onDownload();\n  };\n\n  render() {\n    const { open } = this.state;\n\n    return (\n      <div>\n        <Button\n          buttonRef={node => {\n            this.anchorEl = node;\n          }}\n          aria-owns={open ? \"menu-list-grow\" : undefined}\n          aria-haspopup=\"true\"\n          onClick={this.handleToggle}\n          color=\"inherit\"\n        >\n          File\n        </Button>\n        <Popper open={open} anchorEl={this.anchorEl} transition disablePortal>\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              id=\"menu-list-grow\"\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\"\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={this.handleClose}>\n                  <MenuList>\n                    <label htmlFor=\"image-input\">\n                      <MenuItem onClick={this.handleClose}>Open</MenuItem>\n                    </label>\n                    <MenuItem onClick={this.onDownload}>\n                      Download Selected\n                    </MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n        <form ref=\"fileInputForm\">\n          <input\n            hidden\n            id=\"image-input\"\n            type=\"file\"\n            accept=\"image/*\"\n            name=\"image-input\"\n            onChange={this.onFileInputted}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuList from \"@material-ui/core/MenuList\";\n\n/**\n * \"Image\" Appbar Dropdown menu. Contains all the general options that the user\n * can choose about an image (see histogram, crop, etc)\n */\nexport default class ImageSubmenu extends React.Component {\n  static propTypes = {\n    onShowHistogram: PropTypes.func.isRequired,\n    onCrop: PropTypes.func.isRequired\n  };\n\n  state = {\n    open: false\n  };\n\n  handleToggle = () => {\n    this.setState(state => ({ open: !state.open }));\n  };\n\n  handleClose = event => {\n    if (this.anchorEl.contains(event.target)) {\n      return;\n    }\n\n    this.setState({ open: false });\n  };\n\n  onShowHistogram = event => {\n    this.handleClose(event);\n    this.props.onShowHistogram();\n  };\n\n  onCrop = event => {\n    this.handleClose(event);\n    this.props.onCrop();\n  };\n\n  render() {\n    const { open } = this.state;\n\n    return (\n      <div>\n        <Button\n          buttonRef={node => {\n            this.anchorEl = node;\n          }}\n          aria-owns={open ? \"menu-list-grow\" : undefined}\n          aria-haspopup=\"true\"\n          onClick={this.handleToggle}\n          color=\"inherit\"\n        >\n          Image\n        </Button>\n        <Popper open={open} anchorEl={this.anchorEl} transition disablePortal>\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              id=\"menu-list-grow\"\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\"\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={this.handleClose}>\n                  <MenuList>\n                    <MenuItem onClick={this.onShowHistogram}>\n                      Histogram\n                    </MenuItem>\n                    <MenuItem onClick={this.onCrop}>Crop</MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\n/**\n * Coordinate input component to ask the user for the coordinates of a point\n */\nexport default class InputCoordinate extends React.Component {\n  static propTypes = {\n    /** Current value of the coordinate */\n    coordinate: PropTypes.object.isRequired,\n    /** Listener for coordinate changes */\n    onChange: PropTypes.func.isRequired,\n    /** Listener for coordinate delete */\n    onDelete: PropTypes.func.isRequired\n  };\n\n  onYChange = e => {\n    const number = Number.parseFloat(e.target.value);\n    this.props.onChange({\n      ...this.props.coordinate,\n      y: Number.isFinite(number) ? number : \"\"\n    });\n  };\n\n  onXChange = e => {\n    const number = Number.parseFloat(e.target.value);\n    this.props.onChange({\n      ...this.props.coordinate,\n      x: Number.isFinite(number) ? number : \"\"\n    });\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          width: \"100%\"\n        }}\n      >\n        <TextField\n          type=\"number\"\n          placeholder=\"0\"\n          value={this.props.coordinate.x}\n          onChange={this.onXChange}\n          margin=\"dense\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">x: </InputAdornment>\n            )\n          }}\n        />\n        <TextField\n          type=\"number\"\n          placeholder=\"0\"\n          value={this.props.coordinate.y}\n          onChange={this.onYChange}\n          margin=\"dense\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">y: </InputAdornment>\n            )\n          }}\n        />\n        <IconButton aria-label=\"Delete\" onClick={this.props.onDelete}>\n          <DeleteIcon />\n        </IconButton>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport {\n  XYPlot,\n  XAxis,\n  YAxis,\n  HorizontalGridLines,\n  LineSeries\n} from \"react-vis\";\nimport InputCoordinate from \"./InputCoordinate\";\n\nconst styles = {\n  center: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: \"1rem\",\n    marginBottom: \"1rem\"\n  }\n};\n\n/**\n * Dialog to ask the user for the linear sections for a linear transformation\n */\nexport default class LinearTransformationDialog extends React.Component {\n  static propTypes = {\n    isOpen: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired\n  };\n\n  state = {\n    /** List of coordinates */\n    data: [{ x: 0, y: 0 }, { x: 255, y: 255 }]\n  };\n\n  /** Returns a listener for when the user changes some coordinate */\n  onDataChange = index => newData => {\n    this.setState(prevState => ({\n      data: prevState.data.map((coord, i) => (i === index ? newData : coord))\n    }));\n  };\n\n  /** Returns a listener for when the user deletes some coordinate */\n  onDataDelete = index => () => {\n    this.setState(prevState => ({\n      data: prevState.data.filter((_, i) => i !== index)\n    }));\n  };\n\n  /** Listener for when the user wants to add a new coordinate */\n  addNewCoordinate = () => {\n    const newCoord =\n      this.state.data.length < 1\n        ? { x: 0, y: 0 }\n        : this.state.data.slice(-1)[0];\n\n    this.setState(prevState => ({ data: [...prevState.data, newCoord] }));\n  };\n\n  onSubmit = () => this.props.onSubmit(this.state.data);\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.isOpen}\n        onClose={this.props.onClose}\n        scroll=\"body\"\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Linear Sections</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please, enter the points to define the begin and end of each linear\n            section\n          </DialogContentText>\n          <div style={styles.center}>\n            <XYPlot width={300} height={300}>\n              <HorizontalGridLines />\n              <LineSeries\n                data={this.state.data}\n                xDomain={[0, 255]}\n                yDomain={[0, 255]}\n              />\n              <XAxis />\n              <YAxis />\n            </XYPlot>\n          </div>\n          <div style={styles.center}>\n            <Button\n              onClick={this.addNewCoordinate}\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Add new coordinate\n            </Button>\n          </div>\n\n          <div>\n            {this.state.data.map((coord, i) => (\n              <InputCoordinate\n                key={i}\n                coordinate={coord}\n                onChange={this.onDataChange(i)}\n                onDelete={this.onDataDelete(i)}\n              />\n            ))}\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.props.onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.onSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n","/**\n * Returns whether the given value is in range [min, max).\n * That is min <= value < max;\n *\n * @param {number} value  Value to check if it is in range\n * @param {number} min  Range minimum (inclusive)\n * @param {number} max  Range maximum (exclusive)\n */\nexport const isInRange = (value, min, max) => value >= min && value < max;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { isInRange } from \"../../../../../lib/Checks\";\n\nconst styles = {\n  inputsContainer: {\n    flexWrap: \"wrap\",\n    margin: \"1rem\"\n  },\n  input: {\n    margin: \"1rem\"\n  }\n};\n\n/**\n * Dialog to prompt the user for the new brightness and contrast for the new\n * image on the adjust brightness and contrast operation\n */\nexport default class BrightnessAndContrastDialog extends React.Component {\n  static propTypes = {\n    isOpen: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired\n  };\n\n  state = {\n    brightness: 0,\n    brightnessErrorMessage: \"\",\n    contrast: 0,\n    contrastErrorMessage: \"\"\n  };\n\n  /** General listener for a change on the brightness or contrast input */\n  onChange = (\n    e,\n    valueStateName,\n    errorMessageStateName,\n    minPossibleValue,\n    maxPossibleValue\n  ) => {\n    const value = Number.parseFloat(e.target.value);\n\n    if (!isInRange(value, minPossibleValue, maxPossibleValue + 1)) {\n      this.setState({\n        [valueStateName]: e.target.value,\n        [errorMessageStateName]: `Required a number between ${minPossibleValue} and ${maxPossibleValue}`\n      });\n    } else {\n      this.setState({\n        [valueStateName]: value,\n        [errorMessageStateName]: \"\"\n      });\n    }\n  };\n\n  /** Listener for when the user changes the brightness input value */\n  onBrightnessChange = e =>\n    this.onChange(e, \"brightness\", \"brightnessErrorMessage\", 0, 255);\n\n  /** Listener for when the user changes the contrast input value */\n  onContrastChange = e =>\n    this.onChange(e, \"contrast\", \"contrastErrorMessage\", 0, 128);\n\n  onSubmit = () =>\n    // TODO: if there is an error: show error message and don't submit\n    this.props.onSubmit(this.state.brightness, this.state.contrast);\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.isOpen}\n        onClose={this.props.onClose}\n        scroll=\"body\"\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          Brightness and Contrast Ajustment\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please, enter the brightness and contrast for the new image\n          </DialogContentText>\n          <div className=\"center\" style={styles.inputsContainer}>\n            <TextField\n              error={!!this.state.brightnessErrorMessage}\n              label={this.state.brightnessErrorMessage}\n              type=\"number\"\n              placeholder=\"0\"\n              value={this.state.brightness}\n              onChange={this.onBrightnessChange}\n              margin=\"dense\"\n              style={styles.input}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">Brightness: </InputAdornment>\n                )\n              }}\n            />\n            <TextField\n              error={!!this.state.contrastErrorMessage}\n              label={this.state.contrastErrorMessage}\n              type=\"number\"\n              placeholder=\"0\"\n              value={this.state.contrast}\n              onChange={this.onContrastChange}\n              margin=\"dense\"\n              style={styles.input}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">Contrast: </InputAdornment>\n                )\n              }}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.props.onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.onSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { isInRange } from \"../../../../../lib/Checks\";\n\nconst styles = {\n  inputsContainer: {\n    flexWrap: \"wrap\",\n    margin: \"1rem\"\n  },\n  input: {\n    margin: \"1rem\"\n  }\n};\n\n/**\n * Dialog to prompt the user for the gamma value for the new\n * image on the gamma correction operation\n */\nexport default class GammaCorrectionDialog extends React.Component {\n  static propTypes = {\n    isOpen: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired\n  };\n\n  state = {\n    gamma: 0,\n    gammaErrorMessage: \"\",\n  };\n\n  /** General listener for a change on the gamma input */\n  onChange = (e, valueStateName, errorMessageStateName, errorMessage) => {\n    const value = Number.parseFloat(e.target.value);\n\n    if (!isInRange(value, 0, Number.POSITIVE_INFINITY)) {\n      this.setState({\n        [valueStateName]: e.target.value,\n        [errorMessageStateName]: errorMessage\n      });\n    } else {\n      this.setState({\n        [valueStateName]: value,\n        [errorMessageStateName]: \"\"\n      });\n    }\n  };\n\n  /** Listener for when the user changes the gamma input value */\n  onGammaChange = e =>\n    this.onChange(\n      e,\n      \"gamma\",\n      \"gammaErrorMessage\",\n      \"Required a value equal or greater than 0\"\n    );\n\n  onSubmit = () =>\n    // TODO: if there is an error: show error message and don't submit\n    this.props.onSubmit(this.state.gamma);\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.isOpen}\n        onClose={this.props.onClose}\n        scroll=\"body\"\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          Gamma correction\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please, enter the gamma value for the new image\n          </DialogContentText>\n          <div className=\"center\" style={styles.inputsContainer}>\n            <TextField\n              error={!!this.state.gammaErrorMessage}\n              label={this.state.gammaErrorMessage}\n              type=\"number\"\n              placeholder=\"0\"\n              value={this.state.gamma}\n              onChange={this.onGammaChange}\n              margin=\"dense\"\n              style={styles.input}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">Gamma: </InputAdornment>\n                )\n              }}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.props.onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.onSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\n/**\n * Dialog to prompt the user for the image name of the image to do the\n * difference operation\n */\nexport default class ImageDifferenceDialog extends React.Component {\n  static propTypes = {\n    isOpen: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired\n  };\n\n  state = {\n    imgName: \"\"\n  };\n\n  onChange = e =>\n    this.setState({\n      imgName: e.target.value\n    });\n\n  onSubmit = () =>\n    this.props.onSubmit(this.state.imgName);\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.isOpen}\n        onClose={this.props.onClose}\n        scroll=\"body\"\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Image Difference</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please, enter the image name of the other image to perform the\n            difference to the current image\n          </DialogContentText>\n          <TextField\n            placeholder=\"Image 0\"\n            value={this.state.imgName}\n            onChange={this.onChange}\n            margin=\"dense\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">Name: </InputAdornment>\n              )\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.props.onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.onSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\n/**\n * Dialog to prompt the user for the image name of the image to do the\n * histogram specification\n */\nexport default class HistogramSpecificationDialog extends React.Component {\n  static propTypes = {\n    isOpen: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired\n  };\n\n  state = {\n    imgName: \"\"\n  };\n\n  onChange = e =>\n    this.setState({\n      imgName: e.target.value\n    });\n\n  onSubmit = () =>\n    this.props.onSubmit(this.state.imgName);\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.isOpen}\n        onClose={this.props.onClose}\n        scroll=\"body\"\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Histogram Specificacion</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please, enter the image name of the image with the histogram to perform the\n            histogram specification to the current image\n          </DialogContentText>\n          <TextField\n            placeholder=\"Image 0\"\n            value={this.state.imgName}\n            onChange={this.onChange}\n            margin=\"dense\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">Name: </InputAdornment>\n              )\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.props.onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.onSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { ChromePicker } from \"react-color\";\n\n/**\n * Dialog to prompt the user for the image name of the image to do the\n * changes detection, color and threshold\n */\nexport default class ChangesDetectionDialog extends React.Component {\n  static propTypes = {\n    isOpen: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired\n  };\n\n  state = {\n    imgName: \"\",\n    rgbaColor: { r: 255, g: 0, b: 0 },\n    threshold: \"\"\n  };\n\n  onImgNameChange = e =>\n    this.setState({\n      imgName: e.target.value\n    });\n\n  onThresholdChange = e => {\n    const newValue = Number.parseFloat(e.target.value);\n\n    this.setState({\n      threshold: Number.isFinite(newValue) ? newValue : \"\"\n    });\n  };\n\n  handleChangeComplete = color => this.setState({ rgbaColor: color.rgb });\n\n  onSubmit = () => {\n    const { imgName, rgbaColor, threshold } = this.state;\n    this.props.onSubmit({\n      imgName,\n      rgbaColor,\n      threshold: threshold === \"\" ? 0 : threshold\n    });\n  };\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.isOpen}\n        onClose={this.props.onClose}\n        scroll=\"body\"\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Changes Detection</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please, enter the image name of the other image to detect the\n            changes between them. Also enter the color which will be used to\n            highlight the differences and the difference threshold, value that\n            will determine what is considered a difference and what not\n          </DialogContentText>\n          <div className=\"center\" style={{ justifyContent: \"space-around\" }}>\n            <TextField\n              placeholder=\"Image 0\"\n              value={this.state.imgName}\n              onChange={this.onImgNameChange}\n              margin=\"dense\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">Name: </InputAdornment>\n                )\n              }}\n            />\n            <TextField\n              placeholder=\"0\"\n              type=\"number\"\n              value={this.state.threshold}\n              onChange={this.onThresholdChange}\n              margin=\"dense\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">Threshold: </InputAdornment>\n                )\n              }}\n            />\n          </div>\n          <div className=\"center\" style={{ marginTop: \"1rem\" }}>\n            <ChromePicker\n              color={this.state.rgbaColor}\n              onChangeComplete={this.handleChangeComplete}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.props.onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.onSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport LinearTransformationDialog from \"./Dialogs/LinearTransformationDialog\";\nimport BrightnessAndContrastDialog from \"./Dialogs/BrightnessAndContrastDialog\";\nimport GammaCorrectionDialog from \"./Dialogs/gammaCorrectionDialog\";\nimport ImageDifferenceDialog from \"./Dialogs/ImageDifferenceDialog\";\nimport HistogramSpecificationDialog from \"./Dialogs/HistogramSpecificationDialog\";\nimport ChangesDetectionDialog from \"./Dialogs/ChangesDetectionDialog\";\n\n/**\n * \"Point Operations\" Appbar Dropdown menu. Contains all the point operations\n * options that the user can choose\n */\nexport default class PointOperationsSubmenu extends React.Component {\n  static propTypes = {\n    onGrayscale: PropTypes.func.isRequired,\n    histogramEqualization: PropTypes.func.isRequired,\n    linearTransformation: PropTypes.func.isRequired,\n    brightnessAndContrastAdjustment: PropTypes.func.isRequired,\n    gammaCorrection: PropTypes.func.isRequired,\n    imagesDifference: PropTypes.func.isRequired,\n    histogramSpecification: PropTypes.func.isRequired,\n    changesDetection: PropTypes.func.isRequired\n  };\n\n  state = {\n    open: false,\n    isLinearTransformDialogOpen: false,\n    isLightnessAndContrastDialogOpen: false,\n    isGammaCorrectionDialogOpen: false,\n    isImageDifferenceDialogOpen: false,\n    isHistogramSpecificationDialogOpen: false,\n    isChangesDetectionDialogOpen: false\n  };\n\n  handleDialogOpen = dialogStateName => () =>\n    this.setState({ open: false, [dialogStateName]: true });\n\n  handleDialogClose = dialogStateName => () =>\n    this.setState({ [dialogStateName]: false });\n\n  handleToggle = () => {\n    this.setState(state => ({ open: !state.open }));\n  };\n\n  handleClose = event => {\n    if (this.anchorEl.contains(event.target)) {\n      return;\n    }\n\n    this.setState({ open: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <Button\n          buttonRef={node => {\n            this.anchorEl = node;\n          }}\n          aria-owns={this.state.open ? \"file-menu-list-grow\" : undefined}\n          aria-haspopup=\"true\"\n          onClick={this.handleToggle}\n          color=\"inherit\"\n        >\n          Point Operations\n        </Button>\n        <Popper\n          open={this.state.open}\n          anchorEl={this.anchorEl}\n          transition\n          disablePortal\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              id=\"file-menu-list-grow\"\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\"\n              }}\n            >\n              <Paper onClick={this.handleClose}>\n                <ClickAwayListener onClickAway={this.handleClose}>\n                  <MenuList>\n                    <MenuItem onClick={this.props.onGrayscale}>\n                      To Grayscale\n                    </MenuItem>\n                    <MenuItem\n                      onClick={this.handleDialogOpen(\n                        \"isLinearTransformDialogOpen\"\n                      )}\n                    >\n                      Linear Transformation\n                    </MenuItem>\n                    <MenuItem\n                      onClick={this.handleDialogOpen(\n                        \"isLightnessAndContrastDialogOpen\"\n                      )}\n                    >\n                      Brightness and Contrast Adjustment\n                    </MenuItem>\n                    <MenuItem\n                      onClick={this.handleDialogOpen(\n                        \"isGammaCorrectionDialogOpen\"\n                      )}\n                    >\n                      Gamma Correction\n                    </MenuItem>\n                    <MenuItem\n                      onClick={this.handleDialogOpen(\n                        \"isImageDifferenceDialogOpen\"\n                      )}\n                    >\n                      Images Difference\n                    </MenuItem>\n                    <MenuItem\n                      onClick={this.handleDialogOpen(\n                        \"isChangesDetectionDialogOpen\"\n                      )}\n                    >\n                      Changes Detection\n                    </MenuItem>\n                    <MenuItem\n                      onClick={this.handleDialogOpen(\n                        \"isHistogramSpecificationDialogOpen\"\n                      )}\n                    >\n                      Histogram Specification\n                    </MenuItem>\n                    <MenuItem onClick={this.props.histogramEqualization}>\n                      Histogram Equalization\n                    </MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n        <LinearTransformationDialog\n          isOpen={this.state.isLinearTransformDialogOpen}\n          onClose={this.handleDialogClose(\"isLinearTransformDialogOpen\")}\n          onSubmit={coordinates => {\n            this.handleDialogClose(\"isLinearTransformDialogOpen\")();\n            this.props.linearTransformation(coordinates);\n          }}\n        />\n        <BrightnessAndContrastDialog\n          isOpen={this.state.isLightnessAndContrastDialogOpen}\n          onClose={this.handleDialogClose(\"isLightnessAndContrastDialogOpen\")}\n          onSubmit={(brightness, contrast) => {\n            this.handleDialogClose(\"isLightnessAndContrastDialogOpen\")();\n            this.props.brightnessAndContrastAdjustment(brightness, contrast);\n          }}\n        />\n        <GammaCorrectionDialog\n          isOpen={this.state.isGammaCorrectionDialogOpen}\n          onClose={this.handleDialogClose(\"isGammaCorrectionDialogOpen\")}\n          onSubmit={gammaValue => {\n            this.handleDialogClose(\"isGammaCorrectionDialogOpen\")();\n            this.props.gammaCorrection(gammaValue);\n          }}\n        />\n        <ImageDifferenceDialog\n          isOpen={this.state.isImageDifferenceDialogOpen}\n          onClose={this.handleDialogClose(\"isImageDifferenceDialogOpen\")}\n          onSubmit={imgName => {\n            this.handleDialogClose(\"isImageDifferenceDialogOpen\")();\n            this.props.imagesDifference(imgName);\n          }}\n        />\n        <HistogramSpecificationDialog\n          isOpen={this.state.isHistogramSpecificationDialogOpen}\n          onClose={this.handleDialogClose(\"isHistogramSpecificationDialogOpen\")}\n          onSubmit={imgName => {\n            this.handleDialogClose(\"isHistogramSpecificationDialogOpen\")();\n            this.props.histogramSpecification(imgName);\n          }}\n        />\n        <ChangesDetectionDialog\n          isOpen={this.state.isChangesDetectionDialogOpen}\n          onClose={this.handleDialogClose(\"isChangesDetectionDialogOpen\")}\n          onSubmit={userInput => {\n            this.handleDialogClose(\"isChangesDetectionDialogOpen\")();\n            this.props.changesDetection(userInput);\n          }}\n        />\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport FileSubmenu from \"./Submenus/FileSubmenu\";\nimport ImageSubmenu from \"./Submenus/ImageSubmenu\";\nimport PointOperationsSubmenu from \"./Submenus/PointOperationsSubmenu\";\n\nconst AppToolbar = props => (\n  <AppBar position=\"static\">\n    <Toolbar>\n      <FileSubmenu\n        onFileInput={props.onFileInput}\n        onDownload={props.onDownload}\n      />\n      <ImageSubmenu\n        onShowHistogram={props.onShowHistogram}\n        onCrop={props.onCrop}\n      />\n      <PointOperationsSubmenu\n        onGrayscale={props.onGrayscale}\n        histogramEqualization={props.histogramEqualization}\n        linearTransformation={props.linearTransformation}\n        brightnessAndContrastAdjustment={props.brightnessAndContrastAdjustment}\n        gammaCorrection={props.gammaCorrection}\n        imagesDifference={props.imagesDifference}\n        histogramSpecification={props.histogramSpecification}\n        changesDetection={props.changesDetection}\n      />\n    </Toolbar>\n  </AppBar>\n);\n\nAppToolbar.propTypes = {\n  onFileInput: PropTypes.func.isRequired,\n  onDownload: PropTypes.func.isRequired,\n  onShowHistogram: PropTypes.func.isRequired,\n  onCrop: PropTypes.func.isRequired,\n  onGrayscale: PropTypes.func.isRequired,\n  histogramEqualization: PropTypes.func.isRequired,\n  linearTransformation: PropTypes.func.isRequired,\n  brightnessAndContrastAdjustment: PropTypes.func.isRequired,\n  gammaCorrection: PropTypes.func.isRequired,\n  imagesDifference: PropTypes.func.isRequired,\n  histogramSpecification: PropTypes.func.isRequired,\n  changesDetection: PropTypes.func.isRequired\n};\n\nexport default AppToolbar;\n\n//                 <a className=\"navbar-item\" href=\"https://github.com/carlosdg/ImageProcessor.git\">\n//                     <img alt=\"logo\" src=\"https://i.imgur.com/DckFstm.png\" height=\"50\"/>\n//                 </a>\n","import RgbaImageBuffer from \"../lib/RgbaImageBuffer\";\n\n/**\n * Class to represent an image histogram. Each image has associated histograms\n * which describes the way that its pixels values are distributed.\n *\n * An object of this class wraps the values of the histogram besides some useful\n * information.\n */\nexport default class Histogram {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {RgbaImageBuffer} imagePixels Image Buffer to create the histogram\n   * for\n   */\n  constructor(imagePixels) {\n    this.setImagePixels(imagePixels.pixels);\n  }\n\n  /**\n   * Sets the pixels values of the associated image and extracts histogram\n   * values and useful information.\n   */\n  setImagePixels(imagePixels) {\n    this.histogramValues = new Array(256).fill(0);\n    for (let i = 0; i < imagePixels.length; i += RgbaImageBuffer.NUM_CHANNELS) {\n      this.histogramValues[imagePixels[i]]++;\n    }\n\n    this.histogramInfo = {};\n    this.histogramInfo.count = this.histogramValues.reduce(\n      (previousValue, currentElement) => previousValue + currentElement,\n      0\n    );\n\n    this.histogramInfo.mean =\n      this.histogramValues.reduce(\n        (previousValue, currentElement, index) =>\n          previousValue + currentElement * index,\n        0\n      ) / this.histogramInfo.count;\n\n    this.histogramInfo.stdDev = Math.sqrt(\n      this.histogramValues.reduce(\n        (previousValue, currentElement, index) =>\n          previousValue +\n          Math.pow(index - this.histogramInfo.mean, 2) * currentElement,\n        0\n      ) / this.histogramInfo.count\n    );\n\n    for (let i = 0; i < this.histogramValues.length; ++i) {\n      if (this.histogramValues[i] !== 0) {\n        this.histogramInfo.minValue = i;\n        break;\n      }\n    }\n\n    for (let i = this.histogramValues.length - 1; i >= 0; --i) {\n      if (this.histogramValues[i] !== 0) {\n        this.histogramInfo.maxValue = i;\n        break;\n      }\n    }\n\n    let maxIndex = 0;\n    let maxCount = 0;\n    this.histogramValues.forEach((count, value) => {\n      if (count > maxCount) {\n        maxCount = count;\n        maxIndex = value;\n      }\n    });\n\n    this.histogramInfo.mode = {};\n    this.histogramInfo.mode.value = maxIndex;\n    this.histogramInfo.mode.count = maxCount;\n\n    let entropy = 0;\n    let probability;\n    for (let i = 0; i < 256; ++i) {\n      probability = this.histogramValues[i] / this.histogramInfo.count;\n      if (probability > 0) {\n        entropy += probability * Math.log2(probability);\n      }\n    }\n    if (entropy !== 0)\n      entropy *= -1;\n\n    this.histogramInfo.entropy = entropy.toFixed(3);\n  }\n}\n","import RgbaImageBuffer from \"../RgbaImageBuffer\";\n\n/**\n * Returns the given pixels converted to grayscale, according to the given\n * grayscale strategy\n *\n * @param {RgbaImageBuffer} imgBuffer Image Buffer base to create the grayscale\n * image from\n * @param {Function} grayscaleStrategy Method used to convert to grayscale.\n * Defaults to Phase Alternating Line\n * @returns {RgbaImageBuffer} Image buffer in grayscale\n */\nexport const imageToGrayscale = (\n  imgBuffer,\n  grayscaleStrategy = pixelToGrayscalePal\n) => {\n  const result = imgBuffer.copy();\n\n  for (let i = 0; i < result.pixels.length; i += RgbaImageBuffer.NUM_CHANNELS) {\n    const rComponent = imgBuffer.pixels[i];\n    const gComponent = imgBuffer.pixels[i + 1];\n    const bComponent = imgBuffer.pixels[i + 2];\n    const grayValue = grayscaleStrategy(rComponent, gComponent, bComponent);\n\n    result.pixels[i] = grayValue;\n    result.pixels[i + 1] = grayValue;\n    result.pixels[i + 2] = grayValue;\n  }\n\n  return result;\n};\n\n/** Returns the given pixel to grayscale according to Phase Alternating Line */\nexport const pixelToGrayscalePal = (rComponent, gComponent, bComponent) =>\n  Math.round(rComponent * 0.222 + gComponent * 0.707 + bComponent * 0.071);\n","import RgbaImageBuffer from \"../RgbaImageBuffer\";\n\n/**\n * Transforms an image according to the given lookup table.\n *\n * @param {RgbaImageBuffer} imgBuffer Image to transform\n * @param {Array} lookupTable Lookup table\n * @returns {RgbaImageBuffer} Transformed image\n */\nexport const transformImage = (imgBuffer, lookupTable) => {\n  let result = imgBuffer.copy();\n  for (let i = 0; i < result.pixels.length; i += RgbaImageBuffer.NUM_CHANNELS) {\n    let newValue = lookupTable[result.pixels[i]];\n    result.pixels[i] = newValue;\n    result.pixels[i + 1] = newValue;\n    result.pixels[i + 2] = newValue;\n  }\n\n  return result;\n};","/**\n * Class to represent image load errors\n */\nexport default class ImageLoadException extends Error {\n  /**\n   * Creates an instance of this class\n   *\n   * @param {string} errorImageSrc Source of the image that caused the error\n   */\n  constructor(errorImageSrc) {\n    super(`Error loading image with src = ${errorImageSrc}`);\n    this.name = \"ImageLoadException\";\n    this.src = errorImageSrc;\n  }\n}\n","/**\n * Exception class representing out of bounds exceptions. Used to know that some\n * value is not in a range that was supposed to be\n */\nexport default class ValueOutOfBoundsException extends Error {\n  constructor(valueOutOfBounds, boundMinimum, boundMaximum) {\n    super(\n      `${valueOutOfBounds} must be between ${boundMinimum} and ${boundMaximum}`\n    );\n\n    this.name = \"ValueOutOfBoundsException\";\n    this.valueOutOfBounds = valueOutOfBounds;\n    this.boundMinimum = boundMinimum;\n    this.boundMaximum = boundMaximum;\n  }\n}\n","/**\n * Exception class representing image operations errors.\n */\nexport default class ImageOperationException extends Error {\n  constructor(exceptionName, message) {\n    super(message);\n    this.name = exceptionName;\n  }\n}","import { transformImage } from \"./transformImage\";\nimport {ImageOperationException} from \"../Exceptions\";\n\n/**\n * Transforms the given image according to the linear sections\n * conformed by the given points\n *\n * @param {RgbaImageBuffer} imgBuffer Image to transform\n * @param {Array} points Contains the points which defines\n * the sections of the linear transformation\n * @returns {RgbaImageBuffer} Transformed image\n */\nexport const linearTransformation = (\n  imgBuffer,\n  points\n) => {\n  if (points.length < 2)\n    throw new ImageOperationException(\n      \"LinearTransformationException\",\n      \"Linear transformation needs at least 2 points\"\n    );\n  \n  for (let i = 0; i < points.length - 1; ++i) {\n    if (points[i].x > points[i + 1].x)\n      throw new ImageOperationException(\n        \"LinearTransformationException\",\n        \"Points must be ordered according to the x coordinate value\"\n      );\n    \n    if (points[i].x === points[i + 1].x)\n      throw new ImageOperationException(\n        \"LinearTransformationException\",\n        \"Different points should not have the same x coordinate value\"\n      );\n  }\n  \n  if (points[0].x > 0)\n    throw new ImageOperationException(\n      \"LinearTransformationException\",\n      \"X coordinate value of the first point should be less or equal to 0\"\n    );\n\n  if (points[points.length - 1].x < 255)\n    throw new ImageOperationException(\n      \"LinearTransformationException\",\n      \"X coordinate value of the last point should be greater or equal to 255\"\n    );\n\n  let sections = [];\n  for (let i = 1; i < points.length; ++i) {\n    let newSection = {};\n    newSection[\"slope\"] = (points[i].y - points[i - 1].y) / (points[i].x - points[i - 1].x);\n    newSection[\"yIntercept\"] = points[i].y - newSection.slope * points[i].x;\n    newSection[\"frontier\"] = points[i].x;\n    sections.push(newSection);\n  }\n\n  let lookupTable = [];\n  let currentSectionIndex = 0;\n  for (let i = 0; i < 256; ++i) {\n    if (i > sections[currentSectionIndex].frontier)\n      currentSectionIndex++;\n    \n    let newValue = Math.round(\n      sections[currentSectionIndex].slope * i + sections[currentSectionIndex].yIntercept\n    );\n    lookupTable.push(Math.min(Math.max(newValue, 0), 255));\n  }\n  \n  return transformImage(imgBuffer, lookupTable);\n};","import { transformImage } from \"./transformImage\";\n\n/**\n * Changes the contrast and the brightness of the given image\n *\n * @param {RgbaImageBuffer} imgBuffer Image to transform\n * @param {Number} oldBrightness Previous brightness of the image\n * @param {Number} oldContrast Previous contrast of the image\n * @param {Number} newBrightness New brightness of the image\n * @param {Number} newContrast New contrast of the image\n * @returns {RgbaImageBuffer} Transformed image\n */\nexport const brightnessAndContrastAdjustment = (\n  imgBuffer,\n  oldBrightness,\n  oldContrast,\n  newBrightness,\n  newContrast\n) => {\n  // TODO check parameters\n  const A = newContrast / oldContrast;\n  const B = newBrightness - A * oldBrightness; \n  let lookupTable = [];\n\n  for (let i = 0; i < 256; ++i) {\n    let newValue = Math.round(A * i + B);\n    lookupTable.push(Math.min(Math.max(newValue, 0), 255));\n  }\n\n  return transformImage(imgBuffer, lookupTable);\n}","import { transformImage } from \"./transformImage\";\nimport {ImageOperationException} from \"../Exceptions\";\n\n/**\n * Applies gamma correction to the given image\n *\n * @param {RgbaImageBuffer} imgBuffer Image to transform\n * @param {Number} gammaValue Gamma value for gamma correction\n * @returns {RgbaImageBuffer} Transformed image\n */\nexport const gammaCorrection = (\n  imgBuffer,\n  gammaValue\n) => {\n\n  if (gammaValue < 0)\n    throw new ImageOperationException(\"GammaCorrectionException\", \"Invalid gamma value, gamma should be equal or greater than 0.\");\n  \n  let lookupTable = [];\n  for (let i = 0; i < 256; ++i) {\n    lookupTable[i] = (Math.pow(i / 255, gammaValue)) * 255;\n  }\n\n  return transformImage(imgBuffer, lookupTable);\n}","import RgbaImageBuffer from \"../RgbaImageBuffer\";\nimport {ImageOperationException} from \"../Exceptions\";\n\n/**\n * Calculates the difference (absolute value) between two images\n * \n * @param {RgbaImageBuffer} firstImgBuffer First image\n * @param {RgbaImageBuffer} secondImgBuffer Second image\n * @returns {RgbaImageBuffer} Result image\n */\nexport const imagesDifference = (\n  firstImgBuffer,\n  secondImgBuffer\n) => {\n\n  if (firstImgBuffer.height !== secondImgBuffer.height ||\n      firstImgBuffer.width  !== secondImgBuffer.width)\n      throw new ImageOperationException(\"ImagesDifferenceException\", \"Images should have the same width and height\");\n\n  const result = firstImgBuffer.copy();\n\n  for (let i = 0; i < result.pixels.length; i += RgbaImageBuffer.NUM_CHANNELS) {\n    let newValue = Math.abs(result.pixels[i] - secondImgBuffer.pixels[i]);\n    result.pixels[i] = newValue;\n    result.pixels[i + 1] = newValue;\n    result.pixels[i + 2] = newValue;\n  }\n\n  return result;\n}","import RgbaImageBuffer from \"../RgbaImageBuffer\";\nimport {ImageOperationException} from \"../Exceptions\";\nimport {imagesDifference} from \"./imagesDifference\";\n\n/**\n * Detects and highlights the changes of two images\n * according to the given threshold\n * \n * @param {RgbaImageBuffer} firstImgBuffer First image\n * @param {RgbaImageBuffer} secondImgBuffer Second image\n * @param {Number} threshold Threshold for considering a change as a important change\n * @param {Object} changeHighlightColor Color for highlight pixels considered as a change\n * @returns {RgbaImageBuffer} Changes map\n */\nexport const changesDetection = (\n  firstImgBuffer,\n  secondImgBuffer,\n  threshold,\n  changeHighlightColor\n) => {\n\n  let difference;\n  try {\n    difference = imagesDifference(firstImgBuffer, secondImgBuffer);\n  } catch (error) {\n    if (error.name === \"ImagesDifferenceException\")\n      throw new ImageOperationException(\"ChangesDetectionException\", error.message);\n    else\n      throw error;\n  }\n\n  const result = firstImgBuffer.copy();\n\n  for (let i = 0; i < result.pixels.length; i += RgbaImageBuffer.NUM_CHANNELS) {\n    if (difference.pixels[i] > threshold) {\n      result.pixels[i] = changeHighlightColor.r;\n      result.pixels[i + 1] = changeHighlightColor.g;\n      result.pixels[i + 2] = changeHighlightColor.b;\n    }\n  }\n\n  return result;\n}","import { transformImage } from \"./transformImage\";\n\n/**\n * Applies histogram specification operation to the given image.\n * It expects the image to transform, its cumulative histogram\n * and the cumulative histogram of the target image.\n *\n * @param {RgbaImageBuffer} imgBuffer Image to transform\n * @param {CumulativeHistogram} originImageCHistogram Cumulative histogram of imgBuffer\n * @param {CumulativeHistogram} targetImageCHistogram Cumulative histogram of target image\n * @returns {RgbaImageBuffer} Transformed image\n */\nexport const histogramSpecification = (\n  imgBuffer,\n  originImageCHistogram,\n  targetImageCHistogram\n) => {\n\n  let normalizedOriginImageCHistogram =\n    originImageCHistogram.counts.map( value =>\n      value / originImageCHistogram.count\n    );\n  \n  let normalizedTargetImageCHistogram =\n    targetImageCHistogram.counts.map( value =>\n      value / targetImageCHistogram.count\n    );\n\n  let lookupTable = [];\n  for (let i = 0; i < 256; ++i) {\n    let j = 255;\n    while(j >= 0 && \n      normalizedOriginImageCHistogram[i] <=\n      normalizedTargetImageCHistogram[j]) {\n\n      j = j - 1;\n    }\n    lookupTable.push(j);\n  }\n\n  return transformImage(imgBuffer, lookupTable);\n}","import { transformImage } from \"./transformImage\";\n\n/**\n * Applies histogram equalization operation to the given image.\n *\n * @param {RgbaImageBuffer} imgBuffer Image to transform\n * @param {CumulativeHistogram} imageCHistogram Cumulative histogram of the image\n * @returns {RgbaImageBuffer} Transformed image\n */\nexport const histogramEqualization = (\n  imgBuffer,\n  imageCHistogram\n) => {\n\n  let equalizationLevel = imageCHistogram.count / 256;\n  let lookupTable = [];\n  for (let i = 0; i < 256; ++i) {\n    lookupTable.push(\n      Math.max(\n        0, \n        Math.round(imageCHistogram.counts[i] / equalizationLevel) - 1\n      )\n    );\n  }\n\n  return transformImage(imgBuffer, lookupTable);\n}","import RgbaImageBuffer from \"../RgbaImageBuffer\";\n\n/**\n * Returns an image buffer of the given region of the given buffer\n *\n * @param {RgbaImageBuffer} imgBuffer Buffer of the image to crop\n * @param {Object} region Region specifying where to crop the given buffer\n * @param {number} region.top Pixel in the y axis where the new image must start\n * @param {number} region.left Pixel in the x axis where the new image must\n * start\n * @param {number} region.height Height of the new image\n * @param {number} region.width Width of the new image\n */\nexport const crop = (\n  imgBuffer,\n  { top = 0, left = 0, height = imgBuffer.height, width = imgBuffer.width } = {}\n) => {\n  const resultPixels = new Uint8ClampedArray(\n    height * width * RgbaImageBuffer.NUM_CHANNELS\n  );\n  let currentIndex = 0;\n\n  for (let yOffset = 0; yOffset < height; yOffset += 1) {\n    for (let xOffset = 0; xOffset < width; xOffset += 1) {\n      const pixel = imgBuffer.getPixel({ x: left + xOffset, y: top + yOffset });\n      resultPixels[currentIndex] = pixel[0];\n      resultPixels[currentIndex + 1] = pixel[1];\n      resultPixels[currentIndex + 2] = pixel[2];\n      resultPixels[currentIndex + 3] = pixel[3];\n      currentIndex += RgbaImageBuffer.NUM_CHANNELS;\n    }\n  }\n\n  return new RgbaImageBuffer(width, height, resultPixels);\n};\n","import { ImageLoadException } from \"./Exceptions\";\n\n/**\n * Returns an promise that resolves with\n * an image when it is loaded from the given source\n *\n * @param {string} src Image source\n * @returns {Promise<Image>} Image element after the content has\n * been loaded\n */\nexport function load(src) {\n  const image = new Image();\n  image.src = src;\n\n  return new Promise((resolve, reject) => {\n    image.onload = () => resolve(image);\n    image.onerror = () => reject(new ImageLoadException(src));\n  });\n}\n\n/**\n * Given a File, Blob object or any other object accepted by\n * `URL.createObjectURL`, returns the image loaded from the\n * object source\n *\n * @param {Object} obj Object to get the image source URL\n */\nexport function loadFromObject(obj) {\n  const src = URL.createObjectURL(obj);\n  return load(src).finally(() => URL.revokeObjectURL(src));\n}\n","import GRID_PROPERTIES from \"./gridProperties\";\n\n/**\n * Returns an emoty object of layouts for different viewport sizes, as defined\n * in GRID_PROPERTIES.\n */\nconst createNewSetOfLayouts = () => {\n  const layouts = {};\n\n  Object.keys(GRID_PROPERTIES.GRID_COLUMNS).forEach(\n    layoutName => (layouts[layoutName] = [])\n  );\n\n  return layouts;\n};\n\n/**\n * Returns an object defining the default information for being part of a grid\n * layout\n */\nconst createNewElementLayoutInfo = id => ({\n  i: id,\n  x: 0,\n  y: Infinity,\n  w: GRID_PROPERTIES.DEFAULT_GRID_ITEM_COLS,\n  h: GRID_PROPERTIES.DEFAULT_GRID_ITEM_ROWS,\n  minW: GRID_PROPERTIES.DEFAULT_GRID_ITEM_COLS,\n  minH: GRID_PROPERTIES.DEFAULT_GRID_ITEM_ROWS\n});\n\n/**\n * Returns a new set set of layouts resulting from adding a default layout\n * information for the new elements with the given IDs\n *\n * @param {Object} currentLayouts Layouts object to where the new element\n * information is going to be added\n * @param {Array<String | number>} newElementsIds IDs of the elements to add to\n * the layout\n */\nconst addNewElementsToLayouts = (currentLayouts, newElementsIds) => {\n  const newElementsLayoutInfos = newElementsIds.map(createNewElementLayoutInfo);\n  const newLayouts = createNewSetOfLayouts();\n\n  Object.keys(currentLayouts).forEach(layoutName => {\n    newLayouts[layoutName] = currentLayouts[layoutName].concat(\n      newElementsLayoutInfos\n    );\n  });\n\n  return newLayouts;\n};\n\n/**\n * Returns a new set of layouts without the elements with the given IDs\n *\n * @param {Object} currentLayouts Layouts object\n * @param {Array<String | number>} ids IDs of the elements to remove\n */\nconst removeElementsFromLayout = (currentLayouts, ids) => {\n  const newLayouts = {};\n\n  Object.keys(currentLayouts).forEach(layoutName => {\n    newLayouts[layoutName] = currentLayouts[layoutName].filter(\n      ({ i }) => !ids.includes(i)\n    );\n  });\n\n  return newLayouts;\n};\n\nexport {\n  createNewSetOfLayouts,\n  addNewElementsToLayouts,\n  removeElementsFromLayout\n};\n","/**\n * Class to represent an image cumulative histogram.\n */\nexport default class CumulativeHistogram {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Array} histogram Array of values of the histogram to create the\n   * cumulative from\n   */\n  constructor(histogram) {\n    let count = 0;\n\n    this.counts = histogram.map(value => {\n      count += value;\n      return count;\n    });\n    this.count = count;\n  }\n}\n","import React, { Component } from \"react\";\nimport InteractiveGrid from \"../InteractiveGrid\";\nimport ImageComponent from \"../ImageComponent\";\nimport HistogramAndInfoComponent from \"../HistogramAndInfoComponent\";\nimport AppToolbar from \"../Toolbar\";\nimport Histogram from \"../../lib/Histogram\";\nimport { imageToGrayscale } from \"../../lib/ImageProcessing/grayscale\";\nimport { linearTransformation } from \"../../lib/ImageProcessing/linearTransformation\";\nimport { brightnessAndContrastAdjustment } from \"../../lib/ImageProcessing/brightnessAndContrastAdjustment\";\nimport { gammaCorrection } from \"../../lib/ImageProcessing/gammaCorrection\";\nimport { imagesDifference } from \"../../lib/ImageProcessing/imagesDifference\";\nimport { changesDetection } from \"../../lib/ImageProcessing/changesDetection\";\nimport { histogramSpecification } from \"../../lib/ImageProcessing/histogramSpecification\";\nimport { histogramEqualization } from \"../../lib/ImageProcessing/histogramEqualization\";\nimport { crop } from \"../../lib/ImageProcessing/crop\";\nimport * as ImageHelper from \"../../lib/imageHelper\";\nimport * as GridLayoutHelper from \"../../lib/grid/calculateLayout\";\nimport RgbaImageBuffer from \"../../lib/RgbaImageBuffer\";\nimport CumulativeHistogram from \"../../lib/CumulativeHistogram\";\nimport \"./App.css\";\nimport { withSnackbar } from \"notistack\";\n\nclass App extends Component {\n  state = {\n    /** All the information relative to the images loaded */\n    imagesInfos: [],\n    /** All the information relative to the histograms of each image */\n    histogramInfos: [],\n    /** Grid layouts for the elements on screen */\n    gridLayouts: GridLayoutHelper.createNewSetOfLayouts(),\n    /** Information of the current grid item being selected (item type & index) */\n    selectedGridItem: { type: \"\", index: -1 },\n    /** Coordenates of the pixel that was last being pointed by the mouse */\n    pixelCoords: { x: 0, y: 0 },\n    /** Value of the pixel that was last being pointed by the mouse */\n    pixelValue: [0, 0, 0, 255],\n    /** Amount of removed images, needed for proper indexing images on the grid */\n    removedImagesCount: 0\n  };\n\n  /**\n   * Notify the user of the given message with the given type\n   *\n   * @param {String} messageType Message type (error, warning, info, success)\n   * @param {String} message  Message to show to the user\n   *\n   */\n  notify = (messageType, message) => {\n    // \"enqueueSnackbar\" is provided by the \"withSnackbar\" Higher Order\n    // Component\n    this.props.enqueueSnackbar(message, {\n      variant: messageType\n    });\n  };\n\n  /** Callback that updates the pixel value and coordinates currently under the\n   * user's mouse */\n  onMouseMoveOverImage = (pixelCoords, pixelValue) => {\n    this.setState({ pixelCoords, pixelValue });\n  };\n\n  /** Returns a callback that updates the region of the asked image info */\n  onImageRegionSelection = index => newRegion => {\n    this.setState(prevState => ({\n      imagesInfos: prevState.imagesInfos.map((info, i) =>\n        i === index ? { ...info, region: newRegion } : info\n      )\n    }));\n  };\n\n  /**  Adds all the information related to the given image buffer to the app */\n  addNewImage = imageBuffer => {\n    // TODO: Update the Histogram so it doesn't need grayscale images\n    const imageSection = {\n      top: 0,\n      left: 0,\n      width: imageBuffer.width,\n      height: imageBuffer.height\n    };\n    const histogram = new Histogram(imageToGrayscale(imageBuffer));\n    const cHistogram = new CumulativeHistogram(histogram.histogramValues);\n    const imageKey = `Image ${this.state.imagesInfos.length +\n      this.state.removedImagesCount}`;\n    const histogramKey = `Histogram ${this.state.histogramInfos.length +\n      this.state.removedImagesCount}`;\n\n    this.setState(prevState => ({\n      imagesInfos: prevState.imagesInfos.concat([\n        { key: imageKey, imageBuffer, region: imageSection }\n      ]),\n      histogramInfos: prevState.histogramInfos.concat([\n        { key: histogramKey, histogram, cHistogram, visible: false }\n      ]),\n      gridLayouts: GridLayoutHelper.addNewElementsToLayouts(\n        prevState.gridLayouts,\n        [imageKey]\n      )\n    }));\n  };\n\n  /** Listener for a file input event to load the input image to the application */\n  onNewImageFromFile = event => {\n    const files = event.target.files;\n\n    if (files.length !== 1 || !files[0]) {\n      this.notify(\"error\", \"Error reading image file\");\n      return;\n    }\n\n    // Try to get the image and draw it to the canvas. If there is an error\n    // update the state.error\n    ImageHelper.loadFromObject(files[0])\n      .then(image => {\n        const canvas = document.createElement(\"canvas\");\n        const context = canvas.getContext(\"2d\");\n\n        canvas.width = image.naturalWidth;\n        canvas.height = image.naturalHeight;\n        context.drawImage(image, 0, 0);\n\n        const imgData = context.getImageData(0, 0, canvas.width, canvas.height);\n        const imageBuffer = RgbaImageBuffer.fromImageData(imgData);\n        this.addNewImage(imageBuffer);\n      })\n      .catch(() => {\n        this.notify(\"error\", \"Could not load image\");\n      });\n  };\n\n  /** Returns whether the given item is selected or not */\n  isGridItemSelected = (type, index) =>\n    this.state.selectedGridItem.index === index &&\n    this.state.selectedGridItem.type === type;\n\n  /** When the user resizes or moves a grid item, we need to update the layout\n   * state */\n  onGridLayoutChange = (_, newLayouts) =>\n    requestAnimationFrame(() => this.setState({ gridLayouts: newLayouts }));\n\n  /** Returns a function that, when the user selects an image grid item, updates\n   * the selected item state */\n  onGridItemSelection = type => index =>\n    this.setState({ selectedGridItem: { type, index } });\n\n  /** Removes the image in the given position and all its related information\n   * like the histogram */\n  deleteAllImageRelatedInfo = index => {\n    this.setState(prevState => {\n      const newLayouts = GridLayoutHelper.removeElementsFromLayout(\n        prevState.gridLayouts,\n        [prevState.histogramInfos[index].key, prevState.imagesInfos[index].key]\n      );\n      let newSelectedItem = { ...prevState.selectedGridItem };\n\n      // We are removing an element from an array, we have to update the\n      // selected item index if it is the element removed or after it\n      if (index <= newSelectedItem.index) {\n        newSelectedItem.index -= 1;\n        if (newSelectedItem.index < 0) {\n          newSelectedItem.type = \"\";\n        }\n      }\n\n      return {\n        histogramInfos: prevState.histogramInfos.filter((_, i) => i !== index),\n        imagesInfos: prevState.imagesInfos.filter((_, i) => i !== index),\n        gridLayouts: newLayouts,\n        selectedGridItem: newSelectedItem,\n        removedImagesCount: prevState.removedImagesCount + 1\n      };\n    });\n  };\n\n  /** Hides the given histogram from the view */\n  hideHistogram = index => {\n    // Set the visibility to false, remove its layout information and resets the\n    // current selected item if it was the histogram to hide\n    this.setState(prevState => ({\n      histogramInfos: prevState.histogramInfos.map((histogramInfo, i) =>\n        i === index\n          ? { ...histogramInfo, visible: false }\n          : { ...histogramInfo }\n      ),\n      gridLayouts: GridLayoutHelper.removeElementsFromLayout(\n        prevState.gridLayouts,\n        [prevState.histogramInfos[index].key]\n      ),\n      selectedGridItem: this.isGridItemSelected(\"histogram\", index)\n        ? { type: \"\", index: -1 }\n        : prevState.selectedGridItem\n    }));\n  };\n\n  showHistogramOfCurrentImage = () => {\n    const { type, index } = this.state.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      this.notify(\"warning\", \"You first need to select an image\");\n    } else {\n      this.setState(prevState => ({\n        histogramInfos: prevState.histogramInfos.map((histogramInfo, i) =>\n          i === index\n            ? { ...histogramInfo, visible: true }\n            : { ...histogramInfo }\n        ),\n        gridLayouts: GridLayoutHelper.addNewElementsToLayouts(\n          prevState.gridLayouts,\n          [prevState.histogramInfos[index].key]\n        )\n      }));\n    }\n  };\n\n  /** Downloads the selected region of the current selected image if any */\n  downloadCurrentImage = () => {\n    const { type, index } = this.state.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      this.notify(\"warning\", \"You first need to select an image\");\n    } else {\n      const imgInfo = this.state.imagesInfos[index];\n      const { left, top, width, height } = imgInfo.region;\n      const imageData = imgInfo.imageBuffer.toImageData();\n      const canvas = document.createElement(\"canvas\");\n      const context = canvas.getContext(\"2d\");\n\n      canvas.width = imageData.width;\n      canvas.height = imageData.height;\n      context.putImageData(imageData, 0, 0, left, top, width, height);\n\n      canvas.toBlob(\n        blob => {\n          const imgUrl = URL.createObjectURL(blob);\n          this.refs.downloadAnchor.href = imgUrl;\n          this.refs.downloadAnchor.click();\n          URL.revokeObjectURL(imgUrl);\n        },\n        null,\n        1\n      );\n    }\n  };\n\n  currentImageToGrayscale = () => {\n    const { type, index } = this.state.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      this.notify(\"warning\", \"You first need to select an image\");\n    } else {\n      this.addNewImage(\n        imageToGrayscale(this.state.imagesInfos[index].imageBuffer)\n      );\n    }\n  };\n\n  currentImageLinearTransformation = coordinates => {\n    const { type, index } = this.state.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      this.notify(\"warning\", \"You first need to select an image\");\n    } else {\n      this.addNewImage(\n        linearTransformation(\n          this.state.imagesInfos[index].imageBuffer,\n          coordinates\n        )\n      );\n    }\n  };\n\n  currentImageBrightnessAndContrastAdjustment = (\n    newBrightness,\n    newContrast\n  ) => {\n    const { type, index } = this.state.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      this.notify(\"warning\", \"You first need to select an image\");\n    } else {\n      this.addNewImage(\n        brightnessAndContrastAdjustment(\n          this.state.imagesInfos[index].imageBuffer,\n          this.state.histogramInfos[index].histogram.histogramInfo.mean,\n          this.state.histogramInfos[index].histogram.histogramInfo.stdDev,\n          newBrightness,\n          newContrast\n        )\n      );\n    }\n  };\n\n  currentImageGammaCorrection = gammaValue => {\n    const { type, index } = this.state.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      this.notify(\"warning\", \"You first need to select an image\");\n    } else {\n      this.addNewImage(\n        gammaCorrection(this.state.imagesInfos[index].imageBuffer, gammaValue)\n      );\n    }\n  };\n\n  applyImagesDifference = otherImgName => {\n    const { type, index } = this.state.selectedGridItem;\n    const otherImageInfo = this.state.imagesInfos.find(\n      ({ key }) => key === otherImgName\n    );\n    const imageBuffer = otherImageInfo && otherImageInfo.imageBuffer;\n\n    if (type !== \"image\" || index < 0) {\n      this.notify(\"warning\", \"You first need to select an image\");\n    } else if (imageBuffer === undefined) {\n      this.notify(\n        \"error\",\n        `Couldn't find an image with the selected name (${otherImgName})`\n      );\n    } else {\n      this.addNewImage(\n        imagesDifference(this.state.imagesInfos[index].imageBuffer, imageBuffer)\n      );\n    }\n  };\n\n  applyChangesDetection = ({ imgName, rgbaColor, threshold }) => {\n    const { type, index } = this.state.selectedGridItem;\n    const otherImageInfo = this.state.imagesInfos.find(\n      ({ key }) => key === imgName\n    );\n    const imageBuffer = otherImageInfo && otherImageInfo.imageBuffer;\n\n    if (type !== \"image\" || index < 0) {\n      this.notify(\"warning\", \"You first need to select an image\");\n    } else if (imageBuffer === undefined) {\n      this.notify(\n        \"error\",\n        `Couldn't find an image with the selected name (${imgName})`\n      );\n    } else {\n      this.addNewImage(\n        changesDetection(\n          this.state.imagesInfos[index].imageBuffer,\n          imageBuffer,\n          threshold,\n          rgbaColor\n        )\n      );\n    }\n  };\n\n  applyHistogramSpecification = otherImgName => {\n    const { type, index } = this.state.selectedGridItem;\n    const otherImgIndex = this.state.imagesInfos.findIndex(\n      ({ key }) => key === otherImgName\n    );\n\n    if (type !== \"image\" || index < 0) {\n      this.notify(\"warning\", \"You first need to select an image\");\n    } else if (\n      otherImgIndex < 0 ||\n      otherImgIndex > this.state.imagesInfos.length\n    ) {\n      this.notify(\n        \"error\",\n        `Couldn't find an image with the selected name (${otherImgName})`\n      );\n    } else {\n      this.addNewImage(\n        histogramSpecification(\n          this.state.imagesInfos[index].imageBuffer,\n          this.state.histogramInfos[index].cHistogram,\n          this.state.histogramInfos[otherImgIndex].cHistogram\n        )\n      );\n    }\n  };\n\n  currentImageHistogramEqualization = () => {\n    const { type, index } = this.state.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      this.notify(\"warning\", \"You first need to select an image\");\n    } else {\n      this.addNewImage(\n        histogramEqualization(\n          this.state.imagesInfos[index].imageBuffer,\n          this.state.histogramInfos[index].cHistogram\n        )\n      );\n    }\n  };\n\n  cropCurrentImage = () => {\n    const { type, index } = this.state.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      this.notify(\"warning\", \"You first need to select an image\");\n    } else {\n      this.addNewImage(\n        crop(\n          this.state.imagesInfos[index].imageBuffer,\n          this.state.imagesInfos[index].region\n        )\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"app-container\">\n          <AppToolbar\n            onFileInput={this.onNewImageFromFile}\n            onShowHistogram={this.showHistogramOfCurrentImage}\n            onDownload={this.downloadCurrentImage}\n            onGrayscale={this.currentImageToGrayscale}\n            linearTransformation={this.currentImageLinearTransformation}\n            brightnessAndContrastAdjustment={\n              this.currentImageBrightnessAndContrastAdjustment\n            }\n            gammaCorrection={this.currentImageGammaCorrection}\n            imagesDifference={this.applyImagesDifference}\n            changesDetection={this.applyChangesDetection}\n            histogramSpecification={this.applyHistogramSpecification}\n            histogramEqualization={this.currentImageHistogramEqualization}\n            onCrop={this.cropCurrentImage}\n          />\n          <main className=\"main\">\n            <div className=\"main__wrapper\">{this.getGridComponent()}</div>\n          </main>\n          <footer className=\"footer\">\n            {this.getDisplayForPixelUnderMouse()}\n          </footer>\n        </div>\n        <div>\n          <a\n            ref=\"downloadAnchor\"\n            href=\"#download\"\n            id=\"download\"\n            hidden\n            download\n          >\n            This should not be visible. It is only used when downloading images\n          </a>\n        </div>\n      </div>\n    );\n  }\n\n  // Methods to keep the render method cleaner\n\n  getGridComponent() {\n    return (\n      <InteractiveGrid.Grid\n        layouts={this.state.gridLayouts}\n        onLayoutChange={this.onGridLayoutChange}\n      >\n        {this.state.imagesInfos.map((image, index) =>\n          this.getImageGridItem(image, index)\n        )}\n        {this.state.histogramInfos\n          .map((histogramInfo, index) =>\n            histogramInfo.visible\n              ? this.getHistogramGridItem(histogramInfo, index)\n              : null\n          )\n          .filter(element => element !== null)}\n      </InteractiveGrid.Grid>\n    );\n  }\n\n  getImageGridItem({ imageBuffer, key }, index) {\n    return (\n      <InteractiveGrid.Item\n        key={key}\n        id={index}\n        name={key}\n        onDelete={this.deleteAllImageRelatedInfo}\n        onSelect={this.onGridItemSelection(\"image\")}\n        isSelected={this.isGridItemSelected(\"image\", index)}\n      >\n        <div className=\"center\">\n          <div className=\"scrollable\">\n            <ImageComponent\n              rgbaImage={imageBuffer}\n              onMouseMove={this.onMouseMoveOverImage}\n              onSelection={this.onImageRegionSelection(index)}\n            />\n          </div>\n        </div>\n      </InteractiveGrid.Item>\n    );\n  }\n\n  getHistogramGridItem({ histogram, cHistogram, key }, index) {\n    return (\n      <InteractiveGrid.Item\n        key={key}\n        id={index}\n        name={key}\n        onDelete={this.hideHistogram}\n        onSelect={this.onGridItemSelection(\"histogram\")}\n        isSelected={this.isGridItemSelected(\"histogram\", index)}\n      >\n        <HistogramAndInfoComponent\n          histogram={histogram}\n          cHistogram={cHistogram}\n        />\n      </InteractiveGrid.Item>\n    );\n  }\n\n  getDisplayForPixelUnderMouse() {\n    const currentPixelRgbaValue = `rgba(${this.state.pixelValue.join(\", \")})`;\n\n    return (\n      <div\n        style={{\n          display: \"inline-block\",\n          margin: \"0.5rem\",\n          padding: \"0.5rem\",\n          borderRadius: \"5px\",\n          border: `1px solid ${currentPixelRgbaValue}`,\n          boxShadow: `0 3px 10px -3px ${currentPixelRgbaValue}`\n        }}\n      >\n        x: {this.state.pixelCoords.x}, y: {this.state.pixelCoords.y},\n        <span\n          style={{\n            display: \"inline-block\",\n            width: \"0.5rem\",\n            height: \"0.5rem\",\n            margin: \"0 0.5rem\",\n            backgroundColor: currentPixelRgbaValue,\n            border: \"1px solid black\",\n            borderRadius: \"2px\"\n          }}\n        />\n        {currentPixelRgbaValue}\n      </div>\n    );\n  }\n}\n\nexport default withSnackbar(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\n// react-grid-layout CSS classes\nimport \"../node_modules/react-grid-layout/css/styles.css\";\nimport \"../node_modules/react-resizable/css/styles.css\";\n\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { SnackbarProvider } from \"notistack\";\nimport Button from \"@material-ui/core/Button\";\n\n// Material UI color theme\nconst theme = createMuiTheme({\n  palette: {\n    common: { black: \"#000\", white: \"#fff\" },\n    background: { paper: \"#fff\", default: \"#fafafa\" },\n    primary: {\n      light: \"#7986cb\",\n      main: \"#3f51b5\",\n      dark: \"#303f9f\",\n      contrastText: \"#fff\"\n    },\n    secondary: {\n      light: \"#ff4081\",\n      main: \"#f50057\",\n      dark: \"#c51162\",\n      contrastText: \"#fff\"\n    },\n    error: {\n      light: \"#e57373\",\n      main: \"#f44336\",\n      dark: \"#d32f2f\",\n      contrastText: \"#fff\"\n    },\n    text: {\n      primary: \"rgba(0, 0, 0, 0.87)\",\n      secondary: \"rgba(0, 0, 0, 0.54)\",\n      disabled: \"rgba(0, 0, 0, 0.38)\",\n      hint: \"rgba(0, 0, 0, 0.38)\"\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n\nReactDOM.render(\n  <div>\n    <MuiThemeProvider theme={theme}>\n      <SnackbarProvider\n        maxSnack={5}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\"\n        }}\n        action={[\n          <Button color=\"inherit\" size=\"small\" key={Date.now()}>\n            Dismiss\n          </Button>\n        ]}\n      >\n        <App />\n      </SnackbarProvider>\n    </MuiThemeProvider>\n  </div>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}