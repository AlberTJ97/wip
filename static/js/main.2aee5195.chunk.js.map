{"version":3,"sources":["../../wiplib/build/operations/imagesDifference.js","../../wiplib/build/index.js","../../wiplib/build/Histogram.js","../../wiplib/build/CumulativeHistogram.js","../../wiplib/build/exceptions/ImageOperationException.js","../../wiplib/build/operations/index.js","../../wiplib/build/operations/brightnessAndContrastAdjustment.js","../../wiplib/build/operations/changesDetection.js","../../wiplib/build/operations/crop.js","../../wiplib/build/operations/gammaCorrection.js","../../wiplib/build/operations/grayscale.js","../../wiplib/build/operations/histogramEqualization.js","../../wiplib/build/operations/histogramSpecification.js","../../wiplib/build/operations/imageResampling.js","../../wiplib/build/operations/imageResizing.js","../../wiplib/build/operations/imageRotation.js","../../wiplib/build/operations/imageTranspose.js","../../wiplib/build/operations/interpolationMethods.js","../../wiplib/build/operations/linearTransformation.js","../../wiplib/build/operations/mirrorOperations.js","../../wiplib/build/operations/quantization.js","../../wiplib/build/RgbaImageBuffer/index.js","../../wiplib/build/exceptions/index.js","../../wiplib/build/operations/transformImage.js","lib/grid/gridProperties.js","components/InteractiveGrid/Grid/Grid.js","components/DeleteButton/index.js","components/InteractiveGrid/Item/Item.js","components/InteractiveGrid/index.js","lib/coordinates.js","components/ImageComponent/index.js","components/HistogramComponent/index.js","components/HistogramAndInfoComponent/index.js","lib/Exceptions/ImageLoadException.js","lib/imageHelper.js","components/ImageProcessingUi/LoadImageMenuItem.js","components/ImageProcessingUi/DownloadSelectedImageMenuItem.js","components/Toolbar/Submenus/FileSubmenu.js","components/ImageProcessingUi/ShowHistogramMenuItem.js","components/ImageProcessingUi/CropMenuItem.js","lib/Bresenham.js","components/ImageProcessingUi/ProfileMenuItem.js","components/Toolbar/Submenus/ImageSubmenu.js","components/ImageProcessingUi/LinearTransformationMenuItem/LinearTransformationDialog/InputCoordinate.js","components/ImageProcessingUi/LinearTransformationMenuItem/LinearTransformationDialog/index.js","components/ImageProcessingUi/LinearTransformationMenuItem/index.js","lib/Checks.js","components/ImageProcessingUi/BrightnessAndContrastMenuItem/BrightnessAndContrastDialog.js","components/ImageProcessingUi/BrightnessAndContrastMenuItem/index.js","components/ImageProcessingUi/GammaCorrectionMenuItem/GammaCorrectionDialog.js","components/ImageProcessingUi/GammaCorrectionMenuItem/index.js","components/Toolbar/FilesListMenu.js","components/ImageProcessingUi/ImageDifferenceMenuItem/ImageDifferenceDialog.js","components/ImageProcessingUi/ImageDifferenceMenuItem/index.js","components/ImageProcessingUi/ChangesDetectionMenuItem/ChangesDetectionDialog.js","components/ImageProcessingUi/ChangesDetectionMenuItem/index.js","components/ImageProcessingUi/HistogramSpecificationMenuItem/HistogramSpecificationDialog.js","components/ImageProcessingUi/HistogramSpecificationMenuItem/index.js","components/ImageProcessingUi/GrayscaleMenuItem.js","components/ImageProcessingUi/HistogramEqualizationMenuItem.js","components/ImageProcessingUi/QuantizationMenuItem/QuantizationDialog.js","components/ImageProcessingUi/QuantizationMenuItem/index.js","components/Toolbar/Submenus/PointOperationsSubmenu.js","components/ImageProcessingUi/ImageRotationMenuItem/ImageRotationDialog.js","components/ImageProcessingUi/ImageRotationMenuItem/index.js","components/ImageProcessingUi/ImageResizeMenuItem/ImageResizingDialog.js","components/ImageProcessingUi/ImageResizeMenuItem/index.js","components/ImageProcessingUi/VerticalMirrorMenuItem.js","components/ImageProcessingUi/HorizontalMirrorMenuItem.js","components/ImageProcessingUi/ImageTransposeMenuItem.js","components/ImageProcessingUi/ImageResampleMenuItem/ImageResampleDialog.js","components/ImageProcessingUi/ImageResampleMenuItem/index.js","components/Toolbar/Submenus/GeometricOperationsSubmenu.js","components/Toolbar/SelectionToolbar.js","components/Toolbar/index.js","components/Overlays/SelectionOverlay.js","components/Overlays/LineOverlay.js","components/ProfileComponent/index.js","components/ProfilesComponent/index.js","components/App/index.js","lib/grid/calculateLayout.js","stores/appStore.js","index.js"],"names":["Object","defineProperty","exports","value","imagesDifference","obj","_RgbaImageBuffer","__webpack_require__","__esModule","default","_exceptions","firstImgBuffer","secondImgBuffer","height","width","ImageOperationException","result","copy","i","pixels","length","NUM_CHANNELS","Math","abs","enumerable","get","_Histogram","_CumulativeHistogram","operations","exceptions","_interopRequireDefault","_interopRequireWildcard","newObj","key","prototype","hasOwnProperty","call","desc","getOwnPropertyDescriptor","set","_defineProperties","target","props","descriptor","configurable","writable","Histogram","imagePixels","instance","Constructor","TypeError","_classCallCheck","this","setImagePixels","protoProps","staticProps","_this","grayscaleImage","histogramValues","Red","Array","fill","Green","Blue","Gray","round","count","reduce","previousValue","currentElement","histogramInfo","brightness","index","contrast","sqrt","pow","keys","forEach","_i","minValue","_i2","maxValue","maxIndex","maxCount","mode","probability","entropy","_i3","log2","toFixed","CumulativeHistogram","histogram","counts","map","_typeof","Symbol","iterator","constructor","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_wrapNativeSuper","Class","_cache","Map","undefined","fn","Function","toString","indexOf","has","Wrapper","_construct","arguments","_getPrototypeOf","create","_setPrototypeOf","Parent","args","Reflect","construct","sham","Proxy","Date","e","isNativeReflectConstruct","a","push","apply","bind","o","p","setPrototypeOf","__proto__","getPrototypeOf","_Error","exceptionName","message","name","subClass","superClass","_inherits","Error","_brightnessAndContrastAdjustment","_changesDetection","_crop","_gammaCorrection","_grayscale","_histogramEqualization","_histogramSpecification","_imageResampling","_imageResizing","_imageRotation","_imagesDifference","_imageTranspose","_interpolationMethods","_linearTransformation","_mirrorOperations","_quantization","_transformImage","brightnessAndContrastAdjustment","imgBuffer","oldBrightness","oldContrast","newBrightness","newContrast","A","B","lookupTable","newValue","min","max","transformImage","changesDetection","threshold","changeHighlightColor","difference","error","r","g","b","crop","_ref","_ref$top","top","_ref$left","left","_ref$height","_ref$width","resultPixels","Uint8ClampedArray","currentIndex","yOffset","xOffset","pixel","getPixel","x","y","gammaCorrection","gammaValue","grayscaleStrategies","imageToGrayscale","grayscaleStrategy","pixelToGrayscalePal","grayValue","rComponent","gComponent","bComponent","histogramEqualization","imageCHistogram","equalizationLevel","histogramSpecification","originImageCHistogram","targetImageCHistogram","normalizedOriginImageCHistogram","normalizedTargetImageCHistogram","j","imageResampling","blockWidth","blockHeight","initialX","initialY","resampleBlock","xLimit","yLimit","sum","newValues","_y","_x","imageResizing","widthPercentage","heighPercentage","interpolationMethod","oldWidth","oldHeight","widthFactor","heightFactor","newWidth","floor","newHeight","transformedCoords","imageRotation","isInRange","degrees","rotateAndPaintRotation","radians","PI","directTransformation","xCoord","yCoord","cos","sin","newImageInfo","getRotatedImageInfo","rotateAndPaint","minXCoord","minYCoord","originalImagePixel","upperLeftCornerRotated","lowerLeftCornerRotated","upperRightCornerRotated","lowerRightCornerRotated","maxXCoord","maxYCoord","imageTranspose","interpolationMethods","closestNeighbourInterpolation","bilinearInterpolation","ceil","C","D","q","transform","linearTransformation","points","sections","newSection","slope","currentSectionIndex","frontier","yIntercept","mirror","horizontal","vertical","quantization","amountOfLevels","Number","isInteger","part","distance","minDistance","POSITIVE_INFINITY","_createClass","_defineProperty","RgbaImageBuffer","toImageData","_ref3","pixelPosition","_mapMatrixPositionToArray","_width","_height","_pixels","data","_ref2","imgData","ImageData","_ImageOperationException","gridProperties","GRID_COLUMNS","lg","md","sm","xs","xxs","LAYOUT_BREAKPOINTS","DEFAULT_GRID_ITEM_COLS","DEFAULT_GRID_ITEM_ROWS","GRID_ITEM_ROW_HEIGHT","ResponsiveGrid","WidthProvider","Responsive","Grid","children","objectWithoutProperties","react_default","createElement","assign","cols","GRID_PROPERTIES","breakpoints","rowHeight","defaultProps","objectSpread","layouts","DeleteButton","onDelete","className","onClick","disabled","aria-label","stopEvent","event","preventDefault","stopPropagation","Item","state","isDraggable","onDragHandleMouseDown","setState","onDragHandleMouseUp","onDragStart","onMouseDown","onDragEnd","onMouseUp","id","onSelect","document","addEventListener","removeEventListener","_this$props","style","isSelected","concat","draggable","onFocus","tabIndex","components_DeleteButton","React","Component","onDeselect","InteractiveGrid","mapToCoordinatesRelativeToElement","coords","parentElement","parentElementBoundingBox","clientX","clientY","mapToRelativeCoordinates","getBoundingClientRect","calculateRect","coords1","coords2","callback","right","bottom","ImageComponent","isImageLoading","isMouseDown","isDragging","mouseDownOriginCoordinates","currentMouseCoordinates","selectionOriginCoords","selectionEndCoords","initialOriginCoords","initialEndCoords","onMouseMove","mouseEvent","coordinates","Coordinates","refs","canvas","rgbaImage","_this$state","_this$props$rgbaImage","Xdiff","Ydiff","selectionRect","originCoords","endCoords","selectionWidth","selectionHeight","rect","point","_this$state2","prevRect","_this$state3","onSelection","_this$props$rgbaImage2","context","getContext","putImageData","_this$state4","position","ref","display","backgroundColor","maxHeight","HistogramComponent","emphasizedValue","histogramVisualizationData","channel","x0","_this2","es","margin","onMouseLeave","onNearestX","color","align","fontSize","format","dataPoint","title","HistogramAndInfoComponent","currentTab","currentChannel","updateCurrentTab","_","newTab","updateCurrentChannel","newChannel","_this$props$histogram","cHistogram","Fragment","justifyContent","Button_default","boxShadow","padding","alignItems","components_HistogramComponent","maxWidth","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","ImageLoadException","errorImageSrc","classCallCheck","possibleConstructorReturn","src","loadFromObject","URL","createObjectURL","image","Image","Promise","resolve","reject","onload","onerror","load","finally","revokeObjectURL","LoadImageMenuItem","onImageFileInputted","enqueueSnackbar","appStore","files","ImageHelper","then","naturalWidth","naturalHeight","drawImage","getImageData","imageBuffer","fromImageData","addImage","fileInputForm","reset","catch","variant","htmlFor","MenuItem_default","hidden","type","accept","onChange","withSnackbar","inject","observer","DownloadSelectedImageMenuItem","downloadCurrentImage","_appStore$selectedGri","selectedGridItem","imgInfo","imagesInfos","_imgInfo$region","region","imageData","toBlob","blob","imgUrl","downloadAnchor","href","click","download","FileSubmenu","open","handleToggle","handleClose","anchorEl","contains","buttonRef","node","aria-owns","aria-haspopup","Popper_default","transition","disablePortal","Paper_default","ClickAwayListener_default","onClickAway","MenuList_default","ImageProcessingUi_LoadImageMenuItem","ImageProcessingUi_DownloadSelectedImageMenuItem","ShowHistogramMenuItem","showHistogramOfCurrentImage","CropMenuItem","cropCurrentImage","imageSelectionMehod","bresenham","firstPoint","secondPoint","x1","y0","y1","dx","dy","sx","sy","err","e2","ProfileMenuItem","getProfile","_appStore$imagesInfos","associatedImage","profileValues","firstDerivativeProfileValues","_loop","addProfile","ImageSubmenu","ImageProcessingUi_ShowHistogramMenuItem","ImageProcessingUi_CropMenuItem","ImageProcessingUi_ProfileMenuItem","InputCoordinate","onYChange","number","parseFloat","coordinate","isFinite","onXChange","TextField_default","placeholder","InputProps","startAdornment","InputAdornment_default","IconButton_default","Delete_default","styles","center","marginTop","marginBottom","LinearTransformationDialog","onDataChange","newCoords","prevState","coord","onDataDelete","filter","addNewCoordinate","newCoord","slice","toConsumableArray","onSubmit","onClose","Dialog_default","isOpen","scroll","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","xDomain","yDomain","fullWidth","InputCoordinate_InputCoordinate","DialogActions_default","LinearTransformationMenuItem","isDialogOpen","openDialog","closeDialog","LinearTransformationMenuItem_LinearTransformationDialog","inputsContainer","flexWrap","input","BrightnessAndContrastDialog","brightnessErrorMessage","contrastErrorMessage","formChanged","valueStateName","errorMessageStateName","minPossibleValue","maxPossibleValue","_this$setState2","_this$setState","onBrightnessChange","onContrastChange","histogramInfos","label","String","_props$appStore","BrightnessAndContrastMenuItem","BrightnessAndContrastMenuItem_BrightnessAndContrastDialog","GammaCorrectionDialog","gamma","gammaErrorMessage","errorMessage","onGammaChange","GammaCorrectionMenuItem","GammaCorrectionMenuItem_GammaCorrectionDialog","FilesListMenu","selectedIndex","selectedItemIndex","handleClickListItem","currentTarget","handleMenuItemClick","selectedItemName","onItemSelection","classes","root","List_default","component","ListItem_default","isDisabled","button","menuTitle","ListItemText_default","primary","secondary","options","Menu_default","Boolean","option","selected","withStyles","theme","palette","background","paper","ImageDifferenceDialog","imgName","otherImgName","otherImageInfo","find","activeImagesNames","img","Toolbar_FilesListMenu","ImageDifferenceMenuItem","ImageDifferenceMenuItem_ImageDifferenceDialog","ChangesDetectionDialog","rgbaColor","onImgNameChange","onThresholdChange","handleChangeComplete","rgb","applyChangesDetection","lib","onChangeComplete","ChangesDetectionMenuItem","ChangesDetectionMenuItem_ChangesDetectionDialog","HistogramSpecificationDialog","otherImgIndex","findIndex","HistogramSpecificationMenuItem","HistogramSpecificationMenuItem_HistogramSpecificationDialog","GrayscaleMenuItem","currentImageToGrayscale","_this$props$appStore$","HistogramEqualizationMenuItem","currentImageHistogramEqualization","QuantizationDialog","levels","onLevelsChange","QuantizationMenuItem","QuantizationMenuItem_QuantizationDialog","PointOperationsSubmenu","ImageProcessingUi_GrayscaleMenuItem","ImageProcessingUi_LinearTransformationMenuItem","ImageProcessingUi_BrightnessAndContrastMenuItem","ImageProcessingUi_GammaCorrectionMenuItem","ImageProcessingUi_ImageDifferenceMenuItem","ImageProcessingUi_ChangesDetectionMenuItem","ImageProcessingUi_HistogramSpecificationMenuItem","ImageProcessingUi_HistogramEqualizationMenuItem","ImageProcessingUi_QuantizationMenuItem","ImageRotationDialog","degreesErrorMessage","selectedInterpolationMethodIndex","onDegreesChange","onRotateAndPaintChange","checked","onInterpolationMethodChange","FormControlLabel_default","control","Checkbox_default","ImageRotationMenuItem","rotateCurrentImage","ImageRotationDialog_ImageRotationDialog","rotationInfo","ImageResizingDialog","widthErrorMessage","heightPercentage","heightErrorMessage","onDimensionsChange","dimensionName","dimensionStateName","oldDimensionPropName","percentageStateName","isPercentage","dimension","percentage","isNaN","onWidthChange","onHeightChange","onWidthPercentageChange","onHeightPercentageChange","endAdornment","ImageResizeMenuItem","resizeCurrentImage","_appStore$selectedGri2","selectedImageDimensions","ImageResizingDialog_ImageResizingDialog","resizeInfo","VerticalMirrorMenuItem","currentImageVerticalMirror","HorizontalMirrorMenuItem","currentImageHorizontalMirror","ImageTransposeMenuItem","transposeImage","ImageResampleDialog","blockWidthErrorMessage","blockHeightErrorMessage","onBlockWidthChange","onBlockHeightChange","ImageResampleMenuItem","ImageResampleMenuItem_ImageResampleDialog","GeometricOperationsSubmenu","ImageProcessingUi_ImageRotationMenuItem","ImageProcessingUi_ImageResizeMenuItem","ImageProcessingUi_VerticalMirrorMenuItem","ImageProcessingUi_HorizontalMirrorMenuItem","ImageProcessingUi_ImageTransposeMenuItem","ImageProcessingUi_ImageResampleMenuItem","SelectionToolbar","_this$props$appStore","updateImageSelectionMehod","Toolbar_default","zIndex","CropSquare_default","marginRight","Edit_default","AppToolbar","AppBar_default","FileSubmenu_FileSubmenu","ImageSubmenu_ImageSubmenu","PointOperationsSubmenu_PointOperationsSubmenu","GeometricOperationsSubmenu_GeometricOperationsSubmenu","Toolbar_SelectionToolbar","SelectionOverlay","LineOverlay","xmlns","stroke","strokeWidth","x2","y2","ProfileComponent","profileVisualizationData","ProfilesComponent","info","_this$props$info","components_ProfileComponent","App","onMouseMoveOverImage","pixelCoords","pixelValue","setCurrentPixel","onImageRegionSelection","_calculateRect","newRegion","updateImageRegion","getImageOverlay","Overlays_SelectionOverlay","Overlays_LineOverlay","components_Toolbar","getGridComponent","getDisplayForImageDimensions","getDisplayForPixelUnderMouse","gridLayouts","onLayoutChange","updateLayout","getImageGridItem","visible","getHistogramGridItem","element","profilesInfos","profile","getProfileGridItem","_this3","_ref4","removeImageInfo","updateSelectedImageItem","isGridItemSelected","components_ImageComponent","_this4","_ref5","hideHistogram","updateSelectedHistogramItem","HistogramAndInfoComponent_HistogramAndInfoComponent","profileInfo","_this5","removeProfile","updateSelectedProfileItem","ProfilesComponent_ProfilesComponent","currentPixelRgbaValue","join","sizeText","borderRadius","border","_this$props$appStore2","createNewSetOfLayouts","layoutName","createNewElementLayoutInfo","Infinity","w","h","minW","minH","addNewElementsToLayouts","currentLayouts","newElementsIds","newElementsLayoutInfos","newLayouts","removeElementsFromLayout","ids","includes","AppStoreSingleton","GridLayoutHelper","_removedImagesCount","_profilesCount","imageSection","imageKey","histogramKey","profileKey","firstDerivativeKey","newSelectedItem","_this$selectedGridIte","requestAnimationFrame","newMethodType","decorate","observable","action","stores_appStore","createMuiTheme","common","black","white","light","main","dark","contrastText","text","hint","typography","useNextVariants","ReactDOM","render","core_styles","notistack_build","maxSnack","anchorOrigin","size","now","index_module","components_App","getElementById"],"mappings":"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","file":"static/js/main.2aee5195.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.imagesDifference = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"../RgbaImageBuffer\"));\n\nvar _exceptions = require(\"../exceptions\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\r\n * Calculates the difference (absolute value) between two images\r\n *\r\n * @param {RgbaImageBuffer} firstImgBuffer First image\r\n * @param {RgbaImageBuffer} secondImgBuffer Second image\r\n * @returns {RgbaImageBuffer} Result image\r\n */\n\n\nvar imagesDifference = function imagesDifference(firstImgBuffer, secondImgBuffer) {\n  if (firstImgBuffer.height !== secondImgBuffer.height || firstImgBuffer.width !== secondImgBuffer.width) throw new _exceptions.ImageOperationException(\"ImagesDifferenceException\", \"Images should have the same width and height\");\n  var result = firstImgBuffer.copy();\n\n  for (var i = 0; i < result.pixels.length; i += _RgbaImageBuffer.default.NUM_CHANNELS) {\n    result.pixels[i] = Math.abs(result.pixels[i] - secondImgBuffer.pixels[i]);\n    result.pixels[i + 1] = Math.abs(result.pixels[i + 1] - secondImgBuffer.pixels[i + 1]);\n    result.pixels[i + 2] = Math.abs(result.pixels[i + 2] - secondImgBuffer.pixels[i + 2]);\n  }\n\n  return result;\n};\n\nexports.imagesDifference = imagesDifference;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"RgbaImageBuffer\", {\n  enumerable: true,\n  get: function get() {\n    return _RgbaImageBuffer.default;\n  }\n});\nObject.defineProperty(exports, \"Histogram\", {\n  enumerable: true,\n  get: function get() {\n    return _Histogram.default;\n  }\n});\nObject.defineProperty(exports, \"CumulativeHistogram\", {\n  enumerable: true,\n  get: function get() {\n    return _CumulativeHistogram.default;\n  }\n});\nexports.operations = exports.exceptions = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"./RgbaImageBuffer\"));\n\nvar _Histogram = _interopRequireDefault(require(\"./Histogram\"));\n\nvar _CumulativeHistogram = _interopRequireDefault(require(\"./CumulativeHistogram\"));\n\nvar exceptions = _interopRequireWildcard(require(\"./exceptions\"));\n\nexports.exceptions = exceptions;\n\nvar operations = _interopRequireWildcard(require(\"./operations\"));\n\nexports.operations = operations;\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"./RgbaImageBuffer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\r\n * Class to represent an image histogram. Each image has associated histograms\r\n * which describes the way that its pixels values are distributed.\r\n *\r\n * An object of this class wraps the values of the histogram besides some useful\r\n * information.\r\n */\n\n\nvar Histogram =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {RgbaImageBuffer} imagePixels Image Buffer to create the histogram\r\n   * for\r\n   */\n  function Histogram(imagePixels) {\n    _classCallCheck(this, Histogram);\n\n    this.setImagePixels(imagePixels.pixels);\n  }\n  /**\r\n   * Sets the pixels values of the associated image and extracts histogram\r\n   * values and useful information.\r\n   */\n\n\n  _createClass(Histogram, [{\n    key: \"setImagePixels\",\n    value: function setImagePixels(imagePixels) {\n      var _this = this; // Boolean to check if the image is in grayscale\n\n\n      var grayscaleImage = true;\n      this.histogramValues = {\n        \"Red\": new Array(256).fill(0),\n        \"Green\": new Array(256).fill(0),\n        \"Blue\": new Array(256).fill(0),\n        \"Gray\": new Array(256).fill(0)\n      }; // Histogram values update\n\n      for (var i = 0; i < imagePixels.length; i += _RgbaImageBuffer.default.NUM_CHANNELS) {\n        if (imagePixels[i + 3] === 0) {\n          // The transparent pixels are ignored\n          continue;\n        }\n\n        this.histogramValues[\"Red\"][imagePixels[i]]++;\n        this.histogramValues[\"Green\"][imagePixels[i + 1]]++;\n        this.histogramValues[\"Blue\"][imagePixels[i + 2]]++;\n        this.histogramValues[\"Gray\"][Math.round(imagePixels[i] * 0.222 + imagePixels[i + 1] * 0.707 + imagePixels[i + 2] * 0.071)]++; // Grayscale image comprobation\n\n        if (grayscaleImage && (imagePixels[i] !== imagePixels[i + 1] || imagePixels[i] !== imagePixels[i + 2])) {\n          grayscaleImage = false;\n        }\n      }\n\n      var count = this.histogramValues[\"Red\"].reduce(function (previousValue, currentElement) {\n        return previousValue + currentElement;\n      }, 0); // If the image is in grayscale histogramValues object is updated\n\n      if (grayscaleImage) {\n        delete this.histogramValues[\"Red\"];\n        delete this.histogramValues[\"Blue\"];\n        delete this.histogramValues[\"Green\"];\n      } // Object which contains histogram and image information\n\n\n      this.histogramInfo = {}; // Image brightness\n\n      this.histogramInfo.brightness = this.histogramValues[\"Gray\"].reduce(function (previousValue, currentElement, index) {\n        return previousValue + currentElement * index;\n      }, 0) / count;\n      this.histogramInfo.contrast = Math.sqrt(this.histogramValues[\"Gray\"].reduce(function (previousValue, currentElement, index) {\n        return previousValue + Math.pow(index - _this.histogramInfo.brightness, 2) * currentElement;\n      }, 0) / count); // Information for each channel\n\n      Object.keys(this.histogramValues).forEach(function (key) {\n        _this.histogramInfo[key] = {};\n        _this.histogramInfo[key].count = count;\n        /*\r\n        // Mean\r\n        this.histogramInfo[key].mean =\r\n          this.histogramValues[key].reduce(\r\n            (previousValue, currentElement, index) =>\r\n              previousValue + currentElement * index,\r\n            0\r\n          ) / this.histogramInfo[key].count;\r\n        \r\n        // Standard deviation\r\n        this.histogramInfo[key].stdDev = Math.sqrt(\r\n          this.histogramValues[key].reduce(\r\n            (previousValue, currentElement, index) =>\r\n              previousValue +\r\n              Math.pow(index - this.histogramInfo[key].mean, 2) * currentElement,\r\n            0\r\n          ) / this.histogramInfo[key].count\r\n        );\r\n        */\n        // Minimum value\n\n        for (var _i = 0; _i < _this.histogramValues[key].length; ++_i) {\n          if (_this.histogramValues[key][_i] !== 0) {\n            _this.histogramInfo[key].minValue = _i;\n            break;\n          }\n        } // Maximum value\n\n\n        for (var _i2 = _this.histogramValues[key].length - 1; _i2 >= 0; --_i2) {\n          if (_this.histogramValues[key][_i2] !== 0) {\n            _this.histogramInfo[key].maxValue = _i2;\n            break;\n          }\n        } // Mode\n\n\n        var maxIndex = 0;\n        var maxCount = 0;\n\n        _this.histogramValues[key].forEach(function (count, value) {\n          if (count > maxCount) {\n            maxCount = count;\n            maxIndex = value;\n          }\n        });\n\n        _this.histogramInfo[key].mode = {};\n        _this.histogramInfo[key].mode.value = maxIndex;\n        _this.histogramInfo[key].mode.count = maxCount; // Entropy\n\n        var entropy = 0;\n        var probability;\n\n        for (var _i3 = 0; _i3 < 256; ++_i3) {\n          probability = _this.histogramValues[key][_i3] / _this.histogramInfo[key].count;\n\n          if (probability > 0) {\n            entropy += probability * Math.log2(probability);\n          }\n        }\n\n        if (entropy !== 0) entropy *= -1;\n        _this.histogramInfo[key].entropy = entropy.toFixed(3);\n      });\n    }\n  }]);\n\n  return Histogram;\n}();\n\nexports.default = Histogram;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\r\n * Class to represent an image cumulative histogram.\r\n */\n\n\nvar CumulativeHistogram =\n/**\r\n * Creates an instance of this class.\r\n *\r\n * @param {Array} histogram Array of values of the histogram to create the\r\n * cumulative from\r\n */\nfunction CumulativeHistogram(histogram) {\n  var _this = this;\n\n  _classCallCheck(this, CumulativeHistogram);\n\n  var count;\n  this.counts = {};\n  Object.keys(histogram).forEach(function (key) {\n    count = 0;\n    _this.counts[key] = {};\n    _this.counts[key] = histogram[key].map(function (value) {\n      count += value;\n      return count;\n    });\n  });\n  this.count = count;\n};\n\nexports.default = CumulativeHistogram;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/**\r\n * Exception class representing image operations errors.\r\n */\n\n\nvar ImageOperationException =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(ImageOperationException, _Error);\n\n  function ImageOperationException(exceptionName, message) {\n    var _this;\n\n    _classCallCheck(this, ImageOperationException);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageOperationException).call(this, message));\n    _this.name = exceptionName;\n    return _this;\n  }\n\n  return ImageOperationException;\n}(_wrapNativeSuper(Error));\n\nexports.default = ImageOperationException;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _brightnessAndContrastAdjustment = require(\"./brightnessAndContrastAdjustment\");\n\nObject.keys(_brightnessAndContrastAdjustment).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _brightnessAndContrastAdjustment[key];\n    }\n  });\n});\n\nvar _changesDetection = require(\"./changesDetection\");\n\nObject.keys(_changesDetection).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _changesDetection[key];\n    }\n  });\n});\n\nvar _crop = require(\"./crop\");\n\nObject.keys(_crop).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _crop[key];\n    }\n  });\n});\n\nvar _gammaCorrection = require(\"./gammaCorrection\");\n\nObject.keys(_gammaCorrection).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _gammaCorrection[key];\n    }\n  });\n});\n\nvar _grayscale = require(\"./grayscale\");\n\nObject.keys(_grayscale).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _grayscale[key];\n    }\n  });\n});\n\nvar _histogramEqualization = require(\"./histogramEqualization\");\n\nObject.keys(_histogramEqualization).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _histogramEqualization[key];\n    }\n  });\n});\n\nvar _histogramSpecification = require(\"./histogramSpecification\");\n\nObject.keys(_histogramSpecification).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _histogramSpecification[key];\n    }\n  });\n});\n\nvar _imageResampling = require(\"./imageResampling\");\n\nObject.keys(_imageResampling).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _imageResampling[key];\n    }\n  });\n});\n\nvar _imageResizing = require(\"./imageResizing\");\n\nObject.keys(_imageResizing).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _imageResizing[key];\n    }\n  });\n});\n\nvar _imageRotation = require(\"./imageRotation\");\n\nObject.keys(_imageRotation).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _imageRotation[key];\n    }\n  });\n});\n\nvar _imagesDifference = require(\"./imagesDifference\");\n\nObject.keys(_imagesDifference).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _imagesDifference[key];\n    }\n  });\n});\n\nvar _imageTranspose = require(\"./imageTranspose\");\n\nObject.keys(_imageTranspose).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _imageTranspose[key];\n    }\n  });\n});\n\nvar _interpolationMethods = require(\"./interpolationMethods\");\n\nObject.keys(_interpolationMethods).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _interpolationMethods[key];\n    }\n  });\n});\n\nvar _linearTransformation = require(\"./linearTransformation\");\n\nObject.keys(_linearTransformation).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _linearTransformation[key];\n    }\n  });\n});\n\nvar _mirrorOperations = require(\"./mirrorOperations\");\n\nObject.keys(_mirrorOperations).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _mirrorOperations[key];\n    }\n  });\n});\n\nvar _quantization = require(\"./quantization\");\n\nObject.keys(_quantization).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _quantization[key];\n    }\n  });\n});\n\nvar _transformImage = require(\"./transformImage\");\n\nObject.keys(_transformImage).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _transformImage[key];\n    }\n  });\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.brightnessAndContrastAdjustment = void 0;\n\nvar _transformImage = require(\"./transformImage\");\n/**\r\n * Changes the contrast and the brightness of the given image\r\n *\r\n * @param {RgbaImageBuffer} imgBuffer Image to transform\r\n * @param {Number} oldBrightness Previous brightness of the image\r\n * @param {Number} oldContrast Previous contrast of the image\r\n * @param {Number} newBrightness New brightness of the image\r\n * @param {Number} newContrast New contrast of the image\r\n * @returns {RgbaImageBuffer} Transformed image\r\n */\n\n\nvar brightnessAndContrastAdjustment = function brightnessAndContrastAdjustment(imgBuffer, oldBrightness, oldContrast, newBrightness, newContrast) {\n  // TODO check parameters\n  var A = newContrast / oldContrast;\n  var B = newBrightness - A * oldBrightness;\n  var lookupTable = [];\n\n  for (var i = 0; i < 256; ++i) {\n    var newValue = Math.round(A * i + B);\n    lookupTable.push(Math.min(Math.max(newValue, 0), 255));\n  }\n\n  return (0, _transformImage.transformImage)(imgBuffer, lookupTable);\n};\n\nexports.brightnessAndContrastAdjustment = brightnessAndContrastAdjustment;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.changesDetection = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"../RgbaImageBuffer\"));\n\nvar _exceptions = require(\"../exceptions\");\n\nvar _imagesDifference = require(\"./imagesDifference\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\r\n * Detects and highlights the changes of two images\r\n * according to the given threshold\r\n *\r\n * @param {RgbaImageBuffer} firstImgBuffer First image\r\n * @param {RgbaImageBuffer} secondImgBuffer Second image\r\n * @param {Number} threshold Threshold for considering a change as a important change\r\n * @param {Object} changeHighlightColor Color for highlight pixels considered as a change\r\n * @returns {RgbaImageBuffer} Changes map\r\n */\n\n\nvar changesDetection = function changesDetection(firstImgBuffer, secondImgBuffer, threshold, changeHighlightColor) {\n  var difference;\n\n  try {\n    difference = (0, _imagesDifference.imagesDifference)(firstImgBuffer, secondImgBuffer);\n  } catch (error) {\n    if (error.name === \"ImagesDifferenceException\") throw new _exceptions.ImageOperationException(\"ChangesDetectionException\", error.message);else throw error;\n  }\n\n  var result = firstImgBuffer.copy();\n\n  for (var i = 0; i < result.pixels.length; i += _RgbaImageBuffer.default.NUM_CHANNELS) {\n    if (difference.pixels[i] > threshold) {\n      result.pixels[i] = changeHighlightColor.r;\n      result.pixels[i + 1] = changeHighlightColor.g;\n      result.pixels[i + 2] = changeHighlightColor.b;\n    }\n  }\n\n  return result;\n};\n\nexports.changesDetection = changesDetection;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.crop = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"../RgbaImageBuffer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\r\n * Returns an image buffer of the given region of the given buffer\r\n *\r\n * @param {RgbaImageBuffer} imgBuffer Buffer of the image to crop\r\n * @param {Object} region Region specifying where to crop the given buffer\r\n * @param {number} region.top Pixel in the y axis where the new image must start\r\n * @param {number} region.left Pixel in the x axis where the new image must\r\n * start\r\n * @param {number} region.height Height of the new image\r\n * @param {number} region.width Width of the new image\r\n */\n\n\nvar crop = function crop(imgBuffer) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$top = _ref.top,\n      top = _ref$top === void 0 ? 0 : _ref$top,\n      _ref$left = _ref.left,\n      left = _ref$left === void 0 ? 0 : _ref$left,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? imgBuffer.height : _ref$height,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? imgBuffer.width : _ref$width;\n\n  var resultPixels = new Uint8ClampedArray(height * width * _RgbaImageBuffer.default.NUM_CHANNELS);\n  var currentIndex = 0;\n\n  for (var yOffset = 0; yOffset < height; yOffset += 1) {\n    for (var xOffset = 0; xOffset < width; xOffset += 1) {\n      var pixel = imgBuffer.getPixel({\n        x: left + xOffset,\n        y: top + yOffset\n      });\n      resultPixels[currentIndex] = pixel[0];\n      resultPixels[currentIndex + 1] = pixel[1];\n      resultPixels[currentIndex + 2] = pixel[2];\n      resultPixels[currentIndex + 3] = pixel[3];\n      currentIndex += _RgbaImageBuffer.default.NUM_CHANNELS;\n    }\n  }\n\n  return new _RgbaImageBuffer.default(width, height, resultPixels);\n};\n\nexports.crop = crop;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.gammaCorrection = void 0;\n\nvar _transformImage = require(\"./transformImage\");\n\nvar _exceptions = require(\"../exceptions\");\n/**\r\n * Applies gamma correction to the given image\r\n *\r\n * @param {RgbaImageBuffer} imgBuffer Image to transform\r\n * @param {Number} gammaValue Gamma value for gamma correction\r\n * @returns {RgbaImageBuffer} Transformed image\r\n */\n\n\nvar gammaCorrection = function gammaCorrection(imgBuffer, gammaValue) {\n  if (gammaValue < 0) throw new _exceptions.ImageOperationException(\"GammaCorrectionException\", \"Invalid gamma value, gamma should be equal or greater than 0.\");\n  var lookupTable = [];\n\n  for (var i = 0; i < 256; ++i) {\n    lookupTable[i] = Math.pow(i / 255, gammaValue) * 255;\n  }\n\n  return (0, _transformImage.transformImage)(imgBuffer, lookupTable);\n};\n\nexports.gammaCorrection = gammaCorrection;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.grayscaleStrategies = exports.imageToGrayscale = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"../RgbaImageBuffer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\r\n * Returns the given pixels converted to grayscale, according to the given\r\n * grayscale strategy\r\n *\r\n * @param {RgbaImageBuffer} imgBuffer Image Buffer base to create the grayscale\r\n * image from\r\n * @param {Function} grayscaleStrategy Method used to convert to grayscale.\r\n * Defaults to Phase Alternating Line\r\n * @returns {RgbaImageBuffer} Image buffer in grayscale\r\n */\n\n\nvar imageToGrayscale = function imageToGrayscale(imgBuffer) {\n  var grayscaleStrategy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : pixelToGrayscalePal;\n  var result = imgBuffer.copy();\n\n  for (var i = 0; i < result.pixels.length; i += _RgbaImageBuffer.default.NUM_CHANNELS) {\n    var rComponent = imgBuffer.pixels[i];\n    var gComponent = imgBuffer.pixels[i + 1];\n    var bComponent = imgBuffer.pixels[i + 2];\n    var grayValue = grayscaleStrategy(rComponent, gComponent, bComponent);\n    result.pixels[i] = grayValue;\n    result.pixels[i + 1] = grayValue;\n    result.pixels[i + 2] = grayValue;\n  }\n\n  return result;\n};\n/** Returns the given pixel to grayscale according to Phase Alternating Line */\n\n\nexports.imageToGrayscale = imageToGrayscale;\n\nvar pixelToGrayscalePal = function pixelToGrayscalePal(rComponent, gComponent, bComponent) {\n  return Math.round(rComponent * 0.222 + gComponent * 0.707 + bComponent * 0.071);\n};\n\nvar grayscaleStrategies = {\n  pixelToGrayscalePal: pixelToGrayscalePal\n};\nexports.grayscaleStrategies = grayscaleStrategies;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.histogramEqualization = void 0;\n\nvar _transformImage = require(\"./transformImage\");\n/**\r\n * Applies histogram equalization operation to the given image.\r\n *\r\n * @param {RgbaImageBuffer} imgBuffer Image to transform\r\n * @param {CumulativeHistogram} imageCHistogram Cumulative histogram of the image\r\n * @returns {RgbaImageBuffer} Transformed image\r\n */\n\n\nvar histogramEqualization = function histogramEqualization(imgBuffer, imageCHistogram) {\n  var equalizationLevel = imageCHistogram.count / 256;\n  var lookupTable = [];\n\n  for (var i = 0; i < 256; ++i) {\n    lookupTable.push(Math.max(0, Math.round(imageCHistogram.counts[\"Gray\"][i] / equalizationLevel) - 1));\n  }\n\n  return (0, _transformImage.transformImage)(imgBuffer, lookupTable);\n};\n\nexports.histogramEqualization = histogramEqualization;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.histogramSpecification = void 0;\n\nvar _transformImage = require(\"./transformImage\");\n/**\r\n * Applies histogram specification operation to the given image.\r\n * It expects the image to transform, its cumulative histogram\r\n * and the cumulative histogram of the target image.\r\n *\r\n * @param {RgbaImageBuffer} imgBuffer Image to transform\r\n * @param {CumulativeHistogram} originImageCHistogram Cumulative histogram of imgBuffer\r\n * @param {CumulativeHistogram} targetImageCHistogram Cumulative histogram of target image\r\n * @returns {RgbaImageBuffer} Transformed image\r\n */\n\n\nvar histogramSpecification = function histogramSpecification(imgBuffer, originImageCHistogram, targetImageCHistogram) {\n  var normalizedOriginImageCHistogram = originImageCHistogram.counts[\"Gray\"].map(function (value) {\n    return value / originImageCHistogram.count;\n  });\n  var normalizedTargetImageCHistogram = targetImageCHistogram.counts[\"Gray\"].map(function (value) {\n    return value / targetImageCHistogram.count;\n  });\n  var lookupTable = [];\n\n  for (var i = 0; i < 256; ++i) {\n    var j = 255;\n\n    while (j >= 0 && normalizedOriginImageCHistogram[i] <= normalizedTargetImageCHistogram[j]) {\n      j = j - 1;\n    }\n\n    lookupTable.push(j);\n  }\n\n  return (0, _transformImage.transformImage)(imgBuffer, lookupTable);\n};\n\nexports.histogramSpecification = histogramSpecification;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.imageResampling = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"../RgbaImageBuffer\"));\n\nvar _exceptions = require(\"../exceptions\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\r\n * Applies resampling operation to the given image\r\n *\r\n * @param {RgbaImageBuffer} imgBuffer Image to transform\r\n * @param {Number} blockWidth Width of the pixels block to resample the image\r\n * @param {Number} blockHeight Height of the pixels block to resample the image\r\n * @returns {RgbaImageBuffer} Transformed image\r\n */\n\n\nvar imageResampling = function imageResampling(imgBuffer, blockWidth, blockHeight) {\n  if (blockWidth < 1 || blockWidth > imgBuffer.width) throw new _exceptions.ImageOperationException(\"ImageResamplingException\", \"Invalid block width value, block width should be greater than 0 and less or equal than image width.\");\n  if (blockHeight < 1 || blockHeight > imgBuffer.height) throw new _exceptions.ImageOperationException(\"ImageResamplingException\", \"Invalid block height value, block height should be greater than 0 and less or equal than image height.\");\n  var resultPixels = new Uint8ClampedArray(imgBuffer.width * imgBuffer.height * _RgbaImageBuffer.default.NUM_CHANNELS);\n  var initialY = 0;\n  var initialX;\n\n  while (initialY + blockHeight <= imgBuffer.height) {\n    initialX = 0;\n\n    while (initialX + blockWidth <= imgBuffer.width) {\n      resampleBlock(imgBuffer, resultPixels, initialX, initialY, initialX + blockWidth, initialY + blockHeight);\n      initialX = initialX + blockWidth;\n    } //Residual X\n\n\n    resampleBlock(imgBuffer, resultPixels, initialX, initialY, imgBuffer.width, initialY + blockHeight);\n    initialY = initialY + blockHeight;\n  }\n\n  initialX = 0;\n\n  while (initialX + blockWidth <= imgBuffer.width) {\n    // Residual Y\n    resampleBlock(imgBuffer, resultPixels, initialX, initialY, initialX + blockWidth, imgBuffer.height);\n    initialX = initialX + blockWidth;\n  } // Residual X and Y\n\n\n  resampleBlock(imgBuffer, resultPixels, initialX, initialY, imgBuffer.width, imgBuffer.height);\n  return new _RgbaImageBuffer.default(imgBuffer.width, imgBuffer.height, resultPixels);\n};\n/**\r\n * Resamples the given block of the given image\r\n *\r\n * @param {RgbaImageBuffer} imgBuffer Image which contains the block\r\n * @param {Array} pixels Result of resampling the given block\r\n * @param {Number} initialX X axis position of the upper left corner of the block\r\n * @param {Number} initialY Y axis position of the upper left corner of the block\r\n * @param {Number} xLimit X axis position of the lower right corner of the block\r\n * @param {Number} yLimit Y axis position of the lower right corner of the block\r\n */\n\n\nexports.imageResampling = imageResampling;\n\nvar resampleBlock = function resampleBlock(imgBuffer, pixels, initialX, initialY, xLimit, yLimit) {\n  var sum = [0, 0, 0, 0];\n  var count = 0;\n  var index; // New value calc\n\n  for (var y = initialY; y < yLimit; ++y) {\n    for (var x = initialX; x < xLimit; ++x) {\n      for (var i = 0; i < _RgbaImageBuffer.default.NUM_CHANNELS; ++i) {\n        sum[i] = sum[i] + imgBuffer.getPixel({\n          x: x,\n          y: y\n        })[i];\n      }\n\n      count = count + 1;\n    }\n  }\n\n  var newValues = sum.map(function (value) {\n    return value / count;\n  }); // Block resampling\n\n  for (var _y = initialY; _y < yLimit; ++_y) {\n    for (var _x = initialX; _x < xLimit; ++_x) {\n      index = (_y * imgBuffer.width + _x) * _RgbaImageBuffer.default.NUM_CHANNELS;\n      pixels[index] = newValues[0];\n      pixels[index + 1] = newValues[1];\n      pixels[index + 2] = newValues[2];\n      pixels[index + 3] = newValues[3];\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.imageResizing = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"../RgbaImageBuffer\"));\n\nvar _exceptions = require(\"../exceptions\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\r\n * Returns the image buffer resulting of resizing the given image buffer.\r\n *\r\n * @param {RgbaImageBuffer} imgBuffer Buffer of the image to resize\r\n * @param {Number} widthPercentage Resizing parameter\r\n * @param {Number} heightPercentage Resizing parameter\r\n * @param {Function} interpolationMethod Interpolation method to calculate the\r\n * possible new lightness values obtained after applying the geometric operation\r\n */\n\n\nvar imageResizing = function imageResizing(imgBuffer, widthPercentage, heighPercentage, interpolationMethod) {\n  var oldWidth = imgBuffer.width;\n  var oldHeight = imgBuffer.height;\n  var widthFactor = widthPercentage / 100;\n  var heightFactor = heighPercentage / 100;\n  var newWidth = Math.floor(oldWidth * widthFactor);\n  var newHeight = Math.floor(oldHeight * heightFactor);\n\n  if (newWidth < 1) {\n    throw new _exceptions.ImageOperationException(\"ImageResizingException\", \"Width of the resized image is too small.\");\n  }\n\n  if (newHeight < 1) {\n    throw new _exceptions.ImageOperationException(\"ImageResizingException\", \"Height of the resized image is too small.\");\n  }\n\n  var inverseTransformation = function inverseTransformation(xCoord, yCoord) {\n    return {\n      x: xCoord / widthFactor,\n      y: yCoord / heightFactor\n    };\n  };\n\n  var resultPixels = new Uint8ClampedArray(newWidth * newHeight * _RgbaImageBuffer.default.NUM_CHANNELS);\n  var transformedCoords;\n  var currentIndex = 0;\n\n  for (var j = 0; j < newHeight; ++j) {\n    for (var i = 0; i < newWidth; ++i) {\n      transformedCoords = inverseTransformation(i, j);\n      var newValues = interpolationMethod(transformedCoords.x, transformedCoords.y, imgBuffer);\n      resultPixels[currentIndex] = Math.round(newValues[0]);\n      resultPixels[currentIndex + 1] = Math.round(newValues[1]);\n      resultPixels[currentIndex + 2] = Math.round(newValues[2]);\n      resultPixels[currentIndex + 3] = Math.round(newValues[3]);\n      currentIndex += _RgbaImageBuffer.default.NUM_CHANNELS;\n    }\n  }\n\n  return new _RgbaImageBuffer.default(newWidth, newHeight, resultPixels);\n};\n\nexports.imageResizing = imageResizing;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.imageRotation = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"../RgbaImageBuffer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\r\n * Returns whether the given value is in range [min, max).\r\n * That is min <= value < max;\r\n */\n\n\nvar isInRange = function isInRange(value, min, max) {\n  return value >= min && value < max;\n};\n/**\r\n * Returns the image buffer resulting of rotating the given image buffer.\r\n * If the rotateAndPaintRotation flag is set to false, the transparent\r\n * pixels of the resulting image will be filled. The given interpolation\r\n * method will calculate the values of the new pixels.\r\n *\r\n * @param {RgbaImageBuffer} imgBuffer Buffer of the image to rotate\r\n * @param {Number} degrees Rotation parameter\r\n * @param {Function} interpolationMethod Interpolation method to calculate the\r\n * possible new lightness values obtained after applying the geometric operation\r\n * @param {Boolean} rotateAndPaintRotation Establishes the nature of the rotation\r\n */\n\n\nvar imageRotation = function imageRotation(imgBuffer, degrees, interpolationMethod, rotateAndPaintRotation) {\n  var width = imgBuffer.width;\n  var height = imgBuffer.height;\n  var radians = degrees * (Math.PI / 180);\n\n  var directTransformation = function directTransformation(xCoord, yCoord) {\n    return {\n      x: Math.cos(radians) * xCoord - Math.sin(radians) * yCoord,\n      y: Math.sin(radians) * xCoord + Math.cos(radians) * yCoord\n    };\n  };\n\n  var newImageInfo = getRotatedImageInfo(width, height, directTransformation);\n\n  if (rotateAndPaintRotation) {\n    return rotateAndPaint(imgBuffer, directTransformation, newImageInfo);\n  }\n\n  var inverseTransformation = function inverseTransformation(xCoord, yCoord) {\n    return {\n      x: Math.cos(-radians) * xCoord - Math.sin(-radians) * yCoord,\n      y: Math.sin(-radians) * xCoord + Math.cos(-radians) * yCoord\n    };\n  };\n\n  var resultPixels = new Uint8ClampedArray(newImageInfo.width * newImageInfo.height * _RgbaImageBuffer.default.NUM_CHANNELS);\n  var transformedCoords;\n  var currentIndex = 0;\n\n  for (var j = 0; j < newImageInfo.height; ++j) {\n    for (var i = 0; i < newImageInfo.width; ++i) {\n      transformedCoords = inverseTransformation(i + newImageInfo.minXCoord, j + newImageInfo.minYCoord);\n\n      if (isInRange(Math.round(transformedCoords.x), 0, width + 1) && isInRange(Math.round(transformedCoords.y), 0, height + 1)) {\n        var newValues = interpolationMethod(transformedCoords.x, transformedCoords.y, imgBuffer);\n        resultPixels[currentIndex] = Math.round(newValues[0]);\n        resultPixels[currentIndex + 1] = Math.round(newValues[1]);\n        resultPixels[currentIndex + 2] = Math.round(newValues[2]);\n        resultPixels[currentIndex + 3] = Math.round(newValues[3]);\n      } else {\n        // Background pixel\n        resultPixels[currentIndex] = 0; // R channel\n\n        resultPixels[currentIndex + 1] = 0; // G channel\n\n        resultPixels[currentIndex + 2] = 0; // B channel\n\n        resultPixels[currentIndex + 3] = 0; // A channel\n      }\n\n      currentIndex += _RgbaImageBuffer.default.NUM_CHANNELS;\n    }\n  }\n\n  return new _RgbaImageBuffer.default(newImageInfo.width, newImageInfo.height, resultPixels);\n};\n/**\r\n * Returns the image buffer resulting of rotating the given image buffer.\r\n * It may contain transparent pixels due to the nature of this rotation\r\n * process, the inverse tranformation it isn't used.\r\n *\r\n * @param {RgbaImageBuffer} imgBuffer Buffer of the image to rotate\r\n * @param {Function} directTransformation Maps the old image pixels\r\n * positions to the new one positions\r\n * @param {Object} newImageInfo Contains relevant information about\r\n * the resulting image\r\n */\n\n\nexports.imageRotation = imageRotation;\n\nvar rotateAndPaint = function rotateAndPaint(imgBuffer, directTransformation, newImageInfo) {\n  var resultPixels = new Uint8ClampedArray(newImageInfo.width * newImageInfo.height * _RgbaImageBuffer.default.NUM_CHANNELS);\n  var transformedCoords;\n  var currentIndex;\n  var originalImagePixel;\n\n  for (var j = 0; j < imgBuffer.height; ++j) {\n    for (var i = 0; i < imgBuffer.width; ++i) {\n      transformedCoords = directTransformation(i, j);\n      currentIndex = (Math.round(transformedCoords.y - newImageInfo.minYCoord) * newImageInfo.width + Math.round(transformedCoords.x - newImageInfo.minXCoord)) * _RgbaImageBuffer.default.NUM_CHANNELS; // TODO: colored images\n      // For now we assume we are operating with grayscale images\n\n      originalImagePixel = imgBuffer.getPixel({\n        x: i,\n        y: j\n      });\n      resultPixels[currentIndex] = originalImagePixel[0]; // R channel\n\n      resultPixels[currentIndex + 1] = originalImagePixel[1]; // G channel\n\n      resultPixels[currentIndex + 2] = originalImagePixel[2]; // B channel\n\n      resultPixels[currentIndex + 3] = originalImagePixel[3]; // A channel\n    }\n  }\n\n  return new _RgbaImageBuffer.default(newImageInfo.width, newImageInfo.height, resultPixels);\n};\n/**\r\n * Returns information about the rotated image.\r\n *\r\n * @param {Number} width Width of the image to rotate\r\n * @param {Number} height Height of the image to rotate\r\n * @param {Function} directTransformation Needed to calculate the new dimensions\r\n */\n\n\nvar getRotatedImageInfo = function getRotatedImageInfo(width, height, directTransformation) {\n  var upperLeftCornerRotated = directTransformation(0, 0);\n  var lowerLeftCornerRotated = directTransformation(0, height);\n  var upperRightCornerRotated = directTransformation(width, 0);\n  var lowerRightCornerRotated = directTransformation(width, height);\n  var maxXCoord = Math.max(upperLeftCornerRotated.x, lowerLeftCornerRotated.x, upperRightCornerRotated.x, lowerRightCornerRotated.x);\n  var minXCoord = Math.min(upperLeftCornerRotated.x, lowerLeftCornerRotated.x, upperRightCornerRotated.x, lowerRightCornerRotated.x);\n  var maxYCoord = Math.max(upperLeftCornerRotated.y, lowerLeftCornerRotated.y, upperRightCornerRotated.y, lowerRightCornerRotated.y);\n  var minYCoord = Math.min(upperLeftCornerRotated.y, lowerLeftCornerRotated.y, upperRightCornerRotated.y, lowerRightCornerRotated.y);\n  return {\n    width: Math.floor(Math.abs(maxXCoord - minXCoord)),\n    height: Math.floor(Math.abs(maxYCoord - minYCoord)),\n    minXCoord: minXCoord,\n    minYCoord: minYCoord\n  };\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.imageTranspose = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"../RgbaImageBuffer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\r\n * Applies image transpose operation to the given image.\r\n *\r\n * @param {RgbaImageBuffer} imgBuffer Image to transform\r\n * @returns {RgbaImageBuffer} Transformed image\r\n */\n\n\nvar imageTranspose = function imageTranspose(imgBuffer) {\n  var height = imgBuffer.width;\n  var width = imgBuffer.height;\n  var resultPixels = new Uint8ClampedArray(width * height * _RgbaImageBuffer.default.NUM_CHANNELS);\n  var currentIndex = 0;\n  var originalImagePixel;\n\n  for (var j = 0; j < height; ++j) {\n    for (var i = 0; i < width; ++i) {\n      originalImagePixel = imgBuffer.getPixel({\n        x: j,\n        y: i\n      });\n      resultPixels[currentIndex] = originalImagePixel[0]; // R channel\n\n      resultPixels[currentIndex + 1] = originalImagePixel[1]; // G channel\n\n      resultPixels[currentIndex + 2] = originalImagePixel[2]; // B channel\n\n      resultPixels[currentIndex + 3] = originalImagePixel[3]; // A channel\n\n      currentIndex += _RgbaImageBuffer.default.NUM_CHANNELS;\n    }\n  }\n\n  return new _RgbaImageBuffer.default(width, height, resultPixels);\n};\n\nexports.imageTranspose = imageTranspose;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.interpolationMethods = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"../RgbaImageBuffer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\r\n * Returns the light value of the closest pixel of the given coordinates.\r\n */\n\n\nvar closestNeighbourInterpolation = function closestNeighbourInterpolation(xCoord, yCoord, imgBuffer) {\n  return [imgBuffer.getPixel({\n    x: Math.round(xCoord),\n    y: Math.round(yCoord)\n  })[0], imgBuffer.getPixel({\n    x: Math.round(xCoord),\n    y: Math.round(yCoord)\n  })[1], imgBuffer.getPixel({\n    x: Math.round(xCoord),\n    y: Math.round(yCoord)\n  })[2], imgBuffer.getPixel({\n    x: Math.round(xCoord),\n    y: Math.round(yCoord)\n  })[3]];\n};\n/**\r\n * Returns the light value of the given coordinates assuming that the light\r\n * values of the closest pixels vary linearly.\r\n */\n\n\nvar bilinearInterpolation = function bilinearInterpolation(xCoord, yCoord, imgBuffer) {\n  var A = [imgBuffer.getPixel({\n    x: Math.floor(xCoord),\n    y: Math.ceil(yCoord)\n  })[0], imgBuffer.getPixel({\n    x: Math.floor(xCoord),\n    y: Math.ceil(yCoord)\n  })[1], imgBuffer.getPixel({\n    x: Math.floor(xCoord),\n    y: Math.ceil(yCoord)\n  })[2], imgBuffer.getPixel({\n    x: Math.floor(xCoord),\n    y: Math.ceil(yCoord)\n  })[3]];\n  var B = [imgBuffer.getPixel({\n    x: Math.ceil(xCoord),\n    y: Math.ceil(yCoord)\n  })[0], imgBuffer.getPixel({\n    x: Math.ceil(xCoord),\n    y: Math.ceil(yCoord)\n  })[1], imgBuffer.getPixel({\n    x: Math.ceil(xCoord),\n    y: Math.ceil(yCoord)\n  })[2], imgBuffer.getPixel({\n    x: Math.ceil(xCoord),\n    y: Math.ceil(yCoord)\n  })[3]];\n  var C = [imgBuffer.getPixel({\n    x: Math.floor(xCoord),\n    y: Math.floor(yCoord)\n  })[0], imgBuffer.getPixel({\n    x: Math.floor(xCoord),\n    y: Math.floor(yCoord)\n  })[1], imgBuffer.getPixel({\n    x: Math.floor(xCoord),\n    y: Math.floor(yCoord)\n  })[2], imgBuffer.getPixel({\n    x: Math.floor(xCoord),\n    y: Math.floor(yCoord)\n  })[3]];\n  var D = [imgBuffer.getPixel({\n    x: Math.ceil(xCoord),\n    y: Math.floor(yCoord)\n  })[0], imgBuffer.getPixel({\n    x: Math.ceil(xCoord),\n    y: Math.floor(yCoord)\n  })[1], imgBuffer.getPixel({\n    x: Math.ceil(xCoord),\n    y: Math.floor(yCoord)\n  })[2], imgBuffer.getPixel({\n    x: Math.ceil(xCoord),\n    y: Math.floor(yCoord)\n  })[3]];\n  var p = xCoord - Math.floor(xCoord);\n  var q = yCoord - Math.floor(yCoord);\n  var transform = [];\n\n  for (var i = 0; i < _RgbaImageBuffer.default.NUM_CHANNELS; ++i) {\n    transform[i] = C[i] + (D[i] - C[i]) * p + (A[i] - C[i]) * q + (B[i] + C[i] - A[i] - D[i]) * p * q;\n  }\n\n  return transform;\n};\n\nvar interpolationMethods = {\n  closestNeighbourInterpolation: closestNeighbourInterpolation,\n  bilinearInterpolation: bilinearInterpolation\n};\nexports.interpolationMethods = interpolationMethods;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.linearTransformation = void 0;\n\nvar _transformImage = require(\"./transformImage\");\n\nvar _exceptions = require(\"../exceptions\");\n/**\r\n * Transforms the given image according to the linear sections\r\n * conformed by the given points\r\n *\r\n * @param {RgbaImageBuffer} imgBuffer Image to transform\r\n * @param {Array} points Contains the points which defines\r\n * the sections of the linear transformation\r\n * @returns {RgbaImageBuffer} Transformed image\r\n */\n\n\nvar linearTransformation = function linearTransformation(imgBuffer, points) {\n  if (points.length < 2) throw new _exceptions.ImageOperationException(\"LinearTransformationException\", \"Linear transformation needs at least 2 points\");\n\n  for (var i = 0; i < points.length - 1; ++i) {\n    if (points[i].x > points[i + 1].x) throw new _exceptions.ImageOperationException(\"LinearTransformationException\", \"Points must be ordered according to the x coordinate value\");\n    if (points[i].x === points[i + 1].x) throw new _exceptions.ImageOperationException(\"LinearTransformationException\", \"Different points should not have the same x coordinate value\");\n  }\n\n  if (points[0].x > 0) throw new _exceptions.ImageOperationException(\"LinearTransformationException\", \"X coordinate value of the first point should be less or equal to 0\");\n  if (points[points.length - 1].x < 255) throw new _exceptions.ImageOperationException(\"LinearTransformationException\", \"X coordinate value of the last point should be greater or equal to 255\");\n  var sections = [];\n\n  for (var _i = 1; _i < points.length; ++_i) {\n    var newSection = {};\n    newSection[\"slope\"] = (points[_i].y - points[_i - 1].y) / (points[_i].x - points[_i - 1].x);\n    newSection[\"yIntercept\"] = points[_i].y - newSection.slope * points[_i].x;\n    newSection[\"frontier\"] = points[_i].x;\n    sections.push(newSection);\n  }\n\n  var lookupTable = [];\n  var currentSectionIndex = 0;\n\n  for (var _i2 = 0; _i2 < 256; ++_i2) {\n    if (_i2 > sections[currentSectionIndex].frontier) currentSectionIndex++;\n    var newValue = Math.round(sections[currentSectionIndex].slope * _i2 + sections[currentSectionIndex].yIntercept);\n    lookupTable.push(Math.min(Math.max(newValue, 0), 255));\n  }\n\n  return (0, _transformImage.transformImage)(imgBuffer, lookupTable);\n};\n\nexports.linearTransformation = linearTransformation;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mirror = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"../RgbaImageBuffer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\r\n * Applies horizontal mirror operation to the given image.\r\n *\r\n * @param {RgbaImageBuffer} imgBuffer Image to transform\r\n * @returns {RgbaImageBuffer} Transformed image\r\n */\n\n\nvar horizontalMirror = function horizontalMirror(imgBuffer) {\n  var width = imgBuffer.width;\n  var height = imgBuffer.height;\n  var resultPixels = new Uint8ClampedArray(width * height * _RgbaImageBuffer.default.NUM_CHANNELS);\n  var currentIndex = 0;\n  var originalImagePixel;\n\n  for (var j = height - 1; j >= 0; --j) {\n    for (var i = 0; i < width; ++i) {\n      originalImagePixel = imgBuffer.getPixel({\n        x: i,\n        y: j\n      });\n      resultPixels[currentIndex] = originalImagePixel[0]; // R channel\n\n      resultPixels[currentIndex + 1] = originalImagePixel[1]; // G channel\n\n      resultPixels[currentIndex + 2] = originalImagePixel[2]; // B channel\n\n      resultPixels[currentIndex + 3] = originalImagePixel[3]; // A channel\n\n      currentIndex += _RgbaImageBuffer.default.NUM_CHANNELS;\n    }\n  }\n\n  return new _RgbaImageBuffer.default(width, height, resultPixels);\n};\n/**\r\n * Applies vertical mirror operation to the given image.\r\n *\r\n * @param {RgbaImageBuffer} imgBuffer Image to transform\r\n * @returns {RgbaImageBuffer} Transformed image\r\n */\n\n\nvar verticalMirror = function verticalMirror(imgBuffer) {\n  var width = imgBuffer.width;\n  var height = imgBuffer.height;\n  var resultPixels = new Uint8ClampedArray(width * height * _RgbaImageBuffer.default.NUM_CHANNELS);\n  var currentIndex = 0;\n  var originalImagePixel;\n\n  for (var j = 0; j < height; ++j) {\n    for (var i = width - 1; i >= 0; --i) {\n      originalImagePixel = imgBuffer.getPixel({\n        x: i,\n        y: j\n      });\n      resultPixels[currentIndex] = originalImagePixel[0]; // R channel\n\n      resultPixels[currentIndex + 1] = originalImagePixel[1]; // G channel\n\n      resultPixels[currentIndex + 2] = originalImagePixel[2]; // B channel\n\n      resultPixels[currentIndex + 3] = originalImagePixel[3]; // A channel\n\n      currentIndex += _RgbaImageBuffer.default.NUM_CHANNELS;\n    }\n  }\n\n  return new _RgbaImageBuffer.default(width, height, resultPixels);\n};\n\nvar mirror = {\n  horizontal: horizontalMirror,\n  vertical: verticalMirror\n};\nexports.mirror = mirror;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.quantization = void 0;\n\nvar _transformImage = require(\"./transformImage\");\n\nvar _exceptions = require(\"../exceptions\");\n/**\r\n * Applies quantization to the given image according to the given\r\n * amount of levels\r\n *\r\n * @param {RgbaImageBuffer} imgBuffer Image to transform\r\n * @param {Number} amountOfLevels Amount of bits to represent each value of light\r\n * @returns {RgbaImageBuffer} Transformed image\r\n */\n\n\nvar quantization = function quantization(imgBuffer, amountOfLevels) {\n  if (amountOfLevels < 0 || amountOfLevels > 8) throw new _exceptions.ImageOperationException(\"QuantizationException\", \"Invalid amount of levels, the amount should be equal or greater than 0 and equal or less than 8.\");\n  if (!Number.isInteger(amountOfLevels)) throw new _exceptions.ImageOperationException(\"QuantizationException\", \"Invalid amount of levels, the value should be an integer number.\");\n  if (amountOfLevels === 8) return imgBuffer;\n  var newValues = [0];\n\n  if (amountOfLevels > 1) {\n    var part = 256 / (Math.pow(2, amountOfLevels) - 1);\n\n    while (newValues[newValues.length - 1] + part < 255) {\n      newValues.push(newValues[newValues.length - 1] + part);\n    }\n  }\n\n  newValues = newValues.map(function (value) {\n    return Math.round(value);\n  });\n\n  if (amountOfLevels > 0) {\n    newValues.push(255);\n  }\n\n  var lookupTable = [];\n  var distance;\n  var minDistance;\n  var index;\n\n  for (var i = 0; i < 256; ++i) {\n    minDistance = Number.POSITIVE_INFINITY;\n\n    for (var j = 0; j < newValues.length; ++j) {\n      distance = Math.abs(i - newValues[j]);\n\n      if (distance < minDistance) {\n        index = j;\n        minDistance = distance;\n      }\n    }\n\n    lookupTable.push(newValues[index]);\n  }\n\n  return (0, _transformImage.transformImage)(imgBuffer, lookupTable);\n};\n\nexports.quantization = quantization;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} // TODO: pollyfill ImageData constructor\n\n/**\r\n * Class to represent a RGBA pixel matrix (an image). This class aims to\r\n * abstract away the pixel related manipulations by providing a set of\r\n * convenience methods for iterating through pixels.\r\n */\n\n\nvar RgbaImageBuffer =\n/*#__PURE__*/\nfunction () {\n  _createClass(RgbaImageBuffer, null, [{\n    key: \"fromImageData\",\n\n    /** Number of channels in a RGBA pixel */\n\n    /**\r\n     * Convenient function to create a RgbaImage instance from an ImageData object\r\n     * where the width, height are copied but the pixel array is only copied the\r\n     * references\r\n     *\r\n     * @param {ImageData} imgData ImageData instance to create the RgbaImage from\r\n     * @returns {RgbaImageBuffer} Instance of RgbaImage initialized from the ImgData\r\n     */\n    value: function fromImageData(_ref) {\n      var width = _ref.width,\n          height = _ref.height,\n          data = _ref.data;\n      return new RgbaImageBuffer(width, height, data);\n    }\n    /**\r\n     * Convenient function to create an ImageData object from a RgbaImage object\r\n     *\r\n     * @param {RgbaImageBuffer} rgbaImage Instance of RgbaImage used to create the\r\n     * ImageData\r\n     * @returns {ImageData} ImageData instance with a copy of the width, height\r\n     * and pixels of the given RgbaImage\r\n     */\n\n  }, {\n    key: \"toImageData\",\n    value: function toImageData(_ref2) {\n      var width = _ref2.width,\n          height = _ref2.height,\n          pixels = _ref2.pixels;\n      var imgData = new ImageData(width, height);\n      imgData.data.set(pixels);\n      return imgData;\n    }\n    /**\r\n     * Creates an instance of this class. Note: this treats the given pixels as\r\n     * RGBA pixels\r\n     *\r\n     * @param {number} width Pixel matrix width\r\n     * @param {number} height Pixel matrix height\r\n     * @param {Uint8ClampedArray} pixels TypedArray of RGBA Pixels\r\n     */\n\n  }]);\n\n  function RgbaImageBuffer(width, height, pixels) {\n    var _this = this;\n\n    _classCallCheck(this, RgbaImageBuffer);\n\n    _defineProperty(this, \"toImageData\", function () {\n      return RgbaImageBuffer.toImageData(_this);\n    });\n\n    _defineProperty(this, \"copy\", function () {\n      return new RgbaImageBuffer(_this.width, _this.height, new Uint8ClampedArray(_this.pixels));\n    });\n\n    _defineProperty(this, \"getPixel\", function (_ref3) {\n      var x = _ref3.x,\n          y = _ref3.y;\n      x = Math.max(0, Math.min(_this.width - 1, x));\n      y = Math.max(0, Math.min(_this.height - 1, y));\n\n      var pixelPosition = _this._mapMatrixPositionToArray(x, y); // We tested this way and it turned to be much more performant than using slice\n\n\n      return [_this.pixels[pixelPosition], _this.pixels[pixelPosition + 1], _this.pixels[pixelPosition + 2], _this.pixels[pixelPosition + 3]];\n    });\n\n    _defineProperty(this, \"_mapMatrixPositionToArray\", function (x, y) {\n      return (y * _this.width + x) * RgbaImageBuffer.NUM_CHANNELS;\n    }); // TODO: check that everything is right (width, height > 0; width * height *\n    // rgbaDimension = pixels.length; etc)\n\n\n    this._width = width;\n    this._height = height;\n    this._pixels = pixels;\n  }\n  /** Alias for RgbaImage.toImageData(instanceOfRgbaImage) */\n\n\n  _createClass(RgbaImageBuffer, [{\n    key: \"pixels\",\n\n    /**\r\n     * @returns {Uint8ClampedArray} Pixels values of the image, an element for\r\n     * each pixel dimension (4 in case of RGBA for example)\r\n     */\n    get: function get() {\n      return this._pixels;\n    }\n    /** @returns {number} The width of the image */\n\n  }, {\n    key: \"width\",\n    get: function get() {\n      return this._width;\n    }\n    /** @returns {number} The height of the image */\n\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this._height;\n    }\n    /**\r\n     * Given a coordinate in matrix space (2 dimensions) this method returns the\r\n     * corresponding coordinate in vector space (1 dimension).\r\n     *\r\n     * @param {number} x Horizontal coordinate\r\n     * @param {number} y Vertical coordinate\r\n     * @returns {number} Corresponding vector coordinate\r\n     */\n\n  }]);\n\n  return RgbaImageBuffer;\n}();\n\nexports.default = RgbaImageBuffer;\n\n_defineProperty(RgbaImageBuffer, \"NUM_CHANNELS\", 4);","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"ImageOperationException\", {\n  enumerable: true,\n  get: function get() {\n    return _ImageOperationException.default;\n  }\n});\n\nvar _ImageOperationException = _interopRequireDefault(require(\"./ImageOperationException\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformImage = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"../RgbaImageBuffer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\r\n * Transforms an image according to the given lookup table.\r\n *\r\n * @param {RgbaImageBuffer} imgBuffer Image to transform\r\n * @param {Array} lookupTable Lookup table\r\n * @returns {RgbaImageBuffer} Transformed image\r\n */\n\n\nvar transformImage = function transformImage(imgBuffer, lookupTable) {\n  var result = imgBuffer.copy();\n\n  for (var i = 0; i < result.pixels.length; i += _RgbaImageBuffer.default.NUM_CHANNELS) {\n    result.pixels[i] = lookupTable[result.pixels[i]];\n    result.pixels[i + 1] = lookupTable[result.pixels[i + 1]];\n    result.pixels[i + 2] = lookupTable[result.pixels[i + 2]];\n  }\n\n  return result;\n};\n\nexports.transformImage = transformImage;","/**\r\n * Object defining the constants properties of the Grids\r\n */\r\nexport default {\r\n  GRID_COLUMNS: { lg: 10, md: 8, sm: 6, xs: 4, xxs: 2 },\r\n  LAYOUT_BREAKPOINTS: { lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 },\r\n  DEFAULT_GRID_ITEM_COLS: 2, // Number of columns each item is tall on creation\r\n  DEFAULT_GRID_ITEM_ROWS: 4, // Number of rows each item is wide on creation\r\n  GRID_ITEM_ROW_HEIGHT: 50 // Height in number pixels of each row\r\n};","import React from \"react\";\r\nimport { WidthProvider, Responsive } from \"react-grid-layout\";\r\nimport GRID_PROPERTIES from \"../../../lib/grid/gridProperties\";\r\n\r\nconst ResponsiveGrid = WidthProvider(Responsive);\r\n\r\n/**\r\n * react-grid-layout responsive grid with some default props given as defined in\r\n * gridProperties: cols, breakpoints and rowHeight\r\n */\r\nconst Grid = ({ children, ...props }) => {\r\n  return (\r\n    <ResponsiveGrid\r\n      cols={GRID_PROPERTIES.GRID_COLUMNS}\r\n      breakpoints={GRID_PROPERTIES.LAYOUT_BREAKPOINTS}\r\n      rowHeight={GRID_PROPERTIES.GRID_ITEM_ROW_HEIGHT}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </ResponsiveGrid>\r\n  );\r\n};\r\n\r\nGrid.propTypes = ResponsiveGrid.propTypes;\r\nGrid.defaultProps = { layouts: {}, ...ResponsiveGrid.defaultProps };\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./DeleteButton.css\";\r\n\r\n/**\r\n * Delete button component. Renders a circular button with a\r\n * cross to let the user know that they can delete something.\r\n *\r\n * The parent component is notified when the user wants to\r\n * delete via the `onDelete` prop. If `onDelete` is not\r\n * provided, the button will be rendered as a disabled button\r\n */\r\nconst DeleteButton = ({ onDelete, ...props }) => (\r\n  <button\r\n    className=\"DeleteButton\"\r\n    onClick={onDelete}\r\n    disabled={!onDelete}\r\n    aria-label=\"delete\"\r\n    {...props}\r\n  >\r\n    ×\r\n  </button>\r\n);\r\n\r\nDeleteButton.propTypes = {\r\n  onDelete: PropTypes.func\r\n};\r\n\r\nDeleteButton.defaultProps = {\r\n  onDelete: null\r\n};\r\n\r\nexport default DeleteButton;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport DeleteButton from \"../../DeleteButton\";\r\nimport \"./Item.css\";\r\n\r\n/** Helper method to prevent the default behaviour and stop the propagation of\r\n * an event */\r\nconst stopEvent = event => {\r\n  event.preventDefault();\r\n  event.stopPropagation();\r\n};\r\n\r\n/**\r\n * Grid Item component. Forces grid items to be draggable only by a toolbar at\r\n * the top and also allows to listen to delete events (renders a delete button\r\n * and the event fires when the user wants to delete the item). It can also\r\n * notifiy when the user selects and deselects this component via props\r\n */\r\nexport default class Item extends React.Component {\r\n  /** The rest of the props are provided by the grid */\r\n  static propTypes = {\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n      PropTypes.symbol,\r\n      PropTypes.object\r\n    ]).isRequired,\r\n    name: PropTypes.string,\r\n    onDelete: PropTypes.func,\r\n    onSelect: PropTypes.func,\r\n    isSelected: PropTypes.bool\r\n  };\r\n\r\n  static defaultProps = {\r\n    name: \"\",\r\n    onDelete: null,\r\n    onSelect: null,\r\n    onDeselect: null,\r\n    isSelected: false\r\n  };\r\n\r\n  /** We only want to allow the item being drag when the user is trying to drag\r\n   * it from a part of the item, a toolbar at the top */\r\n  state = {\r\n    isDraggable: false\r\n  };\r\n\r\n  /**\r\n   * Listen for document mouse up event so we can react to it even if the users\r\n   * triggers it out of this element\r\n   */\r\n  componentDidMount() {\r\n    document.addEventListener(\"mouseup\", this.onDragHandleMouseUp);\r\n  }\r\n\r\n  /**\r\n   * Clean the mouse up listener from the document when the component will be\r\n   * unmounted\r\n   */\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mouseup\", this.onDragHandleMouseUp);\r\n  }\r\n\r\n  /** Update the state to allow the item be dragged only when the user is\r\n   * clicking on the top toolbar */\r\n  onDragHandleMouseDown = () => this.setState({ isDraggable: true });\r\n\r\n  /** Update the state to forbid the item being dragged when the user stops\r\n   * clicking the top toolbar. This listener is attached to the document so it\r\n   * works even if the user drags the element out of the viewport and releses\r\n   * the mouse there */\r\n  onDragHandleMouseUp = () =>\r\n    this.state.isDraggable &&\r\n    this.setState({\r\n      isDraggable: false\r\n    });\r\n\r\n  /** Listener for the drag start event, but only allow the drag behaviour if\r\n   * the state says so */\r\n  onDragStart = event => {\r\n    if (this.state.isDraggable) {\r\n      stopEvent(event);\r\n      this.props.onMouseDown && this.props.onMouseDown(event);\r\n    }\r\n  };\r\n\r\n  /** Listener for the drag end event */\r\n  onDragEnd = event => {\r\n    if (this.state.isDraggable) {\r\n      stopEvent(event);\r\n      this.props.onMouseUp && this.props.onMouseUp(event);\r\n    }\r\n  };\r\n\r\n  /** When the user wants to delete the item, call the props `onDelete` callback\r\n   * with the ID of this element */\r\n  onDelete = () => this.props.onDelete(this.props.id);\r\n\r\n  /** When the user selects this item, call the props `onSelect` callback with\r\n   * the ID of this element */\r\n  onSelect = () => this.props.onSelect(this.props.id);\r\n\r\n  render() {\r\n    const {\r\n      children,\r\n      className,\r\n      style,\r\n      name,\r\n      onSelect,\r\n      onDelete,\r\n      isSelected\r\n    } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className={`Item ${className} ${isSelected && \"is-selected\"}`}\r\n        style={style}\r\n        draggable={this.state.isDraggable}\r\n        onDragStart={this.onDragStart}\r\n        onMouseUp={this.onDragEnd} // OnMouseUp instead of DragEnd because DragStart prevents default\r\n        onFocus={onSelect ? this.onSelect : null}\r\n        tabIndex=\"0\"\r\n      >\r\n        <div onMouseDown={this.onDragHandleMouseDown} className=\"Item__toolbar\">\r\n          <DeleteButton\r\n            onMouseDown={stopEvent}\r\n            onDelete={onDelete ? this.onDelete : null}\r\n          />\r\n          <span className=\"Item__name\">{name}</span>\r\n        </div>\r\n        <div className=\"Item__childrenContainer\">{children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Grid from \"./Grid/Grid\";\r\nimport Item from \"./Item/Item\";\r\n\r\nexport default {\r\n  Grid,\r\n  Item\r\n};\r\n","/**\r\n * Maps the given coordinates with respect to the viewport to coordinates\r\n * with respect to the given element\r\n *\r\n * @param {Object} coords Coordinates to map to relative coordinates\r\n * @param {number} coords.clientX Horizontal coordinate with respect to the app viewport\r\n * @param {number} coords.clientY Vertical coordinate with respect to the app viewport\r\n * @param {Element} parentElement Element to get the bounding box from to\r\n * map the given coordinates to be relative to this element\r\n * @returns {Object} {x, y} Mouse coordinates with respect to the given element\r\n */\r\nexport function mapToCoordinatesRelativeToElement(coords, parentElement) {\r\n  return mapToRelativeCoordinates(\r\n    coords,\r\n    parentElement.getBoundingClientRect()\r\n  );\r\n}\r\n\r\n/**\r\n * Maps the mouse coordinates from the given mouse event to relative\r\n * coordinates with respect to the given element bounding box\r\n *\r\n * @param {Object} coords Coordinates to map to relative coordinates\r\n * @param {number} coords.clientX Horizontal coordinate with respect to the app viewport\r\n * @param {number} coords.clientY Vertical coordinate with respect to the app viewport\r\n * @param {DOMRectReadOnly} parentElementBoundingBox Bounding box where to\r\n * map the coordinates to\r\n * @returns {Object} {x, y} Mouse coordinates with respect the given bounding box\r\n */\r\nexport function mapToRelativeCoordinates(coords, parentElementBoundingBox) {\r\n  const { top, left } = parentElementBoundingBox;\r\n\r\n  // Top and left can be real numbers. If, for example, top = 66.19\r\n  // it means that the top of the element is at 66.19 CSS pixels\r\n  // from the top of the viewport. However we want to map that\r\n  // to integer values. The mouse position is relative to the viewport and it is\r\n  // an integer value. If the element top is at 66.19 CSS pixels from the top of the\r\n  // viewport then the first integer pixel would be 67. Cannot be 66 because\r\n  // there aren't element pixels below 66.19. So to consider the top and\r\n  // left values as integers we have to consider the ceiling.\r\n\r\n  return {\r\n    x: coords.clientX - Math.ceil(left),\r\n    y: coords.clientY - Math.ceil(top)\r\n  };\r\n}\r\n\r\n/** Returns an object describing the rectangle enclosed by the 2 given\r\n * coordinates */\r\nexport function calculateRect(coords1, coords2, callback) {\r\n  const left = Math.min(coords1.x, coords2.x);\r\n  const right = Math.max(coords1.x, coords2.x);\r\n  const top = Math.min(coords1.y, coords2.y);\r\n  const bottom = Math.max(coords1.y, coords2.y);\r\n\r\n  if(callback && typeof callback === 'function')\r\n    return callback({ left, right, top, bottom });\r\n  \r\n  return { left, right, top, bottom };\r\n}\r\n\r\n/** Returns true if point is inside rect, false in another case */\r\nexport function pointInsideRect(rect, point) {\r\n  return  point.y <= rect.bottom && point.y >= rect.top &&\r\n          point.x <= rect.right && point.x >= rect.left;\r\n}","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { RgbaImageBuffer } from \"wiplib\";\r\nimport * as Coordinates from \"../../lib/coordinates\";\r\n\r\n// FIXME: the selection functionality doesn't work well when:\r\n// - The mouse up event is done outside the component\r\n// - The user wants to select a part passing the scroll\r\n/**\r\n * Component that renders an image from the given RgbaImage instance\r\n */\r\nclass ImageComponent extends Component {\r\n  static propTypes = {\r\n    /** RgbaImage instance to render */\r\n    rgbaImage: PropTypes.instanceOf(RgbaImageBuffer).isRequired,\r\n    /** Callback called with the mouse position relative to the\r\n     * image and the pixel value at that position */\r\n    onMouseMove: PropTypes.func,\r\n    /** Called when the user selects a region of the image */\r\n    onSelection: PropTypes.func.isRequired,\r\n    children: PropTypes.func.isRequired\r\n  };\r\n\r\n  static defaultProps = {\r\n    onMouseMove: null\r\n  };\r\n\r\n  /** Component state */\r\n  state = {\r\n    /** Flag to know if the image is currently being loaded */\r\n    isImageLoading: false,\r\n    /** Flag to know if the user clicked and is holding the mouse down */\r\n    isMouseDown: false,\r\n    /** Flag to know if the user is dragging the rect selection */\r\n    isDragging: false,\r\n    /** Coordinates of the mouse when the user started pressing it */\r\n    mouseDownOriginCoordinates: { x: -1, y: -1 },\r\n    /** Current mouse coordinates relative to the image viewport */\r\n    currentMouseCoordinates: { x: -1, y: -1 },\r\n    /** Origin coordinates of selection when user drag the selection rectangle */\r\n    selectionOriginCoords: { x: -1, y: -1 },\r\n    /** End coordinates of selection when user drag the selection rectangle */\r\n    selectionEndCoords: { x: -1, y: -1 },\r\n    /** Coordinates of the selection when user pressed down */\r\n    initialOriginCoords: { x: -1, y: -1 },\r\n    /** Coordinates of the selection when user release the mouse button */\r\n    initialEndCoords: { x: -1, y: -1 },\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Try to get the image and draw it to the canvas If there is an error\r\n    // update the state.error\r\n    const canvas = this.refs.canvas;\r\n    const context = canvas.getContext(\"2d\");\r\n\r\n    canvas.width = this.props.rgbaImage.width;\r\n    canvas.height = this.props.rgbaImage.height;\r\n    context.putImageData(this.props.rgbaImage.toImageData(), 0, 0);\r\n\r\n    this.setState({\r\n      isImageLoading: false\r\n    });\r\n  }\r\n\r\n  /** Mouse move event handler, gets the coordinates relative to the image where\r\n   * the user mouse is pointing to and the pixel RGBA value there and calls\r\n   * props.onMouseMove \r\n   * \r\n   * If user is dragging an existing rect, the coordinates of previous selection rect\r\n   * will be updated, taking in account image dimensions.\r\n   */\r\n  onMouseMove = mouseEvent => {\r\n    if (!this.props.onMouseMove || this.state.isImageLoading) {\r\n      return;\r\n    }\r\n\r\n    const coordinates = Coordinates.mapToCoordinatesRelativeToElement(\r\n      mouseEvent,\r\n      this.refs.canvas\r\n    );\r\n    const pixel = this.props.rgbaImage.getPixel(coordinates);\r\n\r\n    if (this.state.isMouseDown && !this.state.isDragging) {\r\n      this.setState({\r\n        currentMouseCoordinates: coordinates\r\n      });\r\n    } else if(this.state.isMouseDown && this.state.isDragging) {\r\n      const { \r\n        initialOriginCoords,\r\n        initialEndCoords, \r\n        mouseDownOriginCoordinates \r\n      } = this.state;\r\n\r\n      let { width, height } = this.props.rgbaImage;\r\n      width = width - 1;\r\n      height = height - 1;\r\n      \r\n      const Xdiff =  coordinates.x - mouseDownOriginCoordinates.x;\r\n      const Ydiff = coordinates.y - mouseDownOriginCoordinates.y;\r\n\r\n      let selectionRect = Coordinates.calculateRect(initialOriginCoords, initialEndCoords, (selectionRect) => {\r\n        let { top, left, right, bottom } = selectionRect;\r\n        let originCoords = { x: left + Xdiff, y: top + Ydiff };\r\n        let endCoords = { x: right + Xdiff, y: bottom + Ydiff };\r\n        \r\n        let selectionWidth = Math.abs(endCoords.x - originCoords.x);\r\n        let selectionHeight = Math.abs(endCoords.y - originCoords.y);\r\n\r\n        if(endCoords.x > width) {\r\n          originCoords.x = width - selectionWidth;\r\n          endCoords.x = width;\r\n        } else if(originCoords.x < 0) {\r\n          originCoords.x = 0;\r\n          endCoords.x = selectionWidth;\r\n        }\r\n        \r\n        if(endCoords.y > height) {\r\n          originCoords.y = height - selectionHeight;\r\n          endCoords.y = height;\r\n        } else if(originCoords.y < 0) {\r\n          originCoords.y = 0;\r\n          endCoords.y = selectionHeight;\r\n        }\r\n\r\n        return { originCoords, endCoords };\r\n      });\r\n     \r\n      this.setState({\r\n          currentMouseCoordinates: coordinates,\r\n          selectionOriginCoords: selectionRect.originCoords,\r\n          selectionEndCoords: selectionRect.endCoords,\r\n      });\r\n    }\r\n    this.props.onMouseMove(coordinates, pixel);\r\n  };\r\n\r\n  /**\r\n   * Event listener for the mouse down event. Updates the state to know that the\r\n   * user wants to select a part of the image and sets the origin mouse\r\n   * coordinate. If user clicks on a previous selection region, the selection\r\n   * original coords will be saved.\r\n   */\r\n  onMouseDown = mouseEvent => {\r\n    const coordinates = Coordinates.mapToCoordinatesRelativeToElement(\r\n      mouseEvent,\r\n      this.refs.canvas\r\n    );\r\n\r\n    const {\r\n      selectionOriginCoords,\r\n      selectionEndCoords,\r\n    } = this.state;\r\n\r\n    const prevRect = Coordinates.calculateRect(selectionOriginCoords, selectionEndCoords);\r\n    \r\n    if (!Coordinates.pointInsideRect(prevRect, coordinates)) {\r\n      this.setState({\r\n        mouseDownOriginCoordinates: coordinates,\r\n        isMouseDown: true,\r\n        currentMouseCoordinates: coordinates\r\n      });\r\n    } else {\r\n      this.setState({\r\n        mouseDownOriginCoordinates: coordinates,\r\n        isMouseDown: true,\r\n        isDragging: true,\r\n        currentMouseCoordinates: coordinates,\r\n        initialOriginCoords: { x: selectionOriginCoords.x, y: selectionOriginCoords.y },\r\n        initialEndCoords: { x: selectionEndCoords.x, y: selectionEndCoords.y }\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Event listener for the mouse up event. Updates the state to know that the\r\n   * user stopped the selection of the part of the image. Then, if the resulting\r\n   * rectangle has 0 width or height it is discarted. If user has moved the\r\n   * selection region, the new coords will be updated.\r\n   *\r\n   * MAYBE TODO: set the current mouse coordinate to the ones on mouse up TODO:\r\n   * notify the parent component of the selection\r\n   */\r\n  onMouseUp = () => {\r\n    const {\r\n      isMouseDown,\r\n      isDragging,\r\n      selectionOriginCoords,\r\n      selectionEndCoords,\r\n      mouseDownOriginCoordinates,\r\n      currentMouseCoordinates,\r\n    } = this.state;\r\n\r\n    if (!isMouseDown) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      mouseDownOriginCoordinates.x === currentMouseCoordinates.x &&\r\n      mouseDownOriginCoordinates.y === currentMouseCoordinates.y && !isDragging\r\n    ) {\r\n      this.setState({\r\n        isMouseDown: false,\r\n        selectionOriginCoords: { x: -1, y: -1 },\r\n        selectionEndCoords: { x: -1, y: -1 }\r\n      });\r\n      const { width, height } = this.props.rgbaImage;\r\n      this.props.onSelection({\r\n        originCoords: { x: 0, y: 0 },\r\n        endCoords: { x: width, y: height }\r\n      });\r\n    } else if(!isDragging) {\r\n      this.setState({\r\n        isMouseDown: false,\r\n        selectionOriginCoords: { x: mouseDownOriginCoordinates.x, y: mouseDownOriginCoordinates.y },\r\n        selectionEndCoords: { x: currentMouseCoordinates.x, y: currentMouseCoordinates.y }\r\n      });\r\n      this.props.onSelection({\r\n        originCoords: mouseDownOriginCoordinates,\r\n        endCoords: currentMouseCoordinates\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isDragging: false,\r\n        isMouseDown: false,\r\n      });\r\n\r\n      this.props.onSelection({\r\n        originCoords: selectionOriginCoords,\r\n        endCoords: selectionEndCoords,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { isDragging, isMouseDown, selectionOriginCoords, selectionEndCoords, \r\n      currentMouseCoordinates, mouseDownOriginCoordinates } = this.state;\r\n    return (\r\n      <div\r\n        style={{\r\n          position: \"relative\"\r\n        }}\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp}\r\n        onMouseMove={this.onMouseMove}\r\n      >\r\n        <canvas\r\n          ref=\"canvas\"\r\n          style={{\r\n            display: \"block\",\r\n            backgroundColor: \"#eee\",\r\n            maxHeight: \"100%\"\r\n          }}\r\n        />\r\n        {this.props.children({\r\n          originCoords: isMouseDown === true && !isDragging ? mouseDownOriginCoordinates : selectionOriginCoords,\r\n          endCoords: isMouseDown === true && !isDragging ? currentMouseCoordinates : selectionEndCoords\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageComponent;","import React, { Component } from \"react\";\r\nimport \"react-vis/dist/style.css\";\r\nimport {\r\n  FlexibleXYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  VerticalGridLines,\r\n  HorizontalGridLines,\r\n  VerticalRectSeries,\r\n  Hint\r\n} from \"react-vis\";\r\n\r\nclass HistogramComponent extends Component {\r\n  state = {\r\n    emphasizedValue: null,\r\n    histogramVisualizationData: [],\r\n    channel: this.props.channel\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (state.channel && props.channel !== state.channel) {\r\n      return {\r\n        emphasizedValue: null,\r\n        histogramVisualizationData: props.histogram.map(\r\n          (value, index) => ({ x0: index, x: index + 1, y: value })\r\n        ),\r\n        channel: props.channel\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      histogramVisualizationData: this.props.histogram.map(\r\n        (value, index) => ({ x0: index, x: index + 1, y: value })\r\n      )\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <FlexibleXYPlot\r\n        margin={{\r\n          left: 70\r\n        }}\r\n        onMouseLeave={() => this.setState({ emphasizedValue: null })}\r\n      >\r\n        <VerticalGridLines />\r\n        <HorizontalGridLines />\r\n        <XAxis />\r\n        <YAxis />\r\n        <VerticalRectSeries\r\n          onNearestX={value => this.setState({ emphasizedValue: value })}\r\n          data={this.state.histogramVisualizationData}\r\n          color={this.state.channel}\r\n        />\r\n        {this.state.emphasizedValue ? (\r\n          <Hint\r\n            value={this.state.emphasizedValue}\r\n            align={{ horizontal: \"auto\", vertical: \"top\" }}\r\n            style={{ fontSize: 14 }}\r\n            format={dataPoint => {\r\n              return [\r\n                {\r\n                  title: \"Value: \" + dataPoint.x0,\r\n                  value: \"Count: \" + dataPoint.y\r\n                }\r\n              ];\r\n            }}\r\n          />\r\n        ) : null}\r\n      </FlexibleXYPlot>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HistogramComponent;\r\n","import React from \"react\";\r\nimport HistogramComponent from \"../HistogramComponent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\n/**\r\n * Renders the given histogram and its information\r\n */\r\nexport default class HistogramAndInfoComponent extends React.Component {\r\n  state = {\r\n    currentTab: 0,\r\n    currentChannel: Object.keys(this.props.histogram.histogramValues)[0]\r\n  };\r\n\r\n  updateCurrentTab = (_, newTab) => this.setState({ currentTab: newTab });\r\n  updateCurrentChannel = (_, newChannel) => this.setState({ currentChannel: newChannel});\r\n\r\n  render() {\r\n    const { currentTab, currentChannel } = this.state;\r\n    const { histogramValues, histogramInfo } = this.props.histogram;\r\n    const { counts } = this.props.cHistogram;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\"\r\n          }}\r\n        >\r\n          <Button\r\n            style={\r\n              currentTab === 0\r\n                ? {\r\n                    boxShadow: \"0px 4px 6px -5px black\"\r\n                  }\r\n                : {}\r\n            }\r\n            onClick={e => this.updateCurrentTab(e, 0)}\r\n          >\r\n            Histogram\r\n          </Button>\r\n          <Button\r\n            style={\r\n              currentTab === 1\r\n                ? {\r\n                    boxShadow: \"0px 4px 6px -5px black\"\r\n                  }\r\n                : {}\r\n            }\r\n            onClick={e => this.updateCurrentTab(e, 1)}\r\n          >\r\n            Cumulative\r\n          </Button>\r\n          <Button\r\n            style={\r\n              currentTab === 2\r\n                ? {\r\n                    boxShadow: \"0px 4px 6px -5px black\"\r\n                  }\r\n                : {}\r\n            }\r\n            onClick={e => this.updateCurrentTab(e, 2)}\r\n          >\r\n            Information\r\n          </Button>\r\n        </div>\r\n        <div\r\n          style={{\r\n            padding: \"10px 0px 0px 0px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\"\r\n          }}\r\n        >\r\n          {\r\n            Object.keys(histogramValues).map( key => {\r\n              return (\r\n                <Button\r\n                  style={\r\n                    currentChannel === key\r\n                      ? {\r\n                          boxShadow: `0px 4px 6px -5px ${key}`\r\n                        }\r\n                      : {}\r\n                  }\r\n                  onClick={e => this.updateCurrentChannel(e, key)}\r\n                  key={key}\r\n                >\r\n                  {key}\r\n                </Button>\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            maxHeight: \"80%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}\r\n        >\r\n          {currentTab === 0 && (\r\n            <HistogramComponent \r\n              histogram={histogramValues[currentChannel]} \r\n              channel={currentChannel}\r\n            />\r\n          )}\r\n          {currentTab === 1 && (\r\n            <HistogramComponent \r\n              histogram={counts[currentChannel]}\r\n              channel={currentChannel}\r\n            />\r\n          )}\r\n          {currentTab === 2 && (\r\n            <div\r\n              className=\"scrollable\"\r\n              style={{\r\n                maxWidth: \"500px\"\r\n              }}\r\n            >\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Variable</TableCell>\r\n                    <TableCell align=\"right\">Value</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell>Count</TableCell>\r\n                    <TableCell align=\"right\">{histogramInfo[currentChannel].count}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Brightness</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {histogramInfo.brightness.toFixed(3)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Contrast</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {histogramInfo.contrast.toFixed(3)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Minimum value</TableCell>\r\n                    <TableCell align=\"right\">{histogramInfo[currentChannel].minValue}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Maximum value</TableCell>\r\n                    <TableCell align=\"right\">{histogramInfo[currentChannel].maxValue}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Mode</TableCell>\r\n                    <TableCell align=\"right\">{histogramInfo[currentChannel].mode.value}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Entropy</TableCell>\r\n                    <TableCell align=\"right\">{histogramInfo[currentChannel].entropy}</TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","/**\r\n * Class to represent image load errors\r\n */\r\nexport default class ImageLoadException extends Error {\r\n  /**\r\n   * Creates an instance of this class\r\n   *\r\n   * @param {string} errorImageSrc Source of the image that caused the error\r\n   */\r\n  constructor(errorImageSrc) {\r\n    super(`Error loading image with src = ${errorImageSrc}`);\r\n    this.name = \"ImageLoadException\";\r\n    this.src = errorImageSrc;\r\n  }\r\n}\r\n","import { ImageLoadException } from \"./Exceptions\";\r\n\r\n/**\r\n * Returns an promise that resolves with\r\n * an image when it is loaded from the given source\r\n *\r\n * @param {string} src Image source\r\n * @returns {Promise<Image>} Image element after the content has\r\n * been loaded\r\n */\r\nexport function load(src) {\r\n  const image = new Image();\r\n  image.src = src;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    image.onload = () => resolve(image);\r\n    image.onerror = () => reject(new ImageLoadException(src));\r\n  });\r\n}\r\n\r\n/**\r\n * Given a File, Blob object or any other object accepted by\r\n * `URL.createObjectURL`, returns the image loaded from the\r\n * object source\r\n *\r\n * @param {Object} obj Object to get the image source URL\r\n */\r\nexport function loadFromObject(obj) {\r\n  const src = URL.createObjectURL(obj);\r\n  return load(src).finally(() => URL.revokeObjectURL(src));\r\n}\r\n","import React from \"react\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { RgbaImageBuffer } from \"wiplib\";\r\nimport * as ImageHelper from \"../../lib/imageHelper\";\r\n\r\nclass LoadImageMenuItem extends React.Component {\r\n  /** Listener for a file input event to load the input image to the application */\r\n  onImageFileInputted = event => {\r\n    const { enqueueSnackbar, appStore } = this.props;\r\n    const files = event.target.files;\r\n\r\n    if (files.length !== 1 || !files[0]) {\r\n      enqueueSnackbar(\"Error reading image file\", {\r\n        variant: \"error\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    ImageHelper.loadFromObject(files[0])\r\n      .then(image => {\r\n        const canvas = document.createElement(\"canvas\");\r\n        const context = canvas.getContext(\"2d\");\r\n\r\n        canvas.width = image.naturalWidth;\r\n        canvas.height = image.naturalHeight;\r\n        context.drawImage(image, 0, 0);\r\n\r\n        const imgData = context.getImageData(0, 0, canvas.width, canvas.height);\r\n        const imageBuffer = RgbaImageBuffer.fromImageData(imgData);\r\n        appStore.addImage(imageBuffer);\r\n        this.refs.fileInputForm.reset();\r\n      })\r\n      .catch(() => {\r\n        enqueueSnackbar(\"Could not load image\", {\r\n          variant: \"error\"\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <label htmlFor=\"image-input\">\r\n          <MenuItem>Open</MenuItem>\r\n        </label>\r\n        <form ref=\"fileInputForm\">\r\n          <input\r\n            hidden\r\n            id=\"image-input\"\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            name=\"image-input\"\r\n            onChange={this.onImageFileInputted}\r\n          />\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(inject(\"appStore\")(observer(LoadImageMenuItem)));\r\n","import React from \"react\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nclass DownloadSelectedImageMenuItem extends React.Component {\r\n  /** Downloads the selected region of the current selected image if any */\r\n  downloadCurrentImage = () => {\r\n    const { enqueueSnackbar, appStore } = this.props;\r\n    const { type, index } = appStore.selectedGridItem;\r\n\r\n    if (type !== \"image\" || index < 0) {\r\n      enqueueSnackbar(\"You first need to select an image\", {\r\n        variant: \"warning\"\r\n      });\r\n    } else {\r\n      const imgInfo = appStore.imagesInfos[index];\r\n      const { left, top, width, height } = imgInfo.region;\r\n      const imageData = imgInfo.imageBuffer.toImageData();\r\n      const canvas = document.createElement(\"canvas\");\r\n      const context = canvas.getContext(\"2d\");\r\n\r\n      canvas.width = imageData.width;\r\n      canvas.height = imageData.height;\r\n      context.putImageData(imageData, 0, 0, left, top, width, height);\r\n\r\n      canvas.toBlob(\r\n        blob => {\r\n          const imgUrl = URL.createObjectURL(blob);\r\n          this.refs.downloadAnchor.href = imgUrl;\r\n          this.refs.downloadAnchor.click();\r\n          URL.revokeObjectURL(imgUrl);\r\n        },\r\n        null,\r\n        1\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <MenuItem onClick={this.downloadCurrentImage}>Download</MenuItem>\r\n        <div>\r\n          <a\r\n            ref=\"downloadAnchor\"\r\n            href=\"#download\"\r\n            id=\"download\"\r\n            hidden\r\n            download\r\n          >\r\n            This should not be visible. It is only used when downloading images\r\n          </a>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(\r\n  inject(\"appStore\")(observer(DownloadSelectedImageMenuItem))\r\n);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport LoadImageMenuItem from \"../../ImageProcessingUi/LoadImageMenuItem\";\r\nimport DownloadSelectedImageMenuItem from \"../../ImageProcessingUi/DownloadSelectedImageMenuItem\";\r\n\r\n/**\r\n * \"File\" Appbar Dropdown menu. Contains all the options that the user can\r\n * choose about files (upload, download, etc)\r\n */\r\nexport default class FileSubmenu extends React.Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleToggle = () => {\r\n    this.setState(state => ({ open: !state.open }));\r\n  };\r\n\r\n  handleClose = event => {\r\n    if (this.anchorEl.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Button\r\n          buttonRef={node => {\r\n            this.anchorEl = node;\r\n          }}\r\n          aria-owns={open ? \"menu-list-grow\" : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={this.handleToggle}\r\n          color=\"inherit\"\r\n        >\r\n          File\r\n        </Button>\r\n        <Popper\r\n          open={open}\r\n          style={this.state.open ? {} : { display: \"none\" }}\r\n          anchorEl={this.anchorEl}\r\n          transition\r\n          disablePortal\r\n        >\r\n          <Paper onClick={this.handleClose}>\r\n            <ClickAwayListener onClickAway={this.handleClose}>\r\n              <MenuList>\r\n                <LoadImageMenuItem />\r\n                <DownloadSelectedImageMenuItem />\r\n              </MenuList>\r\n            </ClickAwayListener>\r\n          </Paper>\r\n        </Popper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nclass ShowHistogramMenuItem extends React.Component {\r\n  onClick = () => {\r\n    const { appStore, enqueueSnackbar } = this.props;\r\n    const { type, index } = appStore.selectedGridItem;\r\n\r\n    if (type !== \"image\" || index < 0) {\r\n      enqueueSnackbar(\"You first need to select an image\", {\r\n        variant: \"warning\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.appStore.showHistogramOfCurrentImage();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <MenuItem onClick={this.onClick}>Histogram</MenuItem>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(\r\n  inject(\"appStore\")(observer(ShowHistogramMenuItem))\r\n);\r\n","import React from \"react\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { operations } from \"wiplib\";\r\n\r\nconst { crop } = operations;\r\n\r\nclass CropMenuItem extends React.Component {\r\n  cropCurrentImage = () => {\r\n    const { enqueueSnackbar, appStore } = this.props;\r\n    const { imageSelectionMehod } = appStore;\r\n    const { type, index } = appStore.selectedGridItem;\r\n\r\n    if (type !== \"image\" || index < 0) {\r\n      enqueueSnackbar(\"You first need to select an image\", {\r\n        variant: \"warning\"\r\n      });\r\n    } else if (imageSelectionMehod !== \"selection\") {\r\n      enqueueSnackbar(\r\n        \"You need to select a part of the image with the selection tool\",\r\n        {\r\n          variant: \"error\"\r\n        }\r\n      );\r\n    } else {\r\n      const { addImage, imagesInfos } = appStore;\r\n      addImage(crop(imagesInfos[index].imageBuffer, imagesInfos[index].region));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <MenuItem onClick={this.cropCurrentImage}>Crop</MenuItem>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(inject(\"appStore\")(observer(CropMenuItem)));\r\n","/**\r\n * Returns an array containing the points of the line which connects the given\r\n * points.\r\n *\r\n * @param {Object} firstPoint Origin point of the line\r\n * @param {Object} secondPoint End point of the line.\r\n * @returns {Array} Points of the line.\r\n */\r\nexport const bresenham = (\r\n  firstPoint,\r\n  secondPoint\r\n) => {\r\n  let points = [];\r\n\r\n  const EPS = 0.0001;\r\n  let x0 = firstPoint.x;\r\n  let x1 = secondPoint.x;\r\n  let y0 = firstPoint.y;\r\n  let y1 = secondPoint.y;\r\n  let dx = Math.abs(x1-x0);\r\n  let dy = Math.abs(y1-y0);\r\n  let sx = (x0 < x1) ? 1 : -1;\r\n  let sy = (y0 < y1) ? 1 : -1;\r\n  let err = dx-dy;\r\n\r\n  while(true){\r\n    points.push({x: x0, y: y0});\r\n\r\n    if (Math.abs(x0-x1) < EPS && Math.abs(y0-y1) < EPS) {\r\n      break;\r\n    }\r\n    let e2 = 2 * err;\r\n    if (e2 > -dy) { \r\n      err -= dy;\r\n      x0  += sx; \r\n    }\r\n    if (e2 <  dx) {\r\n      err += dx;\r\n      y0  += sy; \r\n    }\r\n  }\r\n\r\n  return points;\r\n};","import React from \"react\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { bresenham } from \"../../lib/Bresenham\";\r\n\r\nclass ProfileMenuItem extends React.Component {\r\n  getProfile = () => {\r\n    const { enqueueSnackbar, appStore } = this.props;\r\n    const { imageSelectionMehod } = appStore;\r\n    const { type, index } = appStore.selectedGridItem;\r\n\r\n    if (type !== \"image\" || index < 0) {\r\n      enqueueSnackbar(\"You first need to select an image\", {\r\n        variant: \"warning\"\r\n      });\r\n    } else if (imageSelectionMehod !== \"line\") {\r\n      enqueueSnackbar(\r\n        \"You need to select a line inside the image with the profile tool\",\r\n        {\r\n          variant: \"error\"\r\n        }\r\n      );\r\n    } else {\r\n      const { left, top, width, height } = appStore.imagesInfos[index].region;\r\n      const points = bresenham(\r\n        { x: left, y: top },\r\n        { x: left + width, y: top + height }\r\n      );\r\n      const associatedImage = appStore.imagesInfos[index].imageBuffer;\r\n      const profileValues = {\r\n        \"Red\": [],\r\n        \"Green\": [],\r\n        \"Blue\": [],\r\n        \"Gray\": []\r\n      };\r\n\r\n      points.forEach(point => {\r\n        let pixel = associatedImage.getPixel({ x: point.x, y: point.y });\r\n        profileValues[\"Red\"].push(pixel[0]);\r\n        profileValues[\"Green\"].push(pixel[1]);\r\n        profileValues[\"Blue\"].push(pixel[2]);\r\n        profileValues[\"Gray\"].push(Math.round(\r\n          pixel[0] * 0.222 + \r\n          pixel[1] * 0.707 + \r\n          pixel[2] * 0.071\r\n        ));\r\n      }); \r\n      \r\n      const firstDerivativeProfileValues = {\r\n        \"Red\": [],\r\n        \"Green\": [],\r\n        \"Blue\": [],\r\n        \"Gray\": []\r\n      };\r\n\r\n      for (let i = 1; i < profileValues[\"Red\"].length - 1; ++i)\r\n        Object.keys(profileValues).forEach( key => {\r\n          firstDerivativeProfileValues[key].push(\r\n            (profileValues[key][i + 1] - profileValues[key][i - 1]) / 2\r\n          );\r\n        });\r\n\r\n      appStore.addProfile(profileValues, firstDerivativeProfileValues);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <MenuItem onClick={this.getProfile}>Profile</MenuItem>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(inject(\"appStore\")(observer(ProfileMenuItem)));\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport ShowHistogramMenuItem from \"../../ImageProcessingUi/ShowHistogramMenuItem\";\r\nimport CropMenuItem from \"../../ImageProcessingUi/CropMenuItem\";\r\nimport ProfileMenuItem from \"../../ImageProcessingUi/ProfileMenuItem\";\r\n\r\n/**\r\n * \"Image\" Appbar Dropdown menu. Contains all the general options that the user\r\n * can choose about an image (see histogram, crop, etc)\r\n */\r\nexport default class ImageSubmenu extends React.Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleToggle = () => {\r\n    this.setState(state => ({ open: !state.open }));\r\n  };\r\n\r\n  handleClose = event => {\r\n    if (this.anchorEl.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Button\r\n          buttonRef={node => {\r\n            this.anchorEl = node;\r\n          }}\r\n          aria-owns={open ? \"menu-list-grow\" : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={this.handleToggle}\r\n          color=\"inherit\"\r\n        >\r\n          Image\r\n        </Button>\r\n        <Popper\r\n          open={open}\r\n          style={this.state.open ? {} : { display: \"none\" }}\r\n          anchorEl={this.anchorEl}\r\n          transition\r\n          disablePortal\r\n        >\r\n          <Paper onClick={this.handleClose}>\r\n            <ClickAwayListener onClickAway={this.handleClose}>\r\n              <MenuList>\r\n                <ShowHistogramMenuItem />\r\n                <CropMenuItem />\r\n                <ProfileMenuItem />\r\n              </MenuList>\r\n            </ClickAwayListener>\r\n          </Paper>\r\n        </Popper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\n/**\r\n * Coordinate input component to ask the user for the coordinates of a point\r\n */\r\nexport default class InputCoordinate extends React.Component {\r\n  static propTypes = {\r\n    /** Current value of the coordinate */\r\n    coordinate: PropTypes.object.isRequired,\r\n    /** Listener for coordinate changes */\r\n    onChange: PropTypes.func.isRequired,\r\n    /** Listener for coordinate delete */\r\n    onDelete: PropTypes.func.isRequired\r\n  };\r\n\r\n  onYChange = e => {\r\n    const number = Number.parseFloat(e.target.value);\r\n    this.props.onChange({\r\n      ...this.props.coordinate,\r\n      y: Number.isFinite(number) ? number : \"\"\r\n    });\r\n  };\r\n\r\n  onXChange = e => {\r\n    const number = Number.parseFloat(e.target.value);\r\n    this.props.onChange({\r\n      ...this.props.coordinate,\r\n      x: Number.isFinite(number) ? number : \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          width: \"100%\"\r\n        }}\r\n      >\r\n        <TextField\r\n          type=\"number\"\r\n          placeholder=\"0\"\r\n          value={this.props.coordinate.x}\r\n          onChange={this.onXChange}\r\n          margin=\"dense\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">x: </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n        <TextField\r\n          type=\"number\"\r\n          placeholder=\"0\"\r\n          value={this.props.coordinate.y}\r\n          onChange={this.onYChange}\r\n          margin=\"dense\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">y: </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n        <IconButton aria-label=\"Delete\" onClick={this.props.onDelete}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  HorizontalGridLines,\r\n  LineSeries\r\n} from \"react-vis\";\r\nimport InputCoordinate from \"./InputCoordinate\";\r\nimport { operations } from \"wiplib\";\r\n\r\nconst { linearTransformation } = operations;\r\n\r\nconst styles = {\r\n  center: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: \"1rem\",\r\n    marginBottom: \"1rem\"\r\n  }\r\n};\r\n\r\n/**\r\n * Dialog to ask the user for the linear sections for a linear transformation\r\n */\r\nclass LinearTransformationDialog extends React.Component {\r\n  static propTypes = {\r\n    isOpen: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    /** List of coordinates */\r\n    coords: [{ x: 0, y: 0 }, { x: 255, y: 255 }]\r\n  };\r\n\r\n  /** Returns a listener for when the user changes some coordinate */\r\n  onDataChange = index => newCoords => {\r\n    this.setState(prevState => ({\r\n      coords: prevState.coords.map((coord, i) =>\r\n        i === index ? newCoords : coord\r\n      )\r\n    }));\r\n  };\r\n\r\n  /** Returns a listener for when the user deletes some coordinate */\r\n  onDataDelete = index => () => {\r\n    this.setState(prevState => ({\r\n      coords: prevState.coords.filter((_, i) => i !== index)\r\n    }));\r\n  };\r\n\r\n  /** Listener for when the user wants to add a new coordinate */\r\n  addNewCoordinate = () => {\r\n    const newCoord =\r\n      this.state.coords.length < 1\r\n        ? { x: 0, y: 0 }\r\n        : this.state.coords.slice(-1)[0];\r\n\r\n    this.setState(prevState => ({ coords: [...prevState.coords, newCoord] }));\r\n  };\r\n\r\n  onSubmit = () => {\r\n    const { appStore, onClose } = this.props;\r\n    const { index } = appStore.selectedGridItem;\r\n\r\n    appStore.addImage(\r\n      linearTransformation(\r\n        appStore.imagesInfos[index].imageBuffer,\r\n        this.state.coords\r\n      )\r\n    );\r\n\r\n    onClose();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        open={this.props.isOpen}\r\n        onClose={this.props.onClose}\r\n        scroll=\"body\"\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Linear Sections</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please, enter the points to define the begin and end of each linear\r\n            section\r\n          </DialogContentText>\r\n          <div style={styles.center}>\r\n            <XYPlot width={300} height={300}>\r\n              <HorizontalGridLines />\r\n              <LineSeries\r\n                data={this.state.coords}\r\n                xDomain={[0, 255]}\r\n                yDomain={[0, 255]}\r\n              />\r\n              <XAxis />\r\n              <YAxis />\r\n            </XYPlot>\r\n          </div>\r\n          <div style={styles.center}>\r\n            <Button\r\n              onClick={this.addNewCoordinate}\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Add new coordinate\r\n            </Button>\r\n          </div>\r\n\r\n          <div>\r\n            {this.state.coords.map((coord, i) => (\r\n              <InputCoordinate\r\n                key={i}\r\n                coordinate={coord}\r\n                onChange={this.onDataChange(i)}\r\n                onDelete={this.onDataDelete(i)}\r\n              />\r\n            ))}\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.props.onClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={this.onSubmit} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(\r\n  inject(\"appStore\")(observer(LinearTransformationDialog))\r\n);\r\n","import React from \"react\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport LinearTransformationDialog from \"./LinearTransformationDialog\";\r\n\r\nclass LinearTransformationMenuItem extends React.Component {\r\n  state = {\r\n    isDialogOpen: false\r\n  };\r\n\r\n  openDialog = () => {\r\n    const { appStore, enqueueSnackbar } = this.props;\r\n    const { type, index } = appStore.selectedGridItem;\r\n\r\n    if (type !== \"image\" || index < 0) {\r\n      enqueueSnackbar(\"You first need to select an image\", {\r\n        variant: \"warning\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({ isDialogOpen: true });\r\n  };\r\n  closeDialog = () => this.setState({ isDialogOpen: false });\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <MenuItem onClick={this.openDialog}>Linear Transformation</MenuItem>\r\n        <LinearTransformationDialog\r\n          isOpen={this.state.isDialogOpen}\r\n          onClose={this.closeDialog}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(\r\n  inject(\"appStore\")(observer(LinearTransformationMenuItem))\r\n);\r\n","/**\r\n * Returns whether the given value is in range [min, max).\r\n * That is min <= value < max;\r\n *\r\n * @param {number} value  Value to check if it is in range\r\n * @param {number} min  Range minimum (inclusive)\r\n * @param {number} max  Range maximum (exclusive)\r\n */\r\nexport const isInRange = (value, min, max) => value >= min && value < max;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { isInRange } from \"../../../lib/Checks\";\r\nimport { operations } from \"wiplib\";\r\n\r\nconst { brightnessAndContrastAdjustment } = operations;\r\n\r\nconst styles = {\r\n  inputsContainer: {\r\n    flexWrap: \"wrap\",\r\n    margin: \"1rem\"\r\n  },\r\n  input: {\r\n    margin: \"1rem\"\r\n  }\r\n};\r\n\r\n/**\r\n * Dialog to prompt the user for the new brightness and contrast for the new\r\n * image on the adjust brightness and contrast operation\r\n */\r\nclass BrightnessAndContrastDialog extends React.Component {\r\n  static propTypes = {\r\n    isOpen: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    brightness: 0,\r\n    brightnessErrorMessage: \"\",\r\n    contrast: 0,\r\n    contrastErrorMessage: \"\",\r\n    formChanged: false\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    const { histogramInfos, selectedGridItem } = props.appStore;\r\n    let oldBrightness = state.brightness;\r\n    let oldContrast = state.contrast;\r\n\r\n    if (selectedGridItem.index >= 0) {\r\n      const { histogramInfo } = histogramInfos[\r\n        selectedGridItem.index\r\n      ].histogram;\r\n\r\n      oldBrightness = histogramInfo.brightness;\r\n      oldContrast = histogramInfo.contrast;\r\n    }\r\n\r\n    if (!state.formChanged) {\r\n      return {\r\n        brightness: +oldBrightness.toFixed(2),\r\n        contrast: +oldContrast.toFixed(2)\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /** General listener for a change on the brightness or contrast input */\r\n  onChange = (\r\n    e,\r\n    valueStateName,\r\n    errorMessageStateName,\r\n    minPossibleValue,\r\n    maxPossibleValue\r\n  ) => {\r\n    const value = Number.parseFloat(e.target.value);\r\n\r\n    if (!isInRange(value, minPossibleValue, maxPossibleValue + 1)) {\r\n      this.setState({\r\n        [valueStateName]: e.target.value,\r\n        [errorMessageStateName]: `Required a number between ${minPossibleValue} and ${maxPossibleValue}`,\r\n        formChanged: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        [valueStateName]: value,\r\n        [errorMessageStateName]: \"\",\r\n        formChanged: true\r\n      });\r\n    }\r\n  };\r\n\r\n  /** Listener for when the user changes the brightness input value */\r\n  onBrightnessChange = e =>\r\n    this.onChange(e, \"brightness\", \"brightnessErrorMessage\", 0, 255);\r\n\r\n  /** Listener for when the user changes the contrast input value */\r\n  onContrastChange = e =>\r\n    this.onChange(e, \"contrast\", \"contrastErrorMessage\", 0, 128);\r\n\r\n  onSubmit = () => {\r\n    const { brightness, contrast } = this.state;\r\n    const { appStore } = this.props;\r\n    const { index } = appStore.selectedGridItem;\r\n\r\n    appStore.addImage(\r\n      brightnessAndContrastAdjustment(\r\n        appStore.imagesInfos[index].imageBuffer,\r\n        appStore.histogramInfos[index].histogram.histogramInfo.brightness,\r\n        appStore.histogramInfos[index].histogram.histogramInfo.contrast,\r\n        brightness,\r\n        contrast\r\n      )\r\n    );\r\n\r\n    this.onClose();\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      formChanged: false\r\n    });\r\n    this.props.onClose();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        open={this.props.isOpen}\r\n        onClose={this.props.onClose}\r\n        scroll=\"body\"\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Brightness and Contrast Adjustment\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please, enter the brightness and contrast for the new image\r\n          </DialogContentText>\r\n          <div className=\"center\" style={styles.inputsContainer}>\r\n            <TextField\r\n              error={!!this.state.brightnessErrorMessage}\r\n              label={this.state.brightnessErrorMessage}\r\n              type=\"number\"\r\n              placeholder={String(this.state.brightness)}\r\n              value={this.state.brightness}\r\n              onChange={this.onBrightnessChange}\r\n              margin=\"dense\"\r\n              style={styles.input}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">Brightness: </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n            <TextField\r\n              error={!!this.state.contrastErrorMessage}\r\n              label={this.state.contrastErrorMessage}\r\n              type=\"number\"\r\n              placeholder={String(this.state.contrast)}\r\n              value={this.state.contrast}\r\n              onChange={this.onContrastChange}\r\n              margin=\"dense\"\r\n              style={styles.input}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">Contrast: </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.onClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={this.onSubmit} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject(\"appStore\")(observer(BrightnessAndContrastDialog));\r\n","import React from \"react\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport BrightnessAndContrastDialog from \"./BrightnessAndContrastDialog\";\r\n\r\nclass BrightnessAndContrastMenuItem extends React.Component {\r\n  state = {\r\n    isDialogOpen: false\r\n  };\r\n\r\n  openDialog = () => {\r\n    const { appStore, enqueueSnackbar } = this.props;\r\n    const { type, index } = appStore.selectedGridItem;\r\n\r\n    if (type !== \"image\" || index < 0) {\r\n      enqueueSnackbar(\"You first need to select an image\", {\r\n        variant: \"warning\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({ isDialogOpen: true });\r\n  };\r\n\r\n  closeDialog = () => this.setState({ isDialogOpen: false });\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <MenuItem onClick={this.openDialog}>Brightness And Contrast</MenuItem>\r\n        <BrightnessAndContrastDialog\r\n          isOpen={this.state.isDialogOpen}\r\n          onClose={this.closeDialog}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(\r\n  inject(\"appStore\")(observer(BrightnessAndContrastMenuItem))\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { isInRange } from \"../../../lib/Checks\";\r\nimport { operations } from \"wiplib\";\r\n\r\nconst { gammaCorrection } = operations;\r\n\r\nconst styles = {\r\n  inputsContainer: {\r\n    flexWrap: \"wrap\",\r\n    margin: \"1rem\"\r\n  },\r\n  input: {\r\n    margin: \"1rem\"\r\n  }\r\n};\r\n\r\n/**\r\n * Dialog to prompt the user for the gamma value for the new\r\n * image on the gamma correction operation\r\n */\r\nclass GammaCorrectionDialog extends React.Component {\r\n  static propTypes = {\r\n    isOpen: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    gamma: 0,\r\n    gammaErrorMessage: \"\"\r\n  };\r\n\r\n  /** General listener for a change on the gamma input */\r\n  onChange = (e, valueStateName, errorMessageStateName, errorMessage) => {\r\n    const value = Number.parseFloat(e.target.value);\r\n\r\n    if (!isInRange(value, 0, Number.POSITIVE_INFINITY)) {\r\n      this.setState({\r\n        [valueStateName]: e.target.value,\r\n        [errorMessageStateName]: errorMessage\r\n      });\r\n    } else {\r\n      this.setState({\r\n        [valueStateName]: value,\r\n        [errorMessageStateName]: \"\"\r\n      });\r\n    }\r\n  };\r\n\r\n  /** Listener for when the user changes the gamma input value */\r\n  onGammaChange = e =>\r\n    this.onChange(\r\n      e,\r\n      \"gamma\",\r\n      \"gammaErrorMessage\",\r\n      \"Required a value equal or greater than 0\"\r\n    );\r\n\r\n  onSubmit = () => {\r\n    const { appStore } = this.props;\r\n    const { index } = appStore.selectedGridItem;\r\n\r\n    appStore.addImage(\r\n      gammaCorrection(appStore.imagesInfos[index].imageBuffer, this.state.gamma)\r\n    );\r\n\r\n    this.props.onClose();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        open={this.props.isOpen}\r\n        onClose={this.props.onClose}\r\n        scroll=\"body\"\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Gamma correction</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please, enter the gamma value for the new image\r\n          </DialogContentText>\r\n          <div className=\"center\" style={styles.inputsContainer}>\r\n            <TextField\r\n              error={!!this.state.gammaErrorMessage}\r\n              label={this.state.gammaErrorMessage}\r\n              type=\"number\"\r\n              placeholder=\"0\"\r\n              value={this.state.gamma}\r\n              onChange={this.onGammaChange}\r\n              margin=\"dense\"\r\n              style={styles.input}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">Gamma: </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.props.onClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={this.onSubmit} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(\r\n  inject(\"appStore\")(observer(GammaCorrectionDialog))\r\n);\r\n","import React from \"react\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport GammaCorrectionDialog from \"./GammaCorrectionDialog\";\r\n\r\nclass GammaCorrectionMenuItem extends React.Component {\r\n  state = {\r\n    isDialogOpen: false\r\n  };\r\n\r\n  openDialog = () => {\r\n    const { appStore, enqueueSnackbar } = this.props;\r\n    const { type, index } = appStore.selectedGridItem;\r\n\r\n    if (type !== \"image\" || index < 0) {\r\n      enqueueSnackbar(\"You first need to select an image\", {\r\n        variant: \"warning\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({ isDialogOpen: true });\r\n  };\r\n\r\n  closeDialog = () => this.setState({ isDialogOpen: false });\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <MenuItem onClick={this.openDialog}>Gamma Correction</MenuItem>\r\n        <GammaCorrectionDialog\r\n          isOpen={this.state.isDialogOpen}\r\n          onClose={this.closeDialog}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(\r\n  inject(\"appStore\")(observer(GammaCorrectionMenuItem))\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n});\r\n\r\nclass FilesListMenu extends React.Component {\r\n  state = {\r\n    anchorEl: null,\r\n    selectedIndex: this.props.selectedItemIndex,\r\n  };\r\n\r\n  handleClickListItem = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleMenuItemClick = (event, index, selectedItemName) => {\r\n    this.setState({ selectedIndex: index, anchorEl: null });\r\n    event[\"selectedItemName\"] = selectedItemName;\r\n    event[\"selectedItemIndex\"] = index;\r\n    this.props.onItemSelection(event);\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { anchorEl } = this.state;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <List component=\"nav\">\r\n          <ListItem\r\n            disabled={this.props.isDisabled}\r\n            button\r\n            aria-haspopup=\"true\"\r\n            aria-label={this.props.menuTitle}\r\n            onClick={this.handleClickListItem}\r\n          >\r\n            <ListItemText\r\n              primary={this.props.menuTitle}\r\n              secondary={\r\n                (this.props.options.length > 0) ?\r\n                this.props.options[this.state.selectedIndex] :\r\n                \"None\"\r\n              }\r\n            />\r\n          </ListItem>\r\n        </List>\r\n        { (this.props.options.length > 0) ?\r\n          <Menu\r\n            anchorEl={anchorEl}\r\n            open={Boolean(anchorEl)}\r\n            onClose={this.handleClose}\r\n          >\r\n            {this.props.options.map((option, index) => (\r\n              <MenuItem\r\n                key={option}\r\n                selected={index === this.state.selectedIndex}\r\n                onClick={event => this.handleMenuItemClick(event, index, option)}\r\n              >\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </Menu> :\r\n          null\r\n        }\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFilesListMenu.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(FilesListMenu);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport FilesListMenu from \"../../Toolbar/FilesListMenu\";\r\nimport { operations } from \"wiplib\";\r\n\r\nconst { imagesDifference } = operations;\r\n\r\n/**\r\n * Dialog to prompt the user for the image name of the image to do the\r\n * difference operation\r\n */\r\nclass ImageDifferenceDialog extends React.Component {\r\n  static propTypes = {\r\n    isOpen: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    imgName: \"\"\r\n  };\r\n\r\n  onChange = e =>\r\n    this.setState({\r\n      imgName: e.selectedItemName\r\n    });\r\n\r\n  onSubmit = () => {\r\n    const otherImgName = this.state.imgName;\r\n    const { appStore, enqueueSnackbar } = this.props;\r\n    const { index } = appStore.selectedGridItem;\r\n    const otherImageInfo = appStore.imagesInfos.find(\r\n      ({ key }) => key === otherImgName\r\n    );\r\n    const imageBuffer = otherImageInfo && otherImageInfo.imageBuffer;\r\n\r\n    if (imageBuffer === undefined) {\r\n      enqueueSnackbar(\r\n        `Couldn't find an image with the selected name (${otherImgName})`,\r\n        {\r\n          variant: \"error\"\r\n        }\r\n      );\r\n    } else {\r\n      appStore.addImage(\r\n        imagesDifference(appStore.imagesInfos[index].imageBuffer, imageBuffer)\r\n      );\r\n    }\r\n\r\n    this.props.onClose();\r\n  };\r\n\r\n  render() {\r\n    const activeImagesNames = this.props.appStore.imagesInfos.map(\r\n      img => img.key\r\n    );\r\n\r\n    return (\r\n      <Dialog\r\n        open={this.props.isOpen}\r\n        onClose={this.props.onClose}\r\n        scroll=\"body\"\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Image Difference</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please, select the image to perform the difference to the current\r\n            image\r\n          </DialogContentText>\r\n          <div className=\"center\">\r\n            <FilesListMenu\r\n              menuTitle=\"Selected image\"\r\n              options={activeImagesNames}\r\n              onItemSelection={this.onChange}\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.props.onClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={this.onSubmit} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(\r\n  inject(\"appStore\")(observer(ImageDifferenceDialog))\r\n);\r\n","import React from \"react\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ImageDifferenceDialog from \"./ImageDifferenceDialog\";\r\n\r\nclass ImageDifferenceMenuItem extends React.Component {\r\n  state = {\r\n    isDialogOpen: false\r\n  };\r\n\r\n  openDialog = () => {\r\n    const { appStore, enqueueSnackbar } = this.props;\r\n    const { type, index } = appStore.selectedGridItem;\r\n\r\n    if (type !== \"image\" || index < 0) {\r\n      enqueueSnackbar(\"You first need to select an image\", {\r\n        variant: \"warning\"\r\n      });\r\n    } else {\r\n      this.setState({ isDialogOpen: true });\r\n    }\r\n  };\r\n\r\n  closeDialog = () => this.setState({ isDialogOpen: false });\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <MenuItem onClick={this.openDialog}>Image Difference</MenuItem>\r\n        <ImageDifferenceDialog\r\n          isOpen={this.state.isDialogOpen}\r\n          onClose={this.closeDialog}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(\r\n  inject(\"appStore\")(observer(ImageDifferenceMenuItem))\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport FilesListMenu from \"../../Toolbar/FilesListMenu\";\r\nimport { operations } from \"wiplib\";\r\n\r\nconst { changesDetection } = operations;\r\n\r\n/**\r\n * Dialog to prompt the user for the image name of the image to do the\r\n * changes detection, color and threshold\r\n */\r\nclass ChangesDetectionDialog extends React.Component {\r\n  static propTypes = {\r\n    isOpen: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    imgName: \"\",\r\n    rgbaColor: { r: 255, g: 0, b: 0 },\r\n    threshold: \"\"\r\n  };\r\n\r\n  onImgNameChange = e =>\r\n    this.setState({\r\n      imgName: e.selectedItemName\r\n    });\r\n\r\n  onThresholdChange = e => {\r\n    const newValue = Number.parseFloat(e.target.value);\r\n\r\n    this.setState({\r\n      threshold: Number.isFinite(newValue) ? newValue : \"\"\r\n    });\r\n  };\r\n\r\n  handleChangeComplete = color => this.setState({ rgbaColor: color.rgb });\r\n\r\n  onSubmit = () => {\r\n    const { imgName, rgbaColor, threshold } = this.state;\r\n    this.applyChangesDetection({\r\n      imgName,\r\n      rgbaColor,\r\n      threshold: threshold === \"\" ? 0 : threshold\r\n    });\r\n    this.props.onClose();\r\n  };\r\n\r\n  applyChangesDetection = ({ imgName, rgbaColor, threshold }) => {\r\n    const { appStore, enqueueSnackbar } = this.props;\r\n    const { index } = appStore.selectedGridItem;\r\n    const otherImageInfo = appStore.imagesInfos.find(\r\n      ({ key }) => key === imgName\r\n    );\r\n    const imageBuffer = otherImageInfo && otherImageInfo.imageBuffer;\r\n\r\n    if (imageBuffer === undefined) {\r\n      enqueueSnackbar(\r\n        `Couldn't find an image with the selected name (${imgName})`,\r\n        {\r\n          variant: \"error\"\r\n        }\r\n      );\r\n    } else {\r\n      appStore.addImage(\r\n        changesDetection(\r\n          appStore.imagesInfos[index].imageBuffer,\r\n          imageBuffer,\r\n          threshold,\r\n          rgbaColor\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const activeImagesNames = this.props.appStore.imagesInfos.map(\r\n      img => img.key\r\n    );\r\n\r\n    return (\r\n      <Dialog\r\n        open={this.props.isOpen}\r\n        onClose={this.props.onClose}\r\n        scroll=\"body\"\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Changes Detection</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please, select the image to detect the changes between them. Also\r\n            enter the color which will be used to highlight the differences and\r\n            the difference threshold, value that will determine what is\r\n            considered a difference and what not\r\n          </DialogContentText>\r\n          <div className=\"center\" style={{ justifyContent: \"space-around\" }}>\r\n            <FilesListMenu\r\n              menuTitle=\"Selected image\"\r\n              options={activeImagesNames}\r\n              onItemSelection={this.onImgNameChange}\r\n            />\r\n            <TextField\r\n              placeholder=\"0\"\r\n              type=\"number\"\r\n              value={this.state.threshold}\r\n              onChange={this.onThresholdChange}\r\n              margin=\"dense\"\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">Threshold: </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"center\" style={{ marginTop: \"1rem\" }}>\r\n            <ChromePicker\r\n              color={this.state.rgbaColor}\r\n              onChangeComplete={this.handleChangeComplete}\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.props.onClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={this.onSubmit} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(\r\n  inject(\"appStore\")(observer(ChangesDetectionDialog))\r\n);\r\n","import React from \"react\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ChangesDetectionDialog from \"./ChangesDetectionDialog\";\r\n\r\nclass ChangesDetectionMenuItem extends React.Component {\r\n  state = {\r\n    isDialogOpen: false\r\n  };\r\n\r\n  openDialog = () => {\r\n    const { appStore, enqueueSnackbar } = this.props;\r\n    const { type, index } = appStore.selectedGridItem;\r\n\r\n    if (type !== \"image\" || index < 0) {\r\n      enqueueSnackbar(\"You first need to select an image\", {\r\n        variant: \"warning\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({ isDialogOpen: true });\r\n  };\r\n  closeDialog = () => this.setState({ isDialogOpen: false });\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <MenuItem onClick={this.openDialog}>Changes Detection</MenuItem>\r\n        <ChangesDetectionDialog\r\n          isOpen={this.state.isDialogOpen}\r\n          onClose={this.closeDialog}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(\r\n  inject(\"appStore\")(observer(ChangesDetectionMenuItem))\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport FilesListMenu from \"../../Toolbar/FilesListMenu\";\r\nimport { operations } from \"wiplib\";\r\n\r\nconst { histogramSpecification } = operations;\r\n\r\n/**\r\n * Dialog to prompt the user for the image name of the image to do the\r\n * histogram specification\r\n */\r\nclass HistogramSpecificationDialog extends React.Component {\r\n  static propTypes = {\r\n    isOpen: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    imgName: \"\"\r\n  };\r\n\r\n  onChange = e =>\r\n    this.setState({\r\n      imgName: e.selectedItemName\r\n    });\r\n\r\n  onSubmit = () => {\r\n    const otherImgName = this.state.imgName;\r\n    const { appStore, enqueueSnackbar } = this.props;\r\n    const { index } = appStore.selectedGridItem;\r\n    const otherImgIndex = appStore.imagesInfos.findIndex(\r\n      ({ key }) => key === otherImgName\r\n    );\r\n\r\n    if (otherImgIndex < 0 || otherImgIndex > appStore.imagesInfos.length) {\r\n      enqueueSnackbar(\r\n        `Couldn't find an image with the selected name (${otherImgName})`,\r\n        {\r\n          variant: \"error\"\r\n        }\r\n      );\r\n    } else {\r\n      appStore.addImage(\r\n        histogramSpecification(\r\n          appStore.imagesInfos[index].imageBuffer,\r\n          appStore.histogramInfos[index].cHistogram,\r\n          appStore.histogramInfos[otherImgIndex].cHistogram\r\n        )\r\n      );\r\n    }\r\n\r\n    this.props.onClose();\r\n  };\r\n\r\n  render() {\r\n    const activeImagesNames = this.props.appStore.imagesInfos.map(\r\n      img => img.key\r\n    );\r\n\r\n    return (\r\n      <Dialog\r\n        open={this.props.isOpen}\r\n        onClose={this.props.onClose}\r\n        scroll=\"body\"\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Histogram Specificacion\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please, select the image with the histogram to perform the histogram\r\n            specification to the current image\r\n          </DialogContentText>\r\n          <div className=\"center\">\r\n            <FilesListMenu\r\n              menuTitle=\"Selected image\"\r\n              options={activeImagesNames}\r\n              onItemSelection={this.onChange}\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.props.onClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={this.onSubmit} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(\r\n  inject(\"appStore\")(observer(HistogramSpecificationDialog))\r\n);\r\n","import React from \"react\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport HistogramSpecificationDialog from \"./HistogramSpecificationDialog\";\r\n\r\nclass HistogramSpecificationMenuItem extends React.Component {\r\n  state = {\r\n    isDialogOpen: false\r\n  };\r\n\r\n  openDialog = () => {\r\n    const { appStore, enqueueSnackbar } = this.props;\r\n    const { type, index } = appStore.selectedGridItem;\r\n\r\n    if (type !== \"image\" || index < 0) {\r\n      enqueueSnackbar(\"You first need to select an image\", {\r\n        variant: \"warning\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({ isDialogOpen: true });\r\n  };\r\n\r\n  closeDialog = () => this.setState({ isDialogOpen: false });\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <MenuItem onClick={this.openDialog}>Histogram Specification</MenuItem>\r\n        <HistogramSpecificationDialog\r\n          isOpen={this.state.isDialogOpen}\r\n          onClose={this.closeDialog}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(\r\n  inject(\"appStore\")(observer(HistogramSpecificationMenuItem))\r\n);\r\n","import React from \"react\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { operations } from \"wiplib\";\r\n\r\nconst { imageToGrayscale } = operations;\r\n\r\nclass GrayscaleMenuItem extends React.Component {\r\n  currentImageToGrayscale = () => {\r\n    const { enqueueSnackbar, appStore } = this.props;\r\n    const { type, index } = this.props.appStore.selectedGridItem;\r\n\r\n    if (type !== \"image\" || index < 0) {\r\n      enqueueSnackbar(\"You first need to select an image\", {\r\n        variant: \"warning\"\r\n      });\r\n    } else {\r\n      appStore.addImage(\r\n        imageToGrayscale(appStore.imagesInfos[index].imageBuffer)\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <MenuItem onClick={this.currentImageToGrayscale}>To Grayscale</MenuItem>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(inject(\"appStore\")(observer(GrayscaleMenuItem)));\r\n","import React from \"react\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { operations } from \"wiplib\";\r\n\r\nconst { histogramEqualization } = operations;\r\n\r\nclass HistogramEqualizationMenuItem extends React.Component {\r\n  currentImageHistogramEqualization = () => {\r\n    const { enqueueSnackbar, appStore } = this.props;\r\n    const { type, index } = appStore.selectedGridItem;\r\n\r\n    if (type !== \"image\" || index < 0) {\r\n      enqueueSnackbar(\"You first need to select an image\", {\r\n        variant: \"warning\"\r\n      });\r\n    } else {\r\n      appStore.addImage(\r\n        histogramEqualization(\r\n          appStore.imagesInfos[index].imageBuffer,\r\n          appStore.histogramInfos[index].cHistogram\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <MenuItem onClick={this.currentImageHistogramEqualization}>\r\n          Histogram Equalization\r\n        </MenuItem>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(\r\n  inject(\"appStore\")(observer(HistogramEqualizationMenuItem))\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { isInRange } from \"../../../lib/Checks\";\r\nimport { operations } from \"wiplib\";\r\n\r\nconst { quantization } = operations;\r\n\r\nconst styles = {\r\n  inputsContainer: {\r\n    flexWrap: \"wrap\",\r\n    margin: \"1rem\"\r\n  },\r\n  input: {\r\n    margin: \"1rem\"\r\n  }\r\n};\r\n\r\n/**\r\n * Dialog to prompt the user for the amount of levels for the\r\n * quantization operation.\r\n */\r\nclass QuantizationDialog extends React.Component {\r\n  static propTypes = {\r\n    isOpen: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    levels: 8,\r\n    errorMessage: \"\"\r\n  };\r\n\r\n  /** General listener for a change on the level input */\r\n  onChange = (\r\n    e,\r\n    valueStateName,\r\n    errorMessageStateName,\r\n    minPossibleValue,\r\n    maxPossibleValue\r\n  ) => {\r\n    const value = Number.parseFloat(e.target.value);\r\n\r\n    if (!isInRange(value, minPossibleValue, maxPossibleValue + 1)) {\r\n      this.setState({\r\n        [valueStateName]: e.target.value,\r\n        [errorMessageStateName]: `Required a number between ${minPossibleValue} and ${maxPossibleValue}`\r\n      });\r\n    } else {\r\n      this.setState({\r\n        [valueStateName]: value,\r\n        [errorMessageStateName]: \"\"\r\n      });\r\n    }\r\n  };\r\n\r\n  /** Listener for when the user changes the levels input value */\r\n  onLevelsChange = e => this.onChange(e, \"levels\", \"errorMessage\", 0, 8);\r\n\r\n  onSubmit = () => {\r\n    const { levels } = this.state;\r\n    const { appStore } = this.props;\r\n    const { index } = appStore.selectedGridItem;\r\n\r\n    appStore.addImage(\r\n      quantization(appStore.imagesInfos[index].imageBuffer, levels)\r\n    );\r\n    this.props.onClose();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        open={this.props.isOpen}\r\n        onClose={this.props.onClose}\r\n        scroll=\"body\"\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Image Resample</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please, enter the amount of levels for the quantization\r\n          </DialogContentText>\r\n          <div className=\"center\" style={styles.inputsContainer}>\r\n            <TextField\r\n              error={!!this.state.errorMessage}\r\n              label={this.state.errorMessage}\r\n              type=\"number\"\r\n              placeholder={String(this.state.levels)}\r\n              value={this.state.levels}\r\n              onChange={this.onLevelsChange}\r\n              margin=\"dense\"\r\n              style={styles.input}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">Levels: </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.props.onClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={this.onSubmit} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(inject(\"appStore\")(observer(QuantizationDialog)));\r\n","import React from \"react\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport QuantizationDialog from \"./QuantizationDialog\";\r\n\r\nclass QuantizationMenuItem extends React.Component {\r\n  state = {\r\n    isDialogOpen: false\r\n  };\r\n\r\n  openDialog = () => {\r\n    const { appStore, enqueueSnackbar } = this.props;\r\n    const { type, index } = appStore.selectedGridItem;\r\n    if (type !== \"image\" || index < 0) {\r\n      enqueueSnackbar(\"You first need to select an image\", {\r\n        variant: \"warning\"\r\n      });\r\n    } else {\r\n      this.setState({ isDialogOpen: true });\r\n    }\r\n  };\r\n\r\n  closeDialog = () => this.setState({ isDialogOpen: false });\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <MenuItem onClick={this.openDialog}>Quantization</MenuItem>\r\n        <QuantizationDialog\r\n          isOpen={this.state.isDialogOpen}\r\n          onClose={this.closeDialog}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(inject(\"appStore\")(observer(QuantizationMenuItem)));\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport LinearTransformationMenuItem from \"../../ImageProcessingUi/LinearTransformationMenuItem\";\r\nimport BrightnessAndContrastMenuItem from \"../../ImageProcessingUi/BrightnessAndContrastMenuItem\";\r\nimport GammaCorrectionMenuItem from \"../../ImageProcessingUi/GammaCorrectionMenuItem\";\r\nimport ImageDifferenceMenuItem from \"../../ImageProcessingUi/ImageDifferenceMenuItem\";\r\nimport ChangesDetectionMenuItem from \"../../ImageProcessingUi/ChangesDetectionMenuItem\";\r\nimport HistogramSpecificationMenuItem from \"../../ImageProcessingUi/HistogramSpecificationMenuItem\";\r\nimport GrayscaleMenuItem from \"../../ImageProcessingUi/GrayscaleMenuItem\";\r\nimport HistogramEqualizationMenuItem from \"../../ImageProcessingUi/HistogramEqualizationMenuItem\";\r\nimport QuantizationMenuItem from \"../../ImageProcessingUi/QuantizationMenuItem\";\r\n\r\n/**\r\n * \"Point Operations\" Appbar Dropdown menu. Contains all the point operations\r\n * options that the user can choose\r\n */\r\nexport default class PointOperationsSubmenu extends React.Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleToggle = () => {\r\n    this.setState(state => ({ open: !state.open }));\r\n  };\r\n\r\n  handleClose = event => {\r\n    if (this.anchorEl.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          buttonRef={node => {\r\n            this.anchorEl = node;\r\n          }}\r\n          aria-owns={this.state.open ? \"file-menu-list-grow\" : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={this.handleToggle}\r\n          color=\"inherit\"\r\n        >\r\n          Point Operations\r\n        </Button>\r\n        <Popper\r\n          open={this.state.open}\r\n          style={this.state.open ? {} : { display: \"none\" }}\r\n          anchorEl={this.anchorEl}\r\n          transition\r\n          disablePortal\r\n        >\r\n          <Paper onClick={this.handleClose}>\r\n            <ClickAwayListener onClickAway={this.handleClose}>\r\n              <MenuList>\r\n                <GrayscaleMenuItem />\r\n                <LinearTransformationMenuItem />\r\n                <BrightnessAndContrastMenuItem />\r\n                <GammaCorrectionMenuItem />\r\n                <ImageDifferenceMenuItem />\r\n                <ChangesDetectionMenuItem />\r\n                <HistogramSpecificationMenuItem />\r\n                <HistogramEqualizationMenuItem />\r\n                <QuantizationMenuItem />\r\n              </MenuList>\r\n            </ClickAwayListener>\r\n          </Paper>\r\n        </Popper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FilesListMenu from \"../../Toolbar/FilesListMenu\";\r\n\r\nconst styles = {\r\n  inputsContainer: {\r\n    flexWrap: \"wrap\"\r\n  },\r\n  input: {\r\n    margin: \"1rem\"\r\n  },\r\n  center: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: \"1rem\",\r\n    marginBottom: \"1rem\"\r\n  }\r\n};\r\n\r\n/**\r\n * Dialog to prompt the user for the degrees, interpolation method\r\n * and \"rotate and print\" flag for the rotation operation.\r\n */\r\nexport default class ImageRotationDialog extends React.Component {\r\n  static propTypes = {\r\n    isOpen: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    interpolationMethods: PropTypes.array.isRequired\r\n  };\r\n\r\n  state = {\r\n    degrees: 0,\r\n    degreesErrorMessage: \"\",\r\n    rotateAndPaint: false,\r\n    interpolationMethod: this.props.interpolationMethods[0],\r\n    selectedInterpolationMethodIndex: 0\r\n  };\r\n\r\n  /** Listener for when the user changes the degrees input value */\r\n  onDegreesChange = e => {\r\n    if (!Number.parseFloat(e.target.value)) {\r\n      this.setState({\r\n        degrees: e.target.value,\r\n        degreesErrorMessage: \"Enter an amount of degrees\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        degrees: Number.parseFloat(e.target.value),\r\n        degreesErrorMessage: \"\"\r\n      });\r\n    }\r\n  };\r\n\r\n  /** Listener for when the user changes the rotate and paint*/\r\n  onRotateAndPaintChange = e => {\r\n    this.setState({\r\n      rotateAndPaint: e.target.checked\r\n    });\r\n  };\r\n\r\n  /** Listener for when the user changes the interpolation method */\r\n  onInterpolationMethodChange = e =>\r\n    this.setState({\r\n      interpolationMethod: e.selectedItemName,\r\n      selectedInterpolationMethodIndex: e.selectedItemIndex\r\n    });\r\n\r\n  onSubmit = () => {\r\n    const { degrees, rotateAndPaint, interpolationMethod } = this.state;\r\n    this.props.onSubmit({\r\n      degrees,\r\n      rotateAndPaint,\r\n      interpolationMethod\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        open={this.props.isOpen}\r\n        onClose={this.props.onClose}\r\n        scroll=\"body\"\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Image rotation</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please, enter the rotation parameters\r\n          </DialogContentText>\r\n          <div className=\"center\" style={styles.inputsContainer}>\r\n            <div style={styles.center}>\r\n              <TextField\r\n                error={!!this.state.degreesErrorMessage}\r\n                label={this.state.degreesErrorMessage}\r\n                type=\"number\"\r\n                placeholder=\"0\"\r\n                value={this.state.degrees}\r\n                onChange={this.onDegreesChange}\r\n                margin=\"dense\"\r\n                style={styles.input}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">Degrees: </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n            </div>\r\n            <FilesListMenu\r\n              menuTitle=\"Interpolation method\"\r\n              options={this.props.interpolationMethods}\r\n              onItemSelection={this.onInterpolationMethodChange}\r\n              isDisabled={this.state.rotateAndPaint}\r\n              selectedItemIndex={this.state.selectedInterpolationMethodIndex}\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={this.state.rotateAndPaint}\r\n                  onChange={this.onRotateAndPaintChange}\r\n                  value=\"rotateAndPaint\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Rotate and paint\"\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.props.onClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={this.onSubmit} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ImageRotationDialog from \"./ImageRotationDialog\";\r\nimport { operations } from \"wiplib\";\r\n\r\nconst { interpolationMethods, imageRotation } = operations;\r\n\r\nclass ImageRotationMenuItem extends React.Component {\r\n  state = {\r\n    isDialogOpen: false\r\n  };\r\n\r\n  openDialog = () => {\r\n    const { appStore, enqueueSnackbar } = this.props;\r\n    const { type, index } = appStore.selectedGridItem;\r\n\r\n    if (type !== \"image\" || index < 0) {\r\n      enqueueSnackbar(\"You first need to select an image\", {\r\n        variant: \"warning\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({ isDialogOpen: true });\r\n  };\r\n\r\n  closeDialog = () => this.setState({ isDialogOpen: false });\r\n\r\n  rotateCurrentImage = ({ degrees, rotateAndPaint, interpolationMethod }) => {\r\n    const { appStore } = this.props;\r\n    const { index } = appStore.selectedGridItem;\r\n\r\n    appStore.addImage(\r\n      imageRotation(\r\n        appStore.imagesInfos[index].imageBuffer,\r\n        degrees,\r\n        interpolationMethods[interpolationMethod],\r\n        rotateAndPaint\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <MenuItem onClick={this.openDialog}>Rotation</MenuItem>\r\n        <ImageRotationDialog\r\n          isOpen={this.state.isDialogOpen}\r\n          onClose={this.closeDialog}\r\n          onSubmit={rotationInfo => {\r\n            this.closeDialog();\r\n            this.rotateCurrentImage(rotationInfo);\r\n          }}\r\n          interpolationMethods={Object.keys(interpolationMethods)}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(\r\n  inject(\"appStore\")(observer(ImageRotationMenuItem))\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FilesListMenu from \"../../Toolbar/FilesListMenu\";\r\n\r\nconst styles = {\r\n  inputsContainer: {\r\n    flexWrap: \"wrap\"\r\n  },\r\n  input: {\r\n    margin: \"1rem\"\r\n  },\r\n  center: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: \"0.4rem\",\r\n    marginBottom: \"0.4rem\"\r\n  }\r\n};\r\n\r\n/**\r\n * Dialog to prompt the user for the new dimensions and\r\n * interpolation method for the resizing operation.\r\n */\r\nexport default class ImageResizingDialog extends React.Component {\r\n  static propTypes = {\r\n    oldWidth: PropTypes.number.isRequired,\r\n    oldHeight: PropTypes.number.isRequired,\r\n    isOpen: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    interpolationMethods: PropTypes.array.isRequired\r\n  };\r\n\r\n  state = {\r\n    width: this.props.oldWidth,\r\n    widthPercentage: 100,\r\n    widthErrorMessage: \"\",\r\n    height: this.props.oldHeight,\r\n    heightPercentage: 100,\r\n    heightErrorMessage: \"\",\r\n    interpolationMethod: this.props.interpolationMethods[0],\r\n    selectedInterpolationMethodIndex: 0,\r\n    formChanged: false\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (\r\n      !state.formChanged &&\r\n      (props.oldHeight !== state.height || props.oldWidth !== state.width)\r\n    ) {\r\n      return {\r\n        height: props.oldHeight,\r\n        width: props.oldWidth,\r\n        widthPercentage: 100,\r\n        heightPercentage: 100,\r\n        widthErrorMessage:\r\n          props.oldWidth <= 0 ? \"Width must be greater than 0\" : \"\",\r\n        heightErrorMessage:\r\n          props.oldHeight <= 0 ? \"Height must be greater than 0\" : \"\"\r\n      };\r\n    }\r\n\r\n    if (props.oldHeight === 0 && props.oldWidth === 0) {\r\n      return {\r\n        widthErrorMessage: \"Select an image\",\r\n        heightErrorMessage: \"Select an image\",\r\n        width: 0,\r\n        widthPercentage: 0,\r\n        height: 0,\r\n        heightPercentage: 0\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /** General listener for when the user changes dimension inputs */\r\n  onDimensionsChange = (\r\n    e,\r\n    dimensionName,\r\n    dimensionStateName,\r\n    oldDimensionPropName,\r\n    percentageStateName,\r\n    errorMessageStateName,\r\n    isPercentage\r\n  ) => {\r\n    const value = Number.parseFloat(e.target.value);\r\n    let dimension;\r\n    let percentage;\r\n    if (!isPercentage) {\r\n      dimension = Math.round(value);\r\n      percentage = (dimension * 100) / this.props[oldDimensionPropName];\r\n    } else {\r\n      dimension = Math.floor((value / 100) * this.props[oldDimensionPropName]);\r\n      percentage = value;\r\n    }\r\n    if (dimension < 1 || Number.isNaN(value)) {\r\n      this.setState({\r\n        [dimensionStateName]: isPercentage ? \"\" : e.target.value,\r\n        [percentageStateName]: isPercentage ? e.target.value : \"\",\r\n        [errorMessageStateName]: dimensionName + \" must be greater than 0\",\r\n        formChanged: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        [dimensionStateName]: isPercentage ? dimension : value,\r\n        [percentageStateName]: isPercentage ? value : percentage,\r\n        [errorMessageStateName]: \"\",\r\n        formChanged: true\r\n      });\r\n    }\r\n  };\r\n\r\n  /** Listener for when the user changes width input */\r\n  onWidthChange = e =>\r\n    this.onDimensionsChange(\r\n      e,\r\n      \"Width\",\r\n      \"width\",\r\n      \"oldWidth\",\r\n      \"widthPercentage\",\r\n      \"widthErrorMessage\",\r\n      false\r\n    );\r\n\r\n  /** Listener for when the user changes height input */\r\n  onHeightChange = e =>\r\n    this.onDimensionsChange(\r\n      e,\r\n      \"Height\",\r\n      \"height\",\r\n      \"oldHeight\",\r\n      \"heightPercentage\",\r\n      \"heightErrorMessage\",\r\n      false\r\n    );\r\n\r\n  /** Listener for when the user changes width percentage input */\r\n  onWidthPercentageChange = e =>\r\n    this.onDimensionsChange(\r\n      e,\r\n      \"Width\",\r\n      \"width\",\r\n      \"oldWidth\",\r\n      \"widthPercentage\",\r\n      \"widthErrorMessage\",\r\n      true\r\n    );\r\n\r\n  /** Listener for when the user changes height percentage input */\r\n  onHeightPercentageChange = e =>\r\n    this.onDimensionsChange(\r\n      e,\r\n      \"Height\",\r\n      \"height\",\r\n      \"oldHeight\",\r\n      \"heightPercentage\",\r\n      \"heightErrorMessage\",\r\n      true\r\n    );\r\n\r\n  /** Listener for when the user changes the interpolation method */\r\n  onInterpolationMethodChange = e =>\r\n    this.setState({\r\n      interpolationMethod: e.selectedItemName,\r\n      selectedInterpolationMethodIndex: e.selectedItemIndex\r\n    });\r\n\r\n  onSubmit = () => {\r\n    //TODO: Check resizing parameters\r\n    this.setState({\r\n      formChanged: false\r\n    });\r\n    const {\r\n      widthPercentage,\r\n      heightPercentage,\r\n      interpolationMethod\r\n    } = this.state;\r\n    this.props.onSubmit({\r\n      widthPercentage,\r\n      heightPercentage,\r\n      interpolationMethod\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      formChanged: false\r\n    });\r\n    this.props.onClose();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        open={this.props.isOpen}\r\n        onClose={this.props.onClose}\r\n        scroll=\"body\"\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Image resizing</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please, enter the resizing parameters\r\n          </DialogContentText>\r\n          <div style={styles.center}>\r\n            <TextField\r\n              error={!!this.state.widthErrorMessage}\r\n              label={this.state.widthErrorMessage}\r\n              type=\"number\"\r\n              placeholder={String(this.props.oldWidth)}\r\n              value={this.state.width}\r\n              onChange={this.onWidthChange}\r\n              margin=\"dense\"\r\n              style={styles.input}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">Width: </InputAdornment>\r\n                ),\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">px </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n            <TextField\r\n              error={!!this.state.heightErrorMessage}\r\n              label={this.state.heightErrorMessage}\r\n              type=\"number\"\r\n              placeholder={String(this.props.oldHeight)}\r\n              value={this.state.height}\r\n              onChange={this.onHeightChange}\r\n              margin=\"dense\"\r\n              style={styles.input}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">Height: </InputAdornment>\r\n                ),\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">px </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"center\" style={styles.inputsContainer}>\r\n            <div style={styles.center}>\r\n              <TextField\r\n                error={!!this.state.widthErrorMessage}\r\n                label={this.state.widthErrorMessage}\r\n                type=\"number\"\r\n                placeholder=\"100\"\r\n                value={this.state.widthPercentage}\r\n                onChange={this.onWidthPercentageChange}\r\n                margin=\"dense\"\r\n                style={styles.input}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      Percentage:{\" \"}\r\n                    </InputAdornment>\r\n                  ),\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">% </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <TextField\r\n                error={!!this.state.heightErrorMessage}\r\n                label={this.state.heightErrorMessage}\r\n                type=\"number\"\r\n                placeholder=\"100\"\r\n                value={this.state.heightPercentage}\r\n                onChange={this.onHeightPercentageChange}\r\n                margin=\"dense\"\r\n                style={styles.input}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      Percentage:{\" \"}\r\n                    </InputAdornment>\r\n                  ),\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">% </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n            </div>\r\n            <FilesListMenu\r\n              menuTitle=\"Interpolation method\"\r\n              options={this.props.interpolationMethods}\r\n              onItemSelection={this.onInterpolationMethodChange}\r\n              selectedItemIndex={this.state.selectedInterpolationMethodIndex}\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.onClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={this.onSubmit} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ImageResizingDialog from \"./ImageResizingDialog\";\r\nimport { operations } from \"wiplib\";\r\n\r\nconst { interpolationMethods, imageResizing } = operations;\r\n\r\nclass ImageResizeMenuItem extends React.Component {\r\n  state = {\r\n    isDialogOpen: false\r\n  };\r\n\r\n  openDialog = () => {\r\n    const { appStore, enqueueSnackbar } = this.props;\r\n    const { type, index } = appStore.selectedGridItem;\r\n\r\n    if (type !== \"image\" || index < 0) {\r\n      enqueueSnackbar(\"You first need to select an image\", {\r\n        variant: \"warning\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({ isDialogOpen: true });\r\n  };\r\n\r\n  closeDialog = () => this.setState({ isDialogOpen: false });\r\n\r\n  resizeCurrentImage = ({\r\n    widthPercentage,\r\n    heightPercentage,\r\n    interpolationMethod\r\n  }) => {\r\n    const { appStore } = this.props;\r\n    const { index } = appStore.selectedGridItem;\r\n\r\n    appStore.addImage(\r\n      imageResizing(\r\n        appStore.imagesInfos[index].imageBuffer,\r\n        widthPercentage,\r\n        heightPercentage,\r\n        interpolationMethods[interpolationMethod]\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { appStore } = this.props;\r\n    const { type, index } = appStore.selectedGridItem;\r\n    let selectedImageDimensions = { width: 0, height: 0 };\r\n\r\n    if (type === \"image\" && index >= 0) {\r\n      const imgBuffer = appStore.imagesInfos[index].imageBuffer;\r\n\r\n      selectedImageDimensions = {\r\n        width: imgBuffer.width,\r\n        height: imgBuffer.height\r\n      };\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <MenuItem onClick={this.openDialog}>Resize</MenuItem>\r\n        <ImageResizingDialog\r\n          oldWidth={selectedImageDimensions.width}\r\n          oldHeight={selectedImageDimensions.height}\r\n          isOpen={this.state.isDialogOpen}\r\n          onClose={this.closeDialog}\r\n          onSubmit={resizeInfo => {\r\n            this.closeDialog();\r\n            this.resizeCurrentImage(resizeInfo);\r\n          }}\r\n          interpolationMethods={Object.keys(interpolationMethods)}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(inject(\"appStore\")(observer(ImageResizeMenuItem)));\r\n","import React from \"react\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { operations } from \"wiplib\";\r\n\r\nconst { mirror } = operations;\r\n\r\nclass VerticalMirrorMenuItem extends React.Component {\r\n  currentImageVerticalMirror = () => {\r\n    const { appStore, enqueueSnackbar } = this.props;\r\n    const { type, index } = appStore.selectedGridItem;\r\n\r\n    if (type !== \"image\" || index < 0) {\r\n      enqueueSnackbar(\"You first need to select an image\", {\r\n        variant: \"warning\"\r\n      });\r\n    } else {\r\n      appStore.addImage(\r\n        mirror.vertical(appStore.imagesInfos[index].imageBuffer)\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <MenuItem onClick={this.currentImageVerticalMirror}>\r\n          Vertical Mirror\r\n        </MenuItem>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(\r\n  inject(\"appStore\")(observer(VerticalMirrorMenuItem))\r\n);\r\n","import React from \"react\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { operations } from \"wiplib\";\r\n\r\nconst { mirror } = operations;\r\n\r\nclass HorizontalMirrorMenuItem extends React.Component {\r\n  currentImageHorizontalMirror = () => {\r\n    const { appStore, enqueueSnackbar } = this.props;\r\n    const { type, index } = appStore.selectedGridItem;\r\n\r\n    if (type !== \"image\" || index < 0) {\r\n      enqueueSnackbar(\"You first need to select an image\", {\r\n        variant: \"warning\"\r\n      });\r\n    } else {\r\n      appStore.addImage(\r\n        mirror.horizontal(appStore.imagesInfos[index].imageBuffer)\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <MenuItem onClick={this.currentImageHorizontalMirror}>\r\n          Horizontal Mirror\r\n        </MenuItem>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(\r\n  inject(\"appStore\")(observer(HorizontalMirrorMenuItem))\r\n);\r\n","import React from \"react\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { operations } from \"wiplib\";\r\n\r\nconst { imageTranspose } = operations;\r\n\r\nclass ImageTransposeMenuItem extends React.Component {\r\n  transposeImage = () => {\r\n    const { appStore, enqueueSnackbar } = this.props;\r\n    const { type, index } = appStore.selectedGridItem;\r\n\r\n    if (type !== \"image\" || index < 0) {\r\n      enqueueSnackbar(\"You first need to select an image\", {\r\n        variant: \"warning\"\r\n      });\r\n    } else {\r\n      appStore.addImage(\r\n        imageTranspose(appStore.imagesInfos[index].imageBuffer)\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <MenuItem onClick={this.transposeImage}>Image Transpose</MenuItem>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(\r\n  inject(\"appStore\")(observer(ImageTransposeMenuItem))\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { isInRange } from \"../../../lib/Checks\";\r\nimport { operations } from \"wiplib\";\r\n\r\nconst { imageResampling } = operations;\r\n\r\nconst styles = {\r\n  inputsContainer: {\r\n    flexWrap: \"wrap\",\r\n    margin: \"1rem\"\r\n  },\r\n  input: {\r\n    margin: \"1rem\"\r\n  }\r\n};\r\n\r\n/**\r\n * Dialog to prompt the user for the pixel block width and height\r\n * on the resample operation\r\n */\r\nclass ImageResampleDialog extends React.Component {\r\n  static propTypes = {\r\n    isOpen: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    blockWidth: 1,\r\n    blockWidthErrorMessage: \"\",\r\n    blockHeight: 1,\r\n    blockHeightErrorMessage: \"\"\r\n  };\r\n\r\n  /** General listener for a change on the block width or height inputs */\r\n  onChange = (\r\n    e,\r\n    valueStateName,\r\n    errorMessageStateName,\r\n    minPossibleValue,\r\n    maxPossibleValue\r\n  ) => {\r\n    const value = Number.parseFloat(e.target.value);\r\n\r\n    if (!isInRange(value, minPossibleValue, maxPossibleValue + 1)) {\r\n      this.setState({\r\n        [valueStateName]: e.target.value,\r\n        [errorMessageStateName]: `Required a number between ${minPossibleValue} and ${maxPossibleValue}`\r\n      });\r\n    } else {\r\n      this.setState({\r\n        [valueStateName]: value,\r\n        [errorMessageStateName]: \"\"\r\n      });\r\n    }\r\n  };\r\n\r\n  /** Listener for when the user changes the block width input value */\r\n  onBlockWidthChange = e => {\r\n    const { index } = this.props.appStore.selectedGridItem;\r\n    const { imageBuffer } = this.props.appStore.imagesInfos[index];\r\n    this.onChange(\r\n      e,\r\n      \"blockWidth\",\r\n      \"blockWidthErrorMessage\",\r\n      1,\r\n      imageBuffer.width\r\n    );\r\n  };\r\n\r\n  /** Listener for when the user changes the block height input value */\r\n  onBlockHeightChange = e => {\r\n    const { index } = this.props.appStore.selectedGridItem;\r\n    const { imageBuffer } = this.props.appStore.imagesInfos[index];\r\n    this.onChange(\r\n      e,\r\n      \"blockHeight\",\r\n      \"blockHeightErrorMessage\",\r\n      1,\r\n      imageBuffer.height\r\n    );\r\n  };\r\n\r\n  onSubmit = () => {\r\n    const { blockWidth, blockHeight } = this.state;\r\n    const { appStore } = this.props;\r\n    const { index } = appStore.selectedGridItem;\r\n\r\n    appStore.addImage(\r\n      imageResampling(\r\n        appStore.imagesInfos[index].imageBuffer,\r\n        blockWidth,\r\n        blockHeight\r\n      )\r\n    );\r\n    this.props.onClose();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        open={this.props.isOpen}\r\n        onClose={this.props.onClose}\r\n        scroll=\"body\"\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Image Resample</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please, enter the pixels block width and height\r\n          </DialogContentText>\r\n          <div className=\"center\" style={styles.inputsContainer}>\r\n            <TextField\r\n              error={!!this.state.blockWidthErrorMessage}\r\n              label={this.state.blockWidthErrorMessage}\r\n              type=\"number\"\r\n              placeholder={String(this.state.blockWidth)}\r\n              value={this.state.blockWidth}\r\n              onChange={this.onBlockWidthChange}\r\n              margin=\"dense\"\r\n              style={styles.input}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">Width: </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n            <TextField\r\n              error={!!this.state.blockHeightErrorMessage}\r\n              label={this.state.blockHeightErrorMessage}\r\n              type=\"number\"\r\n              placeholder={String(this.state.blockHeight)}\r\n              value={this.state.blockHeight}\r\n              onChange={this.onBlockHeightChange}\r\n              margin=\"dense\"\r\n              style={styles.input}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">Height: </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.props.onClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={this.onSubmit} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(inject(\"appStore\")(observer(ImageResampleDialog)));\r\n","import React from \"react\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ImageResampleDialog from \"./ImageResampleDialog\";\r\n\r\nclass ImageResampleMenuItem extends React.Component {\r\n  state = {\r\n    isDialogOpen: false\r\n  };\r\n\r\n  openDialog = () => {\r\n    const { appStore, enqueueSnackbar } = this.props;\r\n    const { type, index } = appStore.selectedGridItem;\r\n    if (type !== \"image\" || index < 0) {\r\n      enqueueSnackbar(\"You first need to select an image\", {\r\n        variant: \"warning\"\r\n      });\r\n    } else {\r\n      this.setState({ isDialogOpen: true });\r\n    }\r\n  };\r\n\r\n  closeDialog = () => this.setState({ isDialogOpen: false });\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <MenuItem onClick={this.openDialog}>Image Resample</MenuItem>\r\n        <ImageResampleDialog\r\n          isOpen={this.state.isDialogOpen}\r\n          onClose={this.closeDialog}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(\r\n  inject(\"appStore\")(observer(ImageResampleMenuItem))\r\n);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport ImageRotationMenuItem from \"../../ImageProcessingUi/ImageRotationMenuItem\";\r\nimport ImageResizeMenuItem from \"../../ImageProcessingUi/ImageResizeMenuItem\";\r\nimport VerticalMirrorMenuItem from \"../../ImageProcessingUi/VerticalMirrorMenuItem\";\r\nimport HorizontalMirrorMenuItem from \"../../ImageProcessingUi/HorizontalMirrorMenuItem\";\r\nimport ImageTransposeMenuItem from \"../../ImageProcessingUi/ImageTransposeMenuItem\";\r\nimport ImageResampleMenuItem from \"../../ImageProcessingUi/ImageResampleMenuItem\";\r\n\r\n/**\r\n * \"Geometric Operations\" Appbar Dropdown menu. Contains all the geometric operations\r\n * options that the user can choose\r\n */\r\nexport default class GeometricOperationsSubmenu extends React.Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleToggle = () => {\r\n    this.setState(state => ({ open: !state.open }));\r\n  };\r\n\r\n  handleClose = event => {\r\n    if (this.anchorEl.contains(event.target)) {\r\n      return;\r\n    }\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          buttonRef={node => {\r\n            this.anchorEl = node;\r\n          }}\r\n          aria-owns={this.state.open ? \"file-menu-list-grow\" : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={this.handleToggle}\r\n          color=\"inherit\"\r\n        >\r\n          Geometric Operations\r\n        </Button>\r\n        <Popper\r\n          open={this.state.open}\r\n          style={this.state.open ? {} : { display: \"none\" }}\r\n          anchorEl={this.anchorEl}\r\n          transition\r\n          disablePortal\r\n        >\r\n          <Paper onClick={this.handleClose}>\r\n            <ClickAwayListener onClickAway={this.handleClose}>\r\n              <MenuList>\r\n                <ImageRotationMenuItem />\r\n                <ImageResizeMenuItem />\r\n                <VerticalMirrorMenuItem />\r\n                <HorizontalMirrorMenuItem />\r\n                <ImageTransposeMenuItem />\r\n                <ImageResampleMenuItem />\r\n              </MenuList>\r\n            </ClickAwayListener>\r\n          </Paper>\r\n        </Popper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CropSquareIcon from \"@material-ui/icons/CropSquare\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nclass SelectionToolbar extends React.Component {\r\n  render() {\r\n    const {\r\n      imageSelectionMehod,\r\n      updateImageSelectionMehod\r\n    } = this.props.appStore;\r\n\r\n    return (\r\n      <Toolbar\r\n        style={{\r\n          backgroundColor: \"white\",\r\n          color: \"#3f51b5\",\r\n          display: \"flex\",\r\n          zIndex: \"-1\"\r\n        }}\r\n      >\r\n        <Button\r\n          style={\r\n            imageSelectionMehod !== \"selection\"\r\n              ? { margin: \"0 0.5rem\" }\r\n              : {\r\n                  margin: \"0 0.5rem\",\r\n                  backgroundColor: \"#3f51b5\",\r\n                  color: \"white\"\r\n                }\r\n          }\r\n          onClick={() => updateImageSelectionMehod(\"selection\")}\r\n        >\r\n          <CropSquareIcon style={{ marginRight: \"0.5rem\" }} />\r\n          Select\r\n        </Button>\r\n        <Button\r\n          style={\r\n            imageSelectionMehod !== \"line\"\r\n              ? { margin: \"0 0.5rem\" }\r\n              : {\r\n                  margin: \"0 0.5rem\",\r\n                  backgroundColor: \"#3f51b5\",\r\n                  color: \"white\"\r\n                }\r\n          }\r\n          onClick={() => updateImageSelectionMehod(\"line\")}\r\n        >\r\n          <EditIcon style={{ marginRight: \"0.5rem\" }} />\r\n          Line\r\n        </Button>\r\n      </Toolbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject(\"appStore\")(observer(SelectionToolbar));\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport FileSubmenu from \"./Submenus/FileSubmenu\";\r\nimport ImageSubmenu from \"./Submenus/ImageSubmenu\";\r\nimport PointOperationsSubmenu from \"./Submenus/PointOperationsSubmenu\";\r\nimport GeometricOperationsSubmenu from \"./Submenus/GeometricOperationsSubmenu\";\r\nimport SelectionToolbar from \"./SelectionToolbar\";\r\n\r\nconst AppToolbar = () => (\r\n  <AppBar position=\"static\">\r\n    <Toolbar>\r\n      <FileSubmenu />\r\n      <ImageSubmenu />\r\n      <PointOperationsSubmenu />\r\n      <GeometricOperationsSubmenu />\r\n    </Toolbar>\r\n    <SelectionToolbar />\r\n  </AppBar>\r\n);\r\n\r\nexport default AppToolbar;\r\n\r\n//                 <a className=\"navbar-item\" href=\"https://github.com/carlosdg/ImageProcessor.git\">\r\n//                     <img alt=\"logo\" src=\"https://i.imgur.com/DckFstm.png\" height=\"50\"/>\r\n//                 </a>\r\n","import React from \"react\";\r\nimport { calculateRect } from \"../../lib/coordinates\";\r\n\r\nconst SelectionOverlay = ({ originCoords, endCoords }) => {\r\n  const position = calculateRect(originCoords, endCoords);\r\n  return (\r\n    position.bottom - position.top > 0 && \r\n    position.right - position.left > 0 && \r\n      <div\r\n        className=\"region-select\"\r\n        style={{\r\n          width: `${position.right - position.left - 1}px`,\r\n          height: `${position.bottom - position.top - 1}px`,\r\n          top: position.top + \"px\",\r\n          left: position.left + \"px\",\r\n          right: position.right + \"px\",\r\n          bottom: position.bottom + \"px\",\r\n        }}\r\n      />\r\n  );\r\n};\r\n\r\nexport default SelectionOverlay;\r\n","import React from \"react\";\r\n\r\n/**\r\n * Line to show when the user is dragging the mouse over a canvas to\r\n * select a profile of the image\r\n */\r\nconst LineOverlay = ({ originCoords, endCoords }) => (\r\n  <svg\r\n    style={{\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0\r\n    }}\r\n    height=\"100%\"\r\n    width=\"100%\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <line\r\n      stroke=\"#000\"\r\n      strokeWidth=\"2\"\r\n      x1={originCoords.x}\r\n      y1={originCoords.y}\r\n      x2={endCoords.x}\r\n      y2={endCoords.y}\r\n    />\r\n  </svg>\r\n);\r\nexport default LineOverlay;\r\n","import React, { Component } from \"react\";\r\nimport \"react-vis/dist/style.css\";\r\nimport {\r\n  FlexibleXYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  VerticalGridLines,\r\n  HorizontalGridLines,\r\n  LineSeries,\r\n  Hint\r\n} from \"react-vis\";\r\n\r\nclass ProfileComponent extends Component {\r\n  state = {\r\n    emphasizedValue: null,\r\n    profileVisualizationData: [],\r\n    channel: this.props.channel\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (state.channel && props.channel !== state.channel) {\r\n      return {\r\n        emphasizedValue: null,\r\n        profileVisualizationData: props.profileValues.map(\r\n          (value, index) => ({x: index, y: value })\r\n        ),\r\n        channel: props.channel\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      profileVisualizationData: this.props.profileValues.map(\r\n        (value, index) => ({x: index, y: value })\r\n      )\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <FlexibleXYPlot\r\n        margin={{\r\n          top: 50,\r\n          left: 70\r\n        }}\r\n        onMouseLeave={() => this.setState({ emphasizedValue: null })}\r\n      >\r\n        <VerticalGridLines />\r\n        <HorizontalGridLines />\r\n        <XAxis />\r\n        <YAxis />\r\n        <LineSeries\r\n          onNearestX={value => this.setState({ emphasizedValue: value })}\r\n          data={this.state.profileVisualizationData}\r\n          color={this.state.channel}\r\n        />\r\n        {this.state.emphasizedValue ? (\r\n          <Hint\r\n            value={this.state.emphasizedValue}\r\n            align={{ horizontal: \"auto\", vertical: \"top\" }}\r\n            style={{ fontSize: 14 }}\r\n            format={dataPoint => {\r\n              return [\r\n                {\r\n                  title: \"Pixel: \" + dataPoint.x,\r\n                  value: \"Value: \" + dataPoint.y\r\n                }\r\n              ];\r\n            }}\r\n          />\r\n        ) : null}\r\n      </FlexibleXYPlot>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileComponent;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ProfileComponent from \"../ProfileComponent\";\r\n\r\n\r\nexport default class ProfilesComponent extends React.Component {\r\n  state = {\r\n    currentTab: 0,\r\n    currentChannel: Object.keys(this.props.info.profileValues)[0]\r\n  };\r\n\r\n  updateCurrentTab = (_, newTab) => this.setState({ currentTab: newTab });\r\n  updateCurrentChannel = (_, newChannel) => this.setState({ currentChannel: newChannel });\r\n\r\n  render() {\r\n    const { currentTab, currentChannel } = this.state;\r\n    const { profileValues, firstDerivativeProfileValues } = this.props.info;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\"\r\n          }}\r\n        >\r\n          <Button\r\n            style={\r\n              currentTab === 0\r\n                ? {\r\n                    boxShadow: \"0px 4px 6px -5px black\"\r\n                  }\r\n                : {}\r\n            }\r\n            onClick={e => this.updateCurrentTab(e, 0)}\r\n          >\r\n            Profile\r\n          </Button>\r\n          <Button\r\n            style={\r\n              currentTab === 1\r\n                ? {\r\n                    boxShadow: \"0px 4px 6px -5px black\"\r\n                  }\r\n                : {}\r\n            }\r\n            onClick={e => this.updateCurrentTab(e, 1)}\r\n          >\r\n            First Derivative\r\n          </Button>\r\n        </div>\r\n        <div\r\n          style={{\r\n            padding: \"10px 0px 0px 0px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\"\r\n          }}\r\n        >\r\n          {\r\n            Object.keys(profileValues).map( key => {\r\n              return (\r\n                <Button\r\n                  style={\r\n                    currentChannel === key\r\n                      ? {\r\n                          boxShadow: `0px 4px 6px -5px ${key}`\r\n                        }\r\n                      : {}\r\n                  }\r\n                  onClick={e => this.updateCurrentChannel(e, key)}\r\n                  key={key}\r\n                >\r\n                  {key}\r\n                </Button>\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            maxHeight: \"80%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}\r\n        >\r\n          {currentTab === 0 && (\r\n            <ProfileComponent\r\n                profileValues={profileValues[currentChannel]}\r\n                channel={currentChannel}\r\n            />\r\n          )}\r\n          {currentTab === 1 && (\r\n            <ProfileComponent\r\n                profileValues={firstDerivativeProfileValues[currentChannel]}\r\n                channel={currentChannel}\r\n            />\r\n          )}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport InteractiveGrid from \"../InteractiveGrid\";\r\nimport ImageComponent from \"../ImageComponent\";\r\nimport HistogramAndInfoComponent from \"../HistogramAndInfoComponent\";\r\nimport AppToolbar from \"../Toolbar\";\r\nimport \"./App.css\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport SelectionOverlay from \"../Overlays/SelectionOverlay\";\r\nimport LineOverlay from \"../Overlays/LineOverlay\";\r\nimport { calculateRect } from \"../../lib/coordinates\";\r\nimport ProfilesComponent from \"../ProfilesComponent\";\r\n\r\nclass App extends Component {\r\n  /** Callback that updates the pixel value and coordinates currently under the\r\n   * user's mouse */\r\n  onMouseMoveOverImage = (pixelCoords, pixelValue) => {\r\n    this.props.appStore.setCurrentPixel(pixelCoords, pixelValue);\r\n  };\r\n\r\n  /** Returns a callback that updates the region of the asked image info */\r\n  onImageRegionSelection = index => ({ originCoords, endCoords }) => {\r\n    const { top, left, right, bottom } = calculateRect(\r\n      originCoords,\r\n      endCoords\r\n    );\r\n\r\n    const newRegion = {\r\n      top,\r\n      left,\r\n      width: right - left,\r\n      height: bottom - top\r\n    };\r\n\r\n    if (newRegion.width !== 0 && newRegion.height !== 0) {\r\n      this.props.appStore.updateImageRegion(index, newRegion);\r\n    }\r\n  };\r\n\r\n  getImageOverlay = () => {\r\n    switch (this.props.appStore.imageSelectionMehod) {\r\n      case \"selection\":\r\n        return ({ originCoords, endCoords }) => (\r\n          <SelectionOverlay originCoords={originCoords} endCoords={endCoords} />\r\n        );\r\n      case \"line\":\r\n        return ({ originCoords, endCoords }) => (\r\n          <LineOverlay originCoords={originCoords} endCoords={endCoords} />\r\n        );\r\n      default:\r\n        throw new Error(\r\n          `Invalid option ${this.props.appStore.imageSelectionMehod}`\r\n        );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"app-container\">\r\n          <AppToolbar />\r\n          <main className=\"main\">\r\n            <div className=\"main__wrapper\">{this.getGridComponent()}</div>\r\n          </main>\r\n          <footer className=\"footer\">\r\n            {this.getDisplayForImageDimensions()}\r\n            {this.getDisplayForPixelUnderMouse()}\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Methods to keep the render method cleaner\r\n\r\n  getGridComponent() {\r\n    return (\r\n      <InteractiveGrid.Grid\r\n        layouts={this.props.appStore.gridLayouts}\r\n        onLayoutChange={this.props.appStore.updateLayout}\r\n      >\r\n        {this.props.appStore.imagesInfos.map((image, index) =>\r\n          this.getImageGridItem(image, index)\r\n        )}\r\n        {this.props.appStore.histogramInfos\r\n          .map((histogramInfo, index) =>\r\n            histogramInfo.visible\r\n              ? this.getHistogramGridItem(histogramInfo, index)\r\n              : null\r\n          )\r\n          .filter(element => element !== null)}\r\n        {this.props.appStore.profilesInfos.map((profile, index) =>\r\n          this.getProfileGridItem(profile, index)\r\n        )}\r\n      </InteractiveGrid.Grid>\r\n    );\r\n  }\r\n\r\n  getImageGridItem({ imageBuffer, key }, index) {\r\n    return (\r\n      <InteractiveGrid.Item\r\n        key={key}\r\n        id={index}\r\n        name={key}\r\n        onDelete={this.props.appStore.removeImageInfo}\r\n        onSelect={() => this.props.appStore.updateSelectedImageItem(index)}\r\n        isSelected={this.props.appStore.isGridItemSelected(\"image\", index)}\r\n      >\r\n        <div className=\"center\">\r\n          <div className=\"scrollable\">\r\n            <ImageComponent\r\n              rgbaImage={imageBuffer}\r\n              onMouseMove={this.onMouseMoveOverImage}\r\n              onSelection={this.onImageRegionSelection(index)}\r\n            >\r\n              {this.getImageOverlay()}\r\n            </ImageComponent>\r\n          </div>\r\n        </div>\r\n      </InteractiveGrid.Item>\r\n    );\r\n  }\r\n\r\n  getHistogramGridItem({ histogram, cHistogram, key }, index) {\r\n    return (\r\n      <InteractiveGrid.Item\r\n        key={key}\r\n        id={index}\r\n        name={key}\r\n        onDelete={this.props.appStore.hideHistogram}\r\n        onSelect={() => this.props.appStore.updateSelectedHistogramItem(index)}\r\n        isSelected={this.props.appStore.isGridItemSelected(\"histogram\", index)}\r\n      >\r\n        <HistogramAndInfoComponent\r\n          histogram={histogram}\r\n          cHistogram={cHistogram}\r\n        />\r\n      </InteractiveGrid.Item>\r\n    );\r\n  }\r\n\r\n  getProfileGridItem(profileInfo, index) {\r\n    return (\r\n      <InteractiveGrid.Item\r\n        key={profileInfo.key}\r\n        id={index}\r\n        name={profileInfo.key}\r\n        onDelete={this.props.appStore.removeProfile}\r\n        onSelect={() => this.props.appStore.updateSelectedProfileItem(index)}\r\n        isSelected={this.props.appStore.isGridItemSelected(\"line\", index)}\r\n      >\r\n        <ProfilesComponent info={profileInfo} />\r\n      </InteractiveGrid.Item>\r\n    );\r\n  }\r\n\r\n  getDisplayForImageDimensions() {\r\n    const {\r\n      pixelValue,\r\n      selectedGridItem,\r\n      imagesInfos,\r\n      imageSelectionMehod\r\n    } = this.props.appStore;\r\n    const { type, index } = selectedGridItem;\r\n\r\n    if (type !== \"image\" || !imagesInfos[index]) return;\r\n\r\n    const currentPixelRgbaValue = `rgba(${pixelValue.join(\", \")})`;\r\n    const sizeText =\r\n      imageSelectionMehod === \"selection\"\r\n        ? \"width: \" +\r\n          imagesInfos[index].region.width +\r\n          \", height: \" +\r\n          imagesInfos[index].region.height\r\n        : \"width: \" +\r\n          imagesInfos[index].imageBuffer.width +\r\n          \", height: \" +\r\n          imagesInfos[index].imageBuffer.height;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"inline-block\",\r\n          margin: \"0.5rem\",\r\n          padding: \"0.5rem\",\r\n          borderRadius: \"5px\",\r\n          border: `1px solid ${currentPixelRgbaValue}`,\r\n          boxShadow: `0 3px 10px -3px ${currentPixelRgbaValue}`\r\n        }}\r\n      >\r\n        {sizeText}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getDisplayForPixelUnderMouse() {\r\n    const { pixelValue, pixelCoords } = this.props.appStore;\r\n\r\n    const currentPixelRgbaValue = `rgba(${pixelValue.join(\", \")})`;\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"inline-block\",\r\n          margin: \"0.5rem\",\r\n          padding: \"0.5rem\",\r\n          borderRadius: \"5px\",\r\n          border: `1px solid ${currentPixelRgbaValue}`,\r\n          boxShadow: `0 3px 10px -3px ${currentPixelRgbaValue}`\r\n        }}\r\n      >\r\n        x: {pixelCoords.x}, y: {pixelCoords.y},\r\n        <span\r\n          style={{\r\n            display: \"inline-block\",\r\n            width: \"0.5rem\",\r\n            height: \"0.5rem\",\r\n            margin: \"0 0.5rem\",\r\n            backgroundColor: currentPixelRgbaValue,\r\n            border: \"1px solid black\",\r\n            borderRadius: \"2px\"\r\n          }}\r\n        />\r\n        {currentPixelRgbaValue}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(inject(\"appStore\")(observer(App)));\r\n","import GRID_PROPERTIES from \"./gridProperties\";\r\n\r\n/**\r\n * Returns an emoty object of layouts for different viewport sizes, as defined\r\n * in GRID_PROPERTIES.\r\n */\r\nconst createNewSetOfLayouts = () => {\r\n  const layouts = {};\r\n\r\n  Object.keys(GRID_PROPERTIES.GRID_COLUMNS).forEach(\r\n    layoutName => (layouts[layoutName] = [])\r\n  );\r\n\r\n  return layouts;\r\n};\r\n\r\n/**\r\n * Returns an object defining the default information for being part of a grid\r\n * layout\r\n */\r\nconst createNewElementLayoutInfo = id => ({\r\n  i: id,\r\n  x: 0,\r\n  y: Infinity,\r\n  w: GRID_PROPERTIES.DEFAULT_GRID_ITEM_COLS,\r\n  h: GRID_PROPERTIES.DEFAULT_GRID_ITEM_ROWS,\r\n  minW: GRID_PROPERTIES.DEFAULT_GRID_ITEM_COLS,\r\n  minH: GRID_PROPERTIES.DEFAULT_GRID_ITEM_ROWS\r\n});\r\n\r\n/**\r\n * Returns a new set set of layouts resulting from adding a default layout\r\n * information for the new elements with the given IDs\r\n *\r\n * @param {Object} currentLayouts Layouts object to where the new element\r\n * information is going to be added\r\n * @param {Array<String | number>} newElementsIds IDs of the elements to add to\r\n * the layout\r\n */\r\nconst addNewElementsToLayouts = (currentLayouts, newElementsIds) => {\r\n  const newElementsLayoutInfos = newElementsIds.map(createNewElementLayoutInfo);\r\n  const newLayouts = createNewSetOfLayouts();\r\n\r\n  Object.keys(currentLayouts).forEach(layoutName => {\r\n    newLayouts[layoutName] = currentLayouts[layoutName].concat(\r\n      newElementsLayoutInfos\r\n    );\r\n  });\r\n\r\n  return newLayouts;\r\n};\r\n\r\n/**\r\n * Returns a new set of layouts without the elements with the given IDs\r\n *\r\n * @param {Object} currentLayouts Layouts object\r\n * @param {Array<String | number>} ids IDs of the elements to remove\r\n */\r\nconst removeElementsFromLayout = (currentLayouts, ids) => {\r\n  const newLayouts = {};\r\n\r\n  Object.keys(currentLayouts).forEach(layoutName => {\r\n    newLayouts[layoutName] = currentLayouts[layoutName].filter(\r\n      ({ i }) => !ids.includes(i)\r\n    );\r\n  });\r\n\r\n  return newLayouts;\r\n};\r\n\r\nexport {\r\n  createNewSetOfLayouts,\r\n  addNewElementsToLayouts,\r\n  removeElementsFromLayout\r\n};\r\n","import { observable, action, decorate } from \"mobx\";\r\nimport { Histogram } from \"wiplib\";\r\nimport { CumulativeHistogram } from \"wiplib\";\r\nimport * as GridLayoutHelper from \"../lib/grid/calculateLayout\";\r\n\r\nclass AppStoreSingleton {\r\n  /** All the information relative to the images loaded */\r\n  imagesInfos = [];\r\n  /** All the information relative to the histograms of each image */\r\n  histogramInfos = [];\r\n  /** All the information relative to the profiles  */\r\n  profilesInfos = [];\r\n  /** Grid layouts for the elements on screen */\r\n  gridLayouts = GridLayoutHelper.createNewSetOfLayouts();\r\n  /** Indicates the current method for selecting a part of the image */\r\n  imageSelectionMehod = \"selection\";\r\n  /** Information of the current grid item being selected (item type & index) */\r\n  selectedGridItem = { type: \"\", index: -1 };\r\n  /** Coordenates of the pixel that was last being pointed by the mouse */\r\n  pixelCoords = { x: 0, y: 0 };\r\n  /** Value of the pixel that was last being pointed by the mouse */\r\n  pixelValue = [0, 0, 0, 255];\r\n  /** Amount of removed images, needed for proper indexing images on the grid */\r\n  _removedImagesCount = 0;\r\n  /** Amount of added profiles, needed for proper indexing profiles on the grid */\r\n  _profilesCount = 0;\r\n\r\n  addImage = imageBuffer => {\r\n    const imageSection = {\r\n      top: 0,\r\n      left: 0,\r\n      width: imageBuffer.width,\r\n      height: imageBuffer.height\r\n    };\r\n    const histogram = new Histogram(imageBuffer);\r\n    const cHistogram = new CumulativeHistogram(histogram.histogramValues);\r\n    const imageKey = `Image ${this.imagesInfos.length +\r\n      this._removedImagesCount}`;\r\n    const histogramKey = `Histogram ${this.histogramInfos.length +\r\n      this._removedImagesCount}`;\r\n\r\n    this.imagesInfos.push({ key: imageKey, imageBuffer, region: imageSection });\r\n\r\n    this.histogramInfos.push({\r\n      key: histogramKey,\r\n      histogram,\r\n      cHistogram,\r\n      visible: false\r\n    });\r\n\r\n    this.gridLayouts = GridLayoutHelper.addNewElementsToLayouts(\r\n      this.gridLayouts,\r\n      [imageKey]\r\n    );\r\n  };\r\n\r\n  addProfile = (profileValues, firstDerivativeProfileValues) => {\r\n    const profileKey = `Profile ${this._profilesCount}`;\r\n    this._profilesCount = this._profilesCount + 1;\r\n\r\n    const firstDerivativeKey = \"First derivative of \" + profileKey;\r\n\r\n    this.profilesInfos.push({\r\n      key: profileKey,\r\n      profileValues,\r\n      firstDerivativeProfileValues\r\n    });\r\n\r\n    this.gridLayouts = GridLayoutHelper.addNewElementsToLayouts(\r\n      this.gridLayouts,\r\n      [profileKey, firstDerivativeKey]\r\n    );\r\n  };\r\n\r\n  removeImageInfo = index => {\r\n    const newLayouts = GridLayoutHelper.removeElementsFromLayout(\r\n      this.gridLayouts,\r\n      [this.histogramInfos[index].key, this.imagesInfos[index].key]\r\n    );\r\n    let newSelectedItem = { ...this.selectedGridItem };\r\n\r\n    // We are removing an element from an array, we have to update the\r\n    // selected item index if it is the element removed or after it\r\n    if (index <= newSelectedItem.index) {\r\n      newSelectedItem.index -= 1;\r\n      if (newSelectedItem.index < 0) {\r\n        newSelectedItem.type = \"\";\r\n      }\r\n    }\r\n\r\n    this.histogramInfos = this.histogramInfos.filter((_, i) => i !== index);\r\n    this.imagesInfos = this.imagesInfos.filter((_, i) => i !== index);\r\n    this.gridLayouts = newLayouts;\r\n    this.selectedGridItem = newSelectedItem;\r\n    this._removedImagesCount = this._removedImagesCount + 1;\r\n  };\r\n\r\n  updateImageRegion = (index, newRegion) =>\r\n    (this.imagesInfos[index].region = newRegion);\r\n\r\n  /** Hides the given histogram from the view */\r\n  hideHistogram = index => {\r\n    // Set the visibility to false, remove its layout information and resets the\r\n    // current selected item if it was the histogram to hide\r\n    this.histogramInfos[index].visible = false;\r\n    this.gridLayouts = GridLayoutHelper.removeElementsFromLayout(\r\n      this.gridLayouts,\r\n      [this.histogramInfos[index].key]\r\n    );\r\n    if (this.isGridItemSelected(\"histogram\", index)) {\r\n      this.selectedGridItem = { type: \"\", index: -1 };\r\n    }\r\n  };\r\n\r\n  removeProfile = index => {\r\n    const newLayouts = GridLayoutHelper.removeElementsFromLayout(\r\n      this.gridLayouts,\r\n      [this.profilesInfos[index].key]\r\n    );\r\n    let newSelectedItem = { ...this.selectedGridItem };\r\n\r\n    if (index <= newSelectedItem.index) {\r\n      newSelectedItem.index -= 1;\r\n      if (newSelectedItem.index < 0) {\r\n        newSelectedItem.type = \"\";\r\n      }\r\n    }\r\n\r\n    this.profilesInfos = this.profilesInfos.filter((_, i) => i !== index);\r\n    this.gridLayouts = newLayouts;\r\n    this.selectedGridItem = newSelectedItem;\r\n  };\r\n\r\n  showHistogramOfCurrentImage = () => {\r\n    const { type, index } = this.selectedGridItem;\r\n\r\n    if (type === \"image\") {\r\n      this.histogramInfos[index].visible = true;\r\n\r\n      this.gridLayouts = GridLayoutHelper.addNewElementsToLayouts(\r\n        this.gridLayouts,\r\n        [this.histogramInfos[index].key]\r\n      );\r\n    }\r\n  };\r\n\r\n  updateLayout = (_, newLayouts) =>\r\n    requestAnimationFrame(() => (this.gridLayouts = newLayouts));\r\n\r\n  updateSelectedImageItem = index =>\r\n    (this.selectedGridItem = { type: \"image\", index });\r\n\r\n  updateSelectedHistogramItem = index =>\r\n    (this.selectedGridItem = { type: \"histogram\", index });\r\n\r\n  updateSelectedProfileItem = index =>\r\n    (this.selectedGridItem = { type: \"line\", index });\r\n\r\n  setCurrentPixel = (coords, value) => {\r\n    this.pixelCoords = coords;\r\n    this.pixelValue = value;\r\n  };\r\n\r\n  updateImageSelectionMehod = newMethodType => {\r\n    this.imageSelectionMehod = newMethodType;\r\n  };\r\n\r\n  isGridItemSelected = (type, index) =>\r\n    this.selectedGridItem.index === index &&\r\n    this.selectedGridItem.type === type;\r\n}\r\n\r\ndecorate(AppStoreSingleton, {\r\n  imagesInfos: observable,\r\n  histogramInfos: observable,\r\n  profilesInfos: observable,\r\n  gridLayouts: observable,\r\n  imageSelectionMehod: observable,\r\n  selectedGridItem: observable,\r\n  pixelCoords: observable,\r\n  pixelValue: observable,\r\n  addImage: action,\r\n  addProfile: action,\r\n  removeImageInfo: action,\r\n  updateImageRegion: action,\r\n  hideHistogram: action,\r\n  removeProfile: action,\r\n  showHistogramOfCurrentImage: action,\r\n  updateLayout: action,\r\n  updateSelectedImageItem: action,\r\n  updateSelectedHistogramItem: action,\r\n  updateSelectedProfileItem: action,\r\n  setCurrentPixel: action,\r\n  updateImageSelectionMehod: action\r\n});\r\n\r\nexport default new AppStoreSingleton();\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"./index.css\";\r\n\r\n// react-grid-layout CSS classes\r\nimport \"../node_modules/react-grid-layout/css/styles.css\";\r\nimport \"../node_modules/react-resizable/css/styles.css\";\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { SnackbarProvider } from \"notistack\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Provider } from \"mobx-react\";\r\nimport appStore from \"./stores/appStore\";\r\n\r\n// Material UI color theme\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    common: { black: \"#000\", white: \"#fff\" },\r\n    background: { paper: \"#fff\", default: \"#fafafa\" },\r\n    primary: {\r\n      light: \"#7986cb\",\r\n      main: \"#3f51b5\",\r\n      dark: \"#303f9f\",\r\n      contrastText: \"#fff\"\r\n    },\r\n    secondary: {\r\n      light: \"#ff4081\",\r\n      main: \"#f50057\",\r\n      dark: \"#c51162\",\r\n      contrastText: \"#fff\"\r\n    },\r\n    error: {\r\n      light: \"#e57373\",\r\n      main: \"#f44336\",\r\n      dark: \"#d32f2f\",\r\n      contrastText: \"#fff\"\r\n    },\r\n    text: {\r\n      primary: \"rgba(0, 0, 0, 0.87)\",\r\n      secondary: \"rgba(0, 0, 0, 0.54)\",\r\n      disabled: \"rgba(0, 0, 0, 0.38)\",\r\n      hint: \"rgba(0, 0, 0, 0.38)\"\r\n    }\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <div>\r\n    <MuiThemeProvider theme={theme}>\r\n      <SnackbarProvider\r\n        maxSnack={5}\r\n        anchorOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\"\r\n        }}\r\n        action={[\r\n          <Button color=\"inherit\" size=\"small\" key={Date.now()}>\r\n            Dismiss\r\n          </Button>\r\n        ]}\r\n      >\r\n        <Provider appStore={appStore}>\r\n          <App />\r\n        </Provider>\r\n      </SnackbarProvider>\r\n    </MuiThemeProvider>\r\n  </div>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}