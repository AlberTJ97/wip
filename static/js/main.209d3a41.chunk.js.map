{"version":3,"sources":["../../wiplib/build/operations/imagesDifference.js","../../wiplib/build/colorSpaceConversions.js","../../wiplib/build/index.js","../../wiplib/build/ImageInfo/index.js","../../wiplib/build/exceptions/ImageOperationException.js","../../wiplib/build/operations/index.js","../../wiplib/build/operations/brightnessAndContrastAdjustment.js","../../wiplib/build/operations/changesDetection.js","../../wiplib/build/operations/crop.js","../../wiplib/build/operations/gammaCorrection.js","../../wiplib/build/operations/grayscale.js","../../wiplib/build/operations/histogramEqualization.js","../../wiplib/build/operations/histogramSpecification.js","../../wiplib/build/operations/imageResampling.js","../../wiplib/build/operations/imageResizing.js","../../wiplib/build/operations/imageRotation.js","../../wiplib/build/operations/imageTranspose.js","../../wiplib/build/operations/interpolationMethods.js","../../wiplib/build/operations/linearTransformation.js","../../wiplib/build/operations/mirrorOperations.js","../../wiplib/build/operations/quantization.js","../../wiplib/build/operations/sepia.js","../../wiplib/build/operations/hueRotation.js","../../wiplib/build/operations/saturate.js","../../wiplib/build/RgbaImageBuffer/index.js","../../wiplib/build/exceptions/index.js","../../wiplib/build/operations/transformImage.js","lib/grid/gridProperties.js","components/InteractiveGrid/Grid/Grid.js","components/DeleteButton/index.js","components/InteractiveGrid/Item/Item.js","components/InteractiveGrid/index.js","lib/coordinates.js","components/ImageComponent/index.js","lib/Exceptions/ImageLoadException.js","lib/imageHelper.js","components/ImageProcessingUi/LoadImageMenuItem.js","components/ImageProcessingUi/DownloadSelectedImageMenuItem.js","components/Toolbar/Submenus/FileSubmenu.js","components/ImageProcessingUi/ShowImageInfoMenuItem.js","components/ImageProcessingUi/CropMenuItem.js","lib/Bresenham.js","components/ImageProcessingUi/ProfileMenuItem.js","components/Toolbar/Submenus/ImageSubmenu.js","components/ImageProcessingUi/LinearTransformationMenuItem/LinearTransformationDialog/InputCoordinate.js","components/ImageProcessingUi/LinearTransformationMenuItem/LinearTransformationDialog/index.js","components/ImageProcessingUi/LinearTransformationMenuItem/index.js","lib/Checks.js","components/ImageProcessingUi/BrightnessAndContrastMenuItem/BrightnessAndContrastDialog.js","components/ImageProcessingUi/BrightnessAndContrastMenuItem/index.js","components/ImageProcessingUi/GammaCorrectionMenuItem/GammaCorrectionDialog.js","components/ImageProcessingUi/GammaCorrectionMenuItem/index.js","components/Toolbar/FilesListMenu.js","components/ImageProcessingUi/ImageDifferenceMenuItem/ImageDifferenceDialog.js","components/ImageProcessingUi/ImageDifferenceMenuItem/index.js","components/ImageProcessingUi/ChangesDetectionMenuItem/ChangesDetectionDialog.js","components/ImageProcessingUi/ChangesDetectionMenuItem/index.js","components/ImageProcessingUi/HistogramSpecificationMenuItem/HistogramSpecificationDialog.js","components/ImageProcessingUi/HistogramSpecificationMenuItem/index.js","components/ImageProcessingUi/GrayscaleMenuItem.js","components/ImageProcessingUi/SepiaMenuItem.js","components/ImageProcessingUi/HistogramEqualizationMenuItem.js","components/ImageProcessingUi/QuantizationMenuItem/QuantizationDialog.js","components/ImageProcessingUi/QuantizationMenuItem/index.js","components/ImageProcessingUi/HueRotationMenuItem/HueRotationDialog.js","components/ImageProcessingUi/HueRotationMenuItem/index.js","components/ImageProcessingUi/SaturateImageMenuItem/SaturateImageDialog.js","components/ImageProcessingUi/SaturateImageMenuItem/index.js","components/Toolbar/Submenus/PointOperationsSubmenu.js","components/ImageProcessingUi/ImageRotationMenuItem/ImageRotationDialog.js","components/ImageProcessingUi/ImageRotationMenuItem/index.js","components/ImageProcessingUi/ImageResizeMenuItem/ImageResizingDialog.js","components/ImageProcessingUi/ImageResizeMenuItem/index.js","components/ImageProcessingUi/VerticalMirrorMenuItem.js","components/ImageProcessingUi/HorizontalMirrorMenuItem.js","components/ImageProcessingUi/ImageTransposeMenuItem.js","components/ImageProcessingUi/ImageResampleMenuItem/ImageResampleDialog.js","components/ImageProcessingUi/ImageResampleMenuItem/index.js","components/Toolbar/Submenus/GeometricOperationsSubmenu.js","components/Toolbar/index.js","components/Overlays/SelectionOverlay.js","components/Overlays/LineOverlay.js","components/Toolbar/SelectionToolbar.js","components/RightSideMenu/index.js","components/App/index.js","lib/grid/calculateLayout.js","components/HistogramComponent/index.js","lib/threeButtonStyles.js","components/HistogramAndInfoComponent/index.js","components/ProfileComponent/index.js","components/ProfilesComponent/index.js","stores/appStore.js","index.js"],"names":["Object","defineProperty","exports","value","imagesDifference","obj","_RgbaImageBuffer","__webpack_require__","__esModule","default","_exceptions","firstImgBuffer","secondImgBuffer","height","width","ImageOperationException","result","copy","i","pixels","length","NUM_CHANNELS","Math","abs","RGBToHSL","_ref","r","g","b","max","min","chroma","l","s","Number","EPSILON","h","HSLToRGB","_ref2","values","c","x","m","round","enumerable","get","_ImageInfo","operations","exceptions","_interopRequireDefault","_interopRequireWildcard","newObj","key","prototype","hasOwnProperty","call","desc","getOwnPropertyDescriptor","set","_defineProperties","target","props","descriptor","configurable","writable","ImageInfo","imageBuffer","instance","Constructor","TypeError","_classCallCheck","this","setDimensionsInfo","setHistograms","setCumulativeHistograms","histograms","setLimits","setModes","setEntropies","pixelCount","setBrightnesses","setContrasts","brightnesses","protoProps","staticProps","push","Array","fill","cumulativeHistograms","map","histogram","accumulatedCount","count","sumReducer","sum","pixelValue","reduce","contrasts","dim","mean","pow","sqrt","_this","smallestNonZeroes","findIndex","largestNonZeroes","_this2","modeIndexReducer","maxIndex","currPixelCount","currIndex","modeIndexes","modeValues","entropyReducer","totalEntropy","probability","log2","entropies","_typeof","Symbol","iterator","constructor","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_wrapNativeSuper","Class","_cache","Map","undefined","fn","Function","toString","indexOf","has","Wrapper","_construct","arguments","_getPrototypeOf","create","_setPrototypeOf","Parent","args","Reflect","construct","sham","Proxy","Date","e","isNativeReflectConstruct","a","apply","bind","o","p","setPrototypeOf","__proto__","getPrototypeOf","_Error","exceptionName","message","name","subClass","superClass","_inherits","Error","_brightnessAndContrastAdjustment","keys","forEach","_changesDetection","_crop","_gammaCorrection","_grayscale","_histogramEqualization","_histogramSpecification","_imageResampling","_imageResizing","_imageRotation","_imagesDifference","_imageTranspose","_interpolationMethods","_linearTransformation","_mirrorOperations","_quantization","_transformImage","_sepia","_hueRotation","_saturate","brightnessAndContrastAdjustment","imgBuffer","oldBrightnesses","oldContrasts","newBrightnesses","newContrasts","lookupTable","createLookupTable","slope","yIntercept","newValue","clippedValue","applyLookupTable","changesDetection","threshold","changeHighlightColor","difference","error","crop","_ref$top","top","_ref$left","left","_ref$height","_ref$width","resultPixels","Uint8ClampedArray","currentIndex","yOffset","xOffset","pixel","getPixel","y","gammaCorrection","gammaValue","grayscaleStrategies","imageToGrayscale","grayscaleStrategy","pixelToGrayscalePal","grayValue","rComponent","gComponent","bComponent","histogramEqualization","imageInfo","equalizationLevel","accumulatedValue","equalizedValue","histogramSpecification","srcImgInfo","targetImgInfo","srcCHistos","cHisto","targetCHistos","j","imageResampling","blockWidth","blockHeight","initialX","initialY","resampleBlock","xLimit","yLimit","index","newValues","_y","_x","imageResizing","widthPercentage","heighPercentage","interpolationMethod","oldWidth","oldHeight","widthFactor","heightFactor","newWidth","floor","newHeight","transformedCoords","imageRotation","isInRange","degrees","rotateAndPaintRotation","radians","PI","directTransformation","xCoord","yCoord","cos","sin","newImageInfo","getRotatedImageInfo","rotateAndPaint","minXCoord","minYCoord","originalImagePixel","upperLeftCornerRotated","lowerLeftCornerRotated","upperRightCornerRotated","lowerRightCornerRotated","maxXCoord","maxYCoord","imageTranspose","interpolationMethods","closestNeighbourInterpolation","bilinearInterpolation","A","ceil","B","C","D","q","transform","linearTransformation","points","console","log","concat","current","next","validatePoints","sections","extractSections","currentSections","currentSectionIndex","_currentSections$curr","frontier","newValueClipped","prev","mirror","horizontal","vertical","quantization","amountOfLevels","isInteger","part","minDistance","POSITIVE_INFINITY","distance","imageToSepia","redValue","greenValue","blueValue","hueRotation","colorSpaceConversions","HSLPixel","newRGBPixel","saturateImage","saturationPercentage","_createClass","_defineProperty","RgbaImageBuffer","toImageData","_ref3","pixelPosition","_mapMatrixPositionToArray","_width","_height","_pixels","data","imgData","ImageData","_ImageOperationException","lookupTables","dimMapper","pixelMapper","currentLookupTable","mappedValue","gridProperties","GRID_COLUMNS","lg","md","sm","xs","xxs","LAYOUT_BREAKPOINTS","DEFAULT_GRID_ITEM_COLS","DEFAULT_GRID_ITEM_ROWS","GRID_ITEM_ROW_HEIGHT","ResponsiveGrid","WidthProvider","Responsive","Grid","children","objectWithoutProperties","react_default","createElement","assign","cols","GRID_PROPERTIES","breakpoints","rowHeight","defaultProps","objectSpread","layouts","DeleteButton","onDelete","className","onClick","onTouchEnd","disabled","aria-label","stopEvent","event","preventDefault","stopPropagation","Item","state","isDraggable","onDragHandleMouseDown","setState","onDragHandleMouseUp","onDragStart","onMouseDown","onTouchMove","onTouchStart","onDragEnd","onMouseUp","id","onSelect","document","addEventListener","removeEventListener","_this$props","style","isSelected","draggable","onFocus","tabIndex","components_DeleteButton","React","Component","onDeselect","InteractiveGrid","mapToCoordinatesRelativeToElement","coords","parentElement","parentElementBoundingBox","clientX","clientY","mapToRelativeCoordinates","getBoundingClientRect","calculateRect","coords1","coords2","callback","right","bottom","ImageComponent","isImageLoading","isMouseDown","isDragging","mouseDownOriginCoordinates","currentMouseCoordinates","selectionOriginCoords","selectionEndCoords","initialOriginCoords","initialEndCoords","onMouseMove","mouseEvent","coordinates","Coordinates","refs","canvas","rgbaImage","_this$state","_this$props$rgbaImage","Xdiff","Ydiff","selectionRect","originCoords","endCoords","selectionWidth","selectionHeight","rect","point","_this$state2","prevRect","_this$state3","onSelection","_this$props$rgbaImage2","context","getContext","putImageData","_this$state4","position","ref","display","backgroundColor","maxHeight","ImageLoadException","errorImageSrc","classCallCheck","possibleConstructorReturn","src","loadFromObject","URL","createObjectURL","image","Image","Promise","resolve","reject","onload","onerror","load","finally","revokeObjectURL","LoadImageMenuItem","onImageFileInputted","enqueueSnackbar","appStore","files","ImageHelper","then","naturalWidth","naturalHeight","drawImage","getImageData","fromImageData","addImage","fileInputForm","reset","catch","variant","Fragment","htmlFor","MenuItem_default","hidden","type","accept","onChange","withSnackbar","inject","observer","DownloadSelectedImageMenuItem","downloadCurrentImage","_appStore$selectedGri","selectedGridItem","imgInfo","imagesInfos","_imgInfo$region","region","imageData","toBlob","blob","imgUrl","downloadAnchor","href","click","download","FileSubmenu","open","handleToggle","handleClose","anchorEl","contains","Button_default","buttonRef","node","aria-owns","aria-haspopup","color","Popper_default","transition","disablePortal","Paper_default","ClickAwayListener_default","onClickAway","MenuList_default","ImageProcessingUi_LoadImageMenuItem","ImageProcessingUi_DownloadSelectedImageMenuItem","ShowImageInfoMenuItem","openRightSideMenu","CropMenuItem","cropCurrentImage","imageSelectionMehod","bresenham","firstPoint","secondPoint","x0","x1","y0","y1","dx","dy","sx","sy","err","e2","ProfileMenuItem","getProfile","_appStore$imagesInfos","associatedImage","profileValues","Red","Green","Blue","firstDerivativeProfileValues","_loop","addProfile","ImageSubmenu","ImageProcessingUi_ShowImageInfoMenuItem","ImageProcessingUi_CropMenuItem","ImageProcessingUi_ProfileMenuItem","InputCoordinate","onYChange","number","parseFloat","coordinate","isFinite","onXChange","justifyContent","TextField_default","placeholder","margin","InputProps","startAdornment","InputAdornment_default","IconButton_default","Delete_default","styles","center","marginTop","marginBottom","LinearTransformationDialog","onDataChange","newCoords","prevState","coord","onDataDelete","filter","_","addNewCoordinate","newCoord","slice","toConsumableArray","onSubmit","onClose","Dialog_default","isOpen","scroll","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","es","xDomain","yDomain","fullWidth","InputCoordinate_InputCoordinate","DialogActions_default","LinearTransformationMenuItem","isDialogOpen","openDialog","closeDialog","LinearTransformationMenuItem_LinearTransformationDialog","inputsContainer","flexWrap","input","BrightnessAndContrastDialog","brightness","brightnessErrorMessage","contrast","contrastErrorMessage","formChanged","valueStateName","errorMessageStateName","minPossibleValue","maxPossibleValue","_this$setState2","_this$setState","onBrightnessChange","onContrastChange","extraInfo","label","String","_props$appStore","oldBrightness","oldContrast","toFixed","BrightnessAndContrastMenuItem","BrightnessAndContrastMenuItem_BrightnessAndContrastDialog","GammaCorrectionDialog","gamma","gammaErrorMessage","errorMessage","onGammaChange","GammaCorrectionMenuItem","GammaCorrectionMenuItem_GammaCorrectionDialog","FilesListMenu","selectedIndex","selectedItemIndex","handleClickListItem","currentTarget","handleMenuItemClick","selectedItemName","onItemSelection","classes","root","List_default","component","ListItem_default","isDisabled","button","menuTitle","ListItemText_default","primary","secondary","options","Menu_default","Boolean","option","selected","withStyles","theme","palette","background","paper","ImageDifferenceDialog","imgName","otherImgName","otherImageInfo","find","activeImagesNames","img","Toolbar_FilesListMenu","ImageDifferenceMenuItem","ImageDifferenceMenuItem_ImageDifferenceDialog","ChangesDetectionDialog","rgbaColor","onImgNameChange","onThresholdChange","handleChangeComplete","rgb","applyChangesDetection","lib","onChangeComplete","ChangesDetectionMenuItem","ChangesDetectionMenuItem_ChangesDetectionDialog","HistogramSpecificationDialog","otherImgIndex","HistogramSpecificationMenuItem","HistogramSpecificationMenuItem_HistogramSpecificationDialog","GrayscaleMenuItem","currentImageToGrayscale","_this$props$appStore$","SepiaMenuItem","currentImageToSepia","HistogramEqualizationMenuItem","currentImageHistogramEqualization","QuantizationDialog","levels","onLevelsChange","QuantizationMenuItem","QuantizationMenuItem_QuantizationDialog","HueRotationDialog","onDegreesChange","HueRotationMenuItem","HueRotationMenuItem_HueRotationDialog","SaturateImageDialog","onSaturationPercentageChange","endAdornment","SaturateImageMenuItem","SaturateImageMenuItem_SaturateImageDialog","PointOperationsSubmenu","ImageProcessingUi_GrayscaleMenuItem","ImageProcessingUi_SepiaMenuItem","ImageProcessingUi_LinearTransformationMenuItem","ImageProcessingUi_BrightnessAndContrastMenuItem","ImageProcessingUi_GammaCorrectionMenuItem","ImageProcessingUi_ImageDifferenceMenuItem","ImageProcessingUi_ChangesDetectionMenuItem","ImageProcessingUi_HistogramSpecificationMenuItem","ImageProcessingUi_HistogramEqualizationMenuItem","ImageProcessingUi_QuantizationMenuItem","ImageProcessingUi_HueRotationMenuItem","ImageProcessingUi_SaturateImageMenuItem","ImageRotationDialog","degreesErrorMessage","selectedInterpolationMethodIndex","onRotateAndPaintChange","checked","onInterpolationMethodChange","FormControlLabel_default","control","Checkbox_default","ImageRotationMenuItem","rotateCurrentImage","ImageRotationDialog_ImageRotationDialog","rotationInfo","ImageResizingDialog","widthErrorMessage","heightPercentage","heightErrorMessage","onDimensionsChange","dimensionName","dimensionStateName","oldDimensionPropName","percentageStateName","isPercentage","dimension","percentage","isNaN","onWidthChange","onHeightChange","onWidthPercentageChange","onHeightPercentageChange","ImageResizeMenuItem","resizeCurrentImage","_appStore$selectedGri2","selectedImageDimensions","ImageResizingDialog_ImageResizingDialog","resizeInfo","VerticalMirrorMenuItem","currentImageVerticalMirror","HorizontalMirrorMenuItem","currentImageHorizontalMirror","ImageTransposeMenuItem","transposeImage","ImageResampleDialog","blockWidthErrorMessage","blockHeightErrorMessage","onBlockWidthChange","onBlockHeightChange","ImageResampleMenuItem","ImageResampleMenuItem_ImageResampleDialog","GeometricOperationsSubmenu","ImageProcessingUi_ImageRotationMenuItem","ImageProcessingUi_ImageResizeMenuItem","ImageProcessingUi_VerticalMirrorMenuItem","ImageProcessingUi_HorizontalMirrorMenuItem","ImageProcessingUi_ImageTransposeMenuItem","ImageProcessingUi_ImageResampleMenuItem","AppToolbar","AppBar_default","Toolbar_default","FileSubmenu_FileSubmenu","ImageSubmenu_ImageSubmenu","PointOperationsSubmenu_PointOperationsSubmenu","GeometricOperationsSubmenu_GeometricOperationsSubmenu","SelectionOverlay","LineOverlay","xmlns","stroke","strokeWidth","x2","y2","SelectionToolbar","_this$props$appStore","updateImageSelectionMehod","Tooltip_default","title","CropSquare_default","Edit_default","RightSideMenu","rightSideMenu","closeRightSideMenu","visibility","marginLeft","marginRight","menuContent","menuItem","App","onMouseMoveOverImage","pixelCoords","setCurrentPixel","onImageRegionSelection","_calculateRect","newRegion","updateImageRegion","getImageOverlay","Overlays_SelectionOverlay","Overlays_LineOverlay","currentPixelRgbaValue","join","borderRadius","border","boxShadow","overflow","alignItems","paddingRight","padding","react_fontawesome_index_es","icon","components_Toolbar","components_Toolbar_SelectionToolbar","getGridComponent","components_RightSideMenu","getDisplayForPixelUnderMouse","gridLayouts","onLayoutChange","updateLayout","getImageGridItem","_this3","_ref4","removeImageInfo","updateSelectedImageItem","isGridItemSelected","components_ImageComponent","createNewSetOfLayouts","layoutName","createNewElementLayoutInfo","Infinity","w","minW","minH","HistogramComponent","emphasizedValue","histogramVisualizationData","colorName","onMouseLeave","onNearestX","align","fontSize","format","dataPoint","buttonStyles","borderRight","borderTopRightRadius","borderBottomRightRadius","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","colorNames","HistogramAndInfoComponent","currentTab","currentChannel","updateCurrentTab","newTab","updateCurrentChannel","newChannel","_this$props$data","components_HistogramComponent","flexGrow","alignSelf","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","sizeMe","ProfileComponent","profileVisualizationData","channel","ProfilesComponent","info","_this$props$info","components_ProfileComponent","AppStoreSingleton","GridLayoutHelper","_removedImagesCount","selectedImageInfo","profilesInfos","currentLayouts","newElementsIds","newElementsLayoutInfos","newLayouts","updateRightSideMenuImageInfo","ids","includes","newSelectedItem","requestAnimationFrame","newMethodType","components_HistogramAndInfoComponent","profileInfo","ProfilesComponent_ProfilesComponent","decorate","observable","action","removeProfile","stores_appStore","createMuiTheme","common","black","white","light","main","dark","contrastText","text","hint","typography","useNextVariants","library","add","faArrowsAlt","ReactDOM","render","core_styles","notistack_build","maxSnack","anchorOrigin","size","now","index_module","components_App","getElementById"],"mappings":"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","file":"static/js/main.209d3a41.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.imagesDifference = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"../RgbaImageBuffer\"));\n\nvar _exceptions = require(\"../exceptions\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Calculates the difference (absolute value) between two images\n *\n * @param {RgbaImageBuffer} firstImgBuffer First image\n * @param {RgbaImageBuffer} secondImgBuffer Second image\n * @returns {RgbaImageBuffer} Result image\n */\n\n\nvar imagesDifference = function imagesDifference(firstImgBuffer, secondImgBuffer) {\n  if (firstImgBuffer.height !== secondImgBuffer.height || firstImgBuffer.width !== secondImgBuffer.width) throw new _exceptions.ImageOperationException(\"ImagesDifferenceException\", \"Images should have the same width and height\");\n  var result = firstImgBuffer.copy();\n\n  for (var i = 0; i < result.pixels.length; i += _RgbaImageBuffer.default.NUM_CHANNELS) {\n    result.pixels[i] = Math.abs(result.pixels[i] - secondImgBuffer.pixels[i]);\n    result.pixels[i + 1] = Math.abs(result.pixels[i + 1] - secondImgBuffer.pixels[i + 1]);\n    result.pixels[i + 2] = Math.abs(result.pixels[i + 2] - secondImgBuffer.pixels[i + 2]);\n  }\n\n  return result;\n};\n\nexports.imagesDifference = imagesDifference;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RGBToHSL = RGBToHSL;\nexports.HSLToRGB = HSLToRGB;\n/**\n * Returns the given RGB pixel converted to HSL. RGB pixel values should be between\n * 0 and 255. The H channel of the converted pixel varies between 0 and 359, S and L\n * channels are between 0 and 1\n *\n * @param {Number} r Value of R channel\n * @param {Number} g Value of G channel\n * @param {Number} b Value of B channel\n * @returns {Object} HSL equivalent pixel\n */\n\nfunction RGBToHSL(_ref) {\n  var r = _ref.r,\n      g = _ref.g,\n      b = _ref.b;\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  var max = Math.max(r, g, b);\n  var min = Math.min(r, g, b);\n  var chroma = max - min;\n  var l = (max + min) / 2;\n  var s = l < Number.EPSILON || Math.abs(1 - l) < Number.EPSILON ? 0 : chroma / (1 - Math.abs(2 * l - 1));\n  var h = 0;\n\n  if (chroma >= Number.EPSILON) {\n    switch (max) {\n      case r:\n        h = (g - b) / chroma % 6;\n        break;\n\n      case g:\n        h = (b - r) / chroma + 2;\n        break;\n\n      case b:\n        h = (r - g) / chroma + 4;\n        break;\n    }\n  }\n\n  h *= 60;\n  return {\n    h: h,\n    s: s,\n    l: l\n  };\n}\n/**\n * Returns the given HSL pixel converted to RGB. H channel value should be between\n * 0 and 359, S and L channels values should be between 0 and 1.RGB pixel values varies\n * between 0 and 255\n *\n * @param {Number} h Value of H channel\n * @param {Number} s Value of S channel\n * @param {Number} l Value of L channel\n * @returns {Object} RGB equivalent pixel\n */\n\n\nfunction HSLToRGB(_ref2) {\n  var h = _ref2.h,\n      s = _ref2.s,\n      l = _ref2.l;\n  var values = [0, 0, 0];\n  var c = (1 - Math.abs(2 * l - 1)) * s;\n  var x = c * (1 - Math.abs(h / 60 % 2 - 1));\n  var m = l - c / 2;\n  if (h < 60) values = [c, x, 0];else if (h < 120) values = [x, c, 0];else if (h < 180) values = [0, c, x];else if (h < 240) values = [0, x, c];else if (h < 300) values = [x, 0, c];else if (h < 360) values = [c, 0, x];\n  return {\n    r: Math.round((values[0] + m) * 255),\n    g: Math.round((values[1] + m) * 255),\n    b: Math.round((values[2] + m) * 255)\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"RgbaImageBuffer\", {\n  enumerable: true,\n  get: function get() {\n    return _RgbaImageBuffer.default;\n  }\n});\nObject.defineProperty(exports, \"ImageInfo\", {\n  enumerable: true,\n  get: function get() {\n    return _ImageInfo.default;\n  }\n});\nexports.operations = exports.exceptions = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"./RgbaImageBuffer\"));\n\nvar _ImageInfo = _interopRequireDefault(require(\"./ImageInfo\"));\n\nvar exceptions = _interopRequireWildcard(require(\"./exceptions\"));\n\nexports.exceptions = exceptions;\n\nvar operations = _interopRequireWildcard(require(\"./operations\"));\n\nexports.operations = operations;\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"../RgbaImageBuffer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * Class to contain image information like the image histogram, number of\n * pixels, minimum and maximum color value, mode, entropy, brightness, contrast,\n * etc.\n */\n\n\nvar ImageInfo =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {RgbaImageBuffer} imagePixels Image Buffer to create the histogram\n   * for\n   */\n  function ImageInfo(imageBuffer) {\n    _classCallCheck(this, ImageInfo);\n\n    this.setDimensionsInfo(imageBuffer);\n    this.setHistograms(imageBuffer);\n    this.setCumulativeHistograms(this.histograms);\n    this.setLimits(this.histograms);\n    this.setModes(this.histograms);\n    this.setEntropies(this.histograms, this.pixelCount);\n    this.setBrightnesses(this.histograms, this.pixelCount);\n    this.setContrasts(this.histograms, this.brightnesses, this.pixelCount);\n  }\n  /**\n   * Calculates and sets the `pixelCount`, `width` and `height` properties from\n   * the given ImageBuffer object\n   *\n   * @param {RgbaImageBuffer} imageBuffer The image buffer representing the\n   * image\n   * @param {number} imageBuffer.width  The width of the image\n   * @param {number} imageBuffer.height The height of the image\n   */\n\n\n  _createClass(ImageInfo, [{\n    key: \"setDimensionsInfo\",\n    value: function setDimensionsInfo(_ref) {\n      var width = _ref.width,\n          height = _ref.height;\n      this.width = width;\n      this.height = height;\n      this.pixelCount = width * height;\n    }\n    /**\n     * Calculates and sets the `histograms` property from the given ImageBuffer\n     * object\n     *\n     * A histogram is an array that maps each possible color value to the number\n     * of its occurrences in the given image\n     *\n     * @param {RgbaImageBuffer} imageBuffer The image buffer representing the\n     * image\n     */\n\n  }, {\n    key: \"setHistograms\",\n    value: function setHistograms(_ref2) {\n      var pixels = _ref2.pixels;\n      this.histograms = [];\n      this.histograms.push(Array(256).fill(0));\n      this.histograms.push(Array(256).fill(0));\n      this.histograms.push(Array(256).fill(0));\n\n      for (var i = 0; i < pixels.length; i += _RgbaImageBuffer.default.NUM_CHANNELS) {\n        this.histograms[0][pixels[i]] += 1;\n        this.histograms[1][pixels[i + 1]] += 1;\n        this.histograms[2][pixels[i + 2]] += 1;\n      }\n    }\n    /**\n     * Calculates and sets the `cumulativeHistograms` property from the given\n     * ImageBuffer object\n     *\n     * A cumulative histogram is an array that maps each possible color value to\n     * the number of its occurrences + the number of occurrences of lower values\n     * in the given image\n     *\n     * @param {RgbaImageBuffer} imageBuffer The image buffer representing the\n     * image\n     */\n\n  }, {\n    key: \"setCumulativeHistograms\",\n    value: function setCumulativeHistograms(histograms) {\n      this.cumulativeHistograms = histograms.map(function (histogram) {\n        var accumulatedCount = 0;\n        var cumulativeHistogram = histogram.map(function (count) {\n          accumulatedCount += count;\n          return accumulatedCount;\n        });\n        return cumulativeHistogram;\n      });\n    }\n    /**\n     * Calculates and sets the `brightnesses` property from the given histograms.\n     *\n     * The brightness is calculated as the mean of the color values and it\n     * represents the overall lightness of the image\n     *\n     * @param {number[][]} histograms An array of histograms, one for each\n     * dimension. Each histogram being the number of occurrences of the i-th pixel\n     * in the image\n     * @param {number[]} brightnesses An array of brightnesses, one for each\n     * dimension. Being each brightness the mean of pixel color values\n     * @param {number} pixelCount Number of pixels in the image\n     */\n\n  }, {\n    key: \"setBrightnesses\",\n    value: function setBrightnesses(histograms, pixelCount) {\n      var sumReducer = function sumReducer(sum, count, pixelValue) {\n        return sum + count * pixelValue;\n      };\n\n      this.brightnesses = histograms.map(function (histogram) {\n        var sum = histogram.reduce(sumReducer, 0);\n        var mean = sum / pixelCount;\n        return mean;\n      });\n    }\n    /**\n     * Calculates and sets the `contrasts` property from the given histograms.\n     *\n     * The contrast is calculated as the standard deviation of the color values.\n     * When the contrast is the minimum (zero), all color values will be the same\n     * as the brightness (the mean of color values). So the image colors will be\n     * less distinguishable from each other with lower contrast values.\n     *\n     * When the contrast is maximum, all color values will be as far as possible\n     * from the mean and so the image will have most its values at the extremes,\n     * having an image whose colors are very easy to distinguish from each other.\n     *\n     * @param {number[][]} histograms An array of histograms, one for each\n     * dimension. Each histogram being the number of occurrences of the i-th pixel\n     * in the image\n     * @param {number[]} brightnesses An array of brightnesses, one for each\n     * dimension. Being each brightness the mean of pixel color values\n     * @param {number} pixelCount Number of pixels in the image\n     */\n\n  }, {\n    key: \"setContrasts\",\n    value: function setContrasts(histograms, brightnesses, pixelCount) {\n      this.contrasts = histograms.map(function (histogram, dim) {\n        var sumSquaredErrorReducer = function sumSquaredErrorReducer(sum, count, pixelValue) {\n          return sum + count * Math.pow(pixelValue - brightnesses[dim], 2);\n        };\n\n        var sum = histogram.reduce(sumSquaredErrorReducer, 0);\n        var mean = sum / pixelCount;\n        var stdDev = Math.sqrt(mean);\n        return stdDev;\n      });\n    }\n    /**\n     * Calculates and sets the `smallestNonZeroes` and `largestNonZeroes`\n     * properties from the given histograms.\n     *\n     * The smallest non-zero is the first color value that appears at least once\n     * in the image (i.e. its number of occurrences in the histogram is non-zero).\n     * While the largest non-zero is the last color value that appears at least\n     * once in the image.\n     *\n     * @param {number[][]} histograms An array of histograms, one for each\n     * dimension. Each histogram being the number of occurrences of the i-th pixel\n     * in the image\n     */\n\n  }, {\n    key: \"setLimits\",\n    value: function setLimits(histograms) {\n      var _this = this;\n\n      this.smallestNonZeroes = histograms.map(function (histogram) {\n        return histogram.findIndex(function (pixelCount) {\n          return pixelCount > 0;\n        });\n      });\n      this.largestNonZeroes = this.histograms.map(function (histogram, dim) {\n        var pixelValue = _this.smallestNonZeroes[dim];\n\n        while (pixelValue < histogram.length && histogram[pixelValue] > 0) {\n          pixelValue += 1;\n        }\n\n        return pixelValue - 1;\n      });\n    }\n    /**\n     * Calculates and sets the `modeIndexes` and `modeValues` properties from the\n     * given histograms.\n     *\n     * The mode index is the color value that is most repeated. While the mode\n     * value is the number of occurrences that the most repeated color value has\n     *\n     * @param {number[][]} histograms An array of histograms, one for each\n     * dimension. Each histogram being the number of occurrences of the i-th pixel\n     * in the image\n     */\n\n  }, {\n    key: \"setModes\",\n    value: function setModes(histograms) {\n      var _this2 = this;\n\n      var modeIndexReducer = function modeIndexReducer(maxIndex, currPixelCount, currIndex, histogram) {\n        return currPixelCount > histogram[maxIndex] ? currIndex : maxIndex;\n      };\n\n      this.modeIndexes = histograms.map(function (histogram) {\n        var modeIndex = histogram.reduce(modeIndexReducer, 0);\n        return modeIndex;\n      });\n      this.modeValues = histograms.map(function (histogram, dim) {\n        return histogram[_this2.modeIndexes[dim]];\n      });\n    }\n    /**\n     * Calculates and sets the `entropies` property from the given histograms.\n     *\n     * The Shannon's entropy can serve as a measure of disorder of information\n     * i.e. the higher the entropy the less homogeneous the image (i.e. less\n     * different color values)\n     *\n     * @param {number[][]} histograms An array of histograms, one for each\n     * dimension. Each histogram being the number of occurrences of the i-th pixel\n     * in the image\n     * @param {number} pixelCount Number of pixels in the image\n     */\n\n  }, {\n    key: \"setEntropies\",\n    value: function setEntropies(histograms, pixelCount) {\n      var entropyReducer = function entropyReducer(totalEntropy, currPixelCount) {\n        var probability = currPixelCount / pixelCount;\n\n        if (probability > 0) {\n          return totalEntropy - probability * Math.log2(probability);\n        } else {\n          return totalEntropy;\n        }\n      };\n\n      this.entropies = histograms.map(function (histogram) {\n        return histogram.reduce(entropyReducer, 0);\n      });\n    }\n  }]);\n\n  return ImageInfo;\n}();\n\nexports.default = ImageInfo;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/**\n * Exception class representing image operations errors.\n */\n\n\nvar ImageOperationException =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(ImageOperationException, _Error);\n\n  function ImageOperationException(exceptionName, message) {\n    var _this;\n\n    _classCallCheck(this, ImageOperationException);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageOperationException).call(this, message));\n    _this.name = exceptionName;\n    return _this;\n  }\n\n  return ImageOperationException;\n}(_wrapNativeSuper(Error));\n\nexports.default = ImageOperationException;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _brightnessAndContrastAdjustment = require(\"./brightnessAndContrastAdjustment\");\n\nObject.keys(_brightnessAndContrastAdjustment).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _brightnessAndContrastAdjustment[key];\n    }\n  });\n});\n\nvar _changesDetection = require(\"./changesDetection\");\n\nObject.keys(_changesDetection).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _changesDetection[key];\n    }\n  });\n});\n\nvar _crop = require(\"./crop\");\n\nObject.keys(_crop).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _crop[key];\n    }\n  });\n});\n\nvar _gammaCorrection = require(\"./gammaCorrection\");\n\nObject.keys(_gammaCorrection).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _gammaCorrection[key];\n    }\n  });\n});\n\nvar _grayscale = require(\"./grayscale\");\n\nObject.keys(_grayscale).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _grayscale[key];\n    }\n  });\n});\n\nvar _histogramEqualization = require(\"./histogramEqualization\");\n\nObject.keys(_histogramEqualization).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _histogramEqualization[key];\n    }\n  });\n});\n\nvar _histogramSpecification = require(\"./histogramSpecification\");\n\nObject.keys(_histogramSpecification).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _histogramSpecification[key];\n    }\n  });\n});\n\nvar _imageResampling = require(\"./imageResampling\");\n\nObject.keys(_imageResampling).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _imageResampling[key];\n    }\n  });\n});\n\nvar _imageResizing = require(\"./imageResizing\");\n\nObject.keys(_imageResizing).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _imageResizing[key];\n    }\n  });\n});\n\nvar _imageRotation = require(\"./imageRotation\");\n\nObject.keys(_imageRotation).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _imageRotation[key];\n    }\n  });\n});\n\nvar _imagesDifference = require(\"./imagesDifference\");\n\nObject.keys(_imagesDifference).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _imagesDifference[key];\n    }\n  });\n});\n\nvar _imageTranspose = require(\"./imageTranspose\");\n\nObject.keys(_imageTranspose).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _imageTranspose[key];\n    }\n  });\n});\n\nvar _interpolationMethods = require(\"./interpolationMethods\");\n\nObject.keys(_interpolationMethods).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _interpolationMethods[key];\n    }\n  });\n});\n\nvar _linearTransformation = require(\"./linearTransformation\");\n\nObject.keys(_linearTransformation).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _linearTransformation[key];\n    }\n  });\n});\n\nvar _mirrorOperations = require(\"./mirrorOperations\");\n\nObject.keys(_mirrorOperations).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _mirrorOperations[key];\n    }\n  });\n});\n\nvar _quantization = require(\"./quantization\");\n\nObject.keys(_quantization).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _quantization[key];\n    }\n  });\n});\n\nvar _transformImage = require(\"./transformImage\");\n\nObject.keys(_transformImage).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _transformImage[key];\n    }\n  });\n});\n\nvar _sepia = require(\"./sepia\");\n\nObject.keys(_sepia).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _sepia[key];\n    }\n  });\n});\n\nvar _hueRotation = require(\"./hueRotation\");\n\nObject.keys(_hueRotation).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _hueRotation[key];\n    }\n  });\n});\n\nvar _saturate = require(\"./saturate\");\n\nObject.keys(_saturate).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _saturate[key];\n    }\n  });\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.brightnessAndContrastAdjustment = brightnessAndContrastAdjustment;\n\nvar _transformImage = require(\"./transformImage\");\n/**\n * Changes the contrast and the brightness of the given image\n *\n * @param {RgbaImageBuffer} imgBuffer Image to transform\n * @param {number[]} oldBrightnesses Previous brightnesses of the image\n * @param {number[]} oldContrasts Previous contrasts of the image\n * @param {number[]} newBrightnesses New brightnesses of the image\n * @param {number[]} newContrasts New contrasts of the image\n * @returns {RgbaImageBuffer} Transformed image\n */\n\n\nfunction brightnessAndContrastAdjustment(imgBuffer, oldBrightnesses, oldContrasts, newBrightnesses, newContrasts) {\n  var lookupTable = (0, _transformImage.createLookupTable)(function (dim) {\n    var slope = newContrasts[dim] / oldContrasts[dim];\n    var yIntercept = newBrightnesses[dim] - slope * oldBrightnesses[dim];\n    return function (value) {\n      var newValue = Math.round(slope * value + yIntercept);\n      var clippedValue = Math.min(Math.max(newValue, 0), 255);\n      return clippedValue;\n    };\n  });\n  return (0, _transformImage.applyLookupTable)(imgBuffer, lookupTable);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.changesDetection = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"../RgbaImageBuffer\"));\n\nvar _exceptions = require(\"../exceptions\");\n\nvar _imagesDifference = require(\"./imagesDifference\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Detects and highlights the changes of two images\n * according to the given threshold\n *\n * @param {RgbaImageBuffer} firstImgBuffer First image\n * @param {RgbaImageBuffer} secondImgBuffer Second image\n * @param {Number} threshold Threshold for considering a change as a important change\n * @param {Object} changeHighlightColor Color for highlight pixels considered as a change\n * @returns {RgbaImageBuffer} Changes map\n */\n\n\nvar changesDetection = function changesDetection(firstImgBuffer, secondImgBuffer, threshold, changeHighlightColor) {\n  var difference;\n\n  try {\n    difference = (0, _imagesDifference.imagesDifference)(firstImgBuffer, secondImgBuffer);\n  } catch (error) {\n    if (error.name === \"ImagesDifferenceException\") throw new _exceptions.ImageOperationException(\"ChangesDetectionException\", error.message);else throw error;\n  }\n\n  var result = firstImgBuffer.copy();\n\n  for (var i = 0; i < result.pixels.length; i += _RgbaImageBuffer.default.NUM_CHANNELS) {\n    if (difference.pixels[i] > threshold) {\n      result.pixels[i] = changeHighlightColor.r;\n      result.pixels[i + 1] = changeHighlightColor.g;\n      result.pixels[i + 2] = changeHighlightColor.b;\n    }\n  }\n\n  return result;\n};\n\nexports.changesDetection = changesDetection;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.crop = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"../RgbaImageBuffer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Returns an image buffer of the given region of the given buffer\n *\n * @param {RgbaImageBuffer} imgBuffer Buffer of the image to crop\n * @param {Object} region Region specifying where to crop the given buffer\n * @param {number} region.top Pixel in the y axis where the new image must start\n * @param {number} region.left Pixel in the x axis where the new image must\n * start\n * @param {number} region.height Height of the new image\n * @param {number} region.width Width of the new image\n */\n\n\nvar crop = function crop(imgBuffer) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$top = _ref.top,\n      top = _ref$top === void 0 ? 0 : _ref$top,\n      _ref$left = _ref.left,\n      left = _ref$left === void 0 ? 0 : _ref$left,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? imgBuffer.height : _ref$height,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? imgBuffer.width : _ref$width;\n\n  var resultPixels = new Uint8ClampedArray(height * width * _RgbaImageBuffer.default.NUM_CHANNELS);\n  var currentIndex = 0;\n\n  for (var yOffset = 0; yOffset < height; yOffset += 1) {\n    for (var xOffset = 0; xOffset < width; xOffset += 1) {\n      var pixel = imgBuffer.getPixel({\n        x: left + xOffset,\n        y: top + yOffset\n      });\n      resultPixels[currentIndex] = pixel[0];\n      resultPixels[currentIndex + 1] = pixel[1];\n      resultPixels[currentIndex + 2] = pixel[2];\n      resultPixels[currentIndex + 3] = pixel[3];\n      currentIndex += _RgbaImageBuffer.default.NUM_CHANNELS;\n    }\n  }\n\n  return new _RgbaImageBuffer.default(width, height, resultPixels);\n};\n\nexports.crop = crop;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.gammaCorrection = gammaCorrection;\n\nvar _transformImage = require(\"./transformImage\");\n\nvar _exceptions = require(\"../exceptions\");\n/**\n * Applies gamma correction to the given image\n *\n * @param {RgbaImageBuffer} imgBuffer Image to transform\n * @param {number} gammaValue Gamma value for gamma correction\n * @returns {RgbaImageBuffer} Transformed image\n */\n\n\nfunction gammaCorrection(imgBuffer, gammaValue) {\n  if (gammaValue < 0) {\n    throw new _exceptions.ImageOperationException(\"GammaCorrectionException\", \"Invalid gamma value, gamma should be equal or greater than 0.\");\n  } // The gamma operation needs to be applied to each color dimension normalized\n  // in a range [0,1] (at least in the case of RGB)\n\n\n  var correctDim = function correctDim() {\n    return function (value) {\n      return Math.pow(value / 255, gammaValue) * 255;\n    };\n  };\n\n  var lookupTable = (0, _transformImage.createLookupTable)(correctDim);\n  return (0, _transformImage.applyLookupTable)(imgBuffer, lookupTable);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.grayscaleStrategies = exports.imageToGrayscale = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"../RgbaImageBuffer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Returns the given pixels converted to grayscale, according to the given\n * grayscale strategy\n *\n * @param {RgbaImageBuffer} imgBuffer Image Buffer base to create the grayscale\n * image from\n * @param {Function} grayscaleStrategy Method used to convert to grayscale.\n * Defaults to Phase Alternating Line\n * @returns {RgbaImageBuffer} Image buffer in grayscale\n */\n\n\nvar imageToGrayscale = function imageToGrayscale(imgBuffer) {\n  var grayscaleStrategy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : pixelToGrayscalePal;\n  var result = imgBuffer.copy();\n\n  for (var i = 0; i < result.pixels.length; i += _RgbaImageBuffer.default.NUM_CHANNELS) {\n    var rComponent = imgBuffer.pixels[i];\n    var gComponent = imgBuffer.pixels[i + 1];\n    var bComponent = imgBuffer.pixels[i + 2];\n    var grayValue = grayscaleStrategy(rComponent, gComponent, bComponent);\n    result.pixels[i] = grayValue;\n    result.pixels[i + 1] = grayValue;\n    result.pixels[i + 2] = grayValue;\n  }\n\n  return result;\n};\n/** Returns the given pixel to grayscale according to Phase Alternating Line */\n\n\nexports.imageToGrayscale = imageToGrayscale;\n\nvar pixelToGrayscalePal = function pixelToGrayscalePal(rComponent, gComponent, bComponent) {\n  return Math.round(rComponent * 0.222 + gComponent * 0.707 + bComponent * 0.071);\n};\n\nvar grayscaleStrategies = {\n  pixelToGrayscalePal: pixelToGrayscalePal\n};\nexports.grayscaleStrategies = grayscaleStrategies;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.histogramEqualization = histogramEqualization;\n\nvar _transformImage = require(\"./transformImage\");\n/**\n * Applies histogram equalization operation to the given image.\n *\n * @param {RgbaImageBuffer} imgBuffer Image to transform\n * @param {CumulativeHistogram} imageCHistogram Cumulative histogram of the image\n * @returns {RgbaImageBuffer} Transformed image\n */\n\n\nfunction histogramEqualization(imgBuffer, imageInfo) {\n  var lookupTable = (0, _transformImage.createLookupTable)(function (dim) {\n    var equalizationLevel = imageInfo.pixelCount / 256;\n    return function (value) {\n      var accumulatedValue = imageInfo.cumulativeHistograms[dim][value];\n      var equalizedValue = Math.round(accumulatedValue / equalizationLevel);\n      return Math.max(0, equalizedValue - 1);\n    };\n  });\n  return (0, _transformImage.applyLookupTable)(imgBuffer, lookupTable);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.histogramSpecification = histogramSpecification;\n\nvar _transformImage = require(\"./transformImage\");\n/**\n * Applies histogram specification operation to the given image.\n * It expects the image to transform, its cumulative histogram\n * and the cumulative histogram of the target image.\n *\n * @param {RgbaImageBuffer} imgBuffer Image to transform\n * @param {CumulativeHistogram} originImageCHistogram Cumulative histogram of imgBuffer\n * @param {CumulativeHistogram} targetImageCHistogram Cumulative histogram of target image\n * @returns {RgbaImageBuffer} Transformed image\n */\n\n\nfunction histogramSpecification(imgBuffer, srcImgInfo, targetImgInfo) {\n  // Normalized the cumulative histograms so we can work with images of\n  // different sizes\n  var srcCHistos = srcImgInfo.cumulativeHistograms.map(function (cHisto) {\n    return cHisto.map(function (count) {\n      return count / srcImgInfo.pixelCount;\n    });\n  });\n  var targetCHistos = targetImgInfo.cumulativeHistograms.map(function (cHisto) {\n    return cHisto.map(function (count) {\n      return count / targetImgInfo.pixelCount;\n    });\n  });\n  var lookupTable = (0, _transformImage.createLookupTable)(function (dim) {\n    return function (value) {\n      var j = 255;\n\n      while (j >= 0 && srcCHistos[dim][value] <= targetCHistos[dim][j]) {\n        j -= 1;\n      }\n\n      return j;\n    };\n  });\n  return (0, _transformImage.applyLookupTable)(imgBuffer, lookupTable);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.imageResampling = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"../RgbaImageBuffer\"));\n\nvar _exceptions = require(\"../exceptions\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Applies resampling operation to the given image\n *\n * @param {RgbaImageBuffer} imgBuffer Image to transform\n * @param {Number} blockWidth Width of the pixels block to resample the image\n * @param {Number} blockHeight Height of the pixels block to resample the image\n * @returns {RgbaImageBuffer} Transformed image\n */\n\n\nvar imageResampling = function imageResampling(imgBuffer, blockWidth, blockHeight) {\n  if (blockWidth < 1 || blockWidth > imgBuffer.width) throw new _exceptions.ImageOperationException(\"ImageResamplingException\", \"Invalid block width value, block width should be greater than 0 and less or equal than image width.\");\n  if (blockHeight < 1 || blockHeight > imgBuffer.height) throw new _exceptions.ImageOperationException(\"ImageResamplingException\", \"Invalid block height value, block height should be greater than 0 and less or equal than image height.\");\n  var resultPixels = new Uint8ClampedArray(imgBuffer.width * imgBuffer.height * _RgbaImageBuffer.default.NUM_CHANNELS);\n  var initialY = 0;\n  var initialX;\n\n  while (initialY + blockHeight <= imgBuffer.height) {\n    initialX = 0;\n\n    while (initialX + blockWidth <= imgBuffer.width) {\n      resampleBlock(imgBuffer, resultPixels, initialX, initialY, initialX + blockWidth, initialY + blockHeight);\n      initialX = initialX + blockWidth;\n    } //Residual X\n\n\n    resampleBlock(imgBuffer, resultPixels, initialX, initialY, imgBuffer.width, initialY + blockHeight);\n    initialY = initialY + blockHeight;\n  }\n\n  initialX = 0;\n\n  while (initialX + blockWidth <= imgBuffer.width) {\n    // Residual Y\n    resampleBlock(imgBuffer, resultPixels, initialX, initialY, initialX + blockWidth, imgBuffer.height);\n    initialX = initialX + blockWidth;\n  } // Residual X and Y\n\n\n  resampleBlock(imgBuffer, resultPixels, initialX, initialY, imgBuffer.width, imgBuffer.height);\n  return new _RgbaImageBuffer.default(imgBuffer.width, imgBuffer.height, resultPixels);\n};\n/**\n * Resamples the given block of the given image\n *\n * @param {RgbaImageBuffer} imgBuffer Image which contains the block\n * @param {Array} pixels Result of resampling the given block\n * @param {Number} initialX X axis position of the upper left corner of the block\n * @param {Number} initialY Y axis position of the upper left corner of the block\n * @param {Number} xLimit X axis position of the lower right corner of the block\n * @param {Number} yLimit Y axis position of the lower right corner of the block\n */\n\n\nexports.imageResampling = imageResampling;\n\nvar resampleBlock = function resampleBlock(imgBuffer, pixels, initialX, initialY, xLimit, yLimit) {\n  var sum = [0, 0, 0, 0];\n  var count = 0;\n  var index; // New value calc\n\n  for (var y = initialY; y < yLimit; ++y) {\n    for (var x = initialX; x < xLimit; ++x) {\n      for (var i = 0; i < _RgbaImageBuffer.default.NUM_CHANNELS; ++i) {\n        sum[i] = sum[i] + imgBuffer.getPixel({\n          x: x,\n          y: y\n        })[i];\n      }\n\n      count = count + 1;\n    }\n  }\n\n  var newValues = sum.map(function (value) {\n    return value / count;\n  }); // Block resampling\n\n  for (var _y = initialY; _y < yLimit; ++_y) {\n    for (var _x = initialX; _x < xLimit; ++_x) {\n      index = (_y * imgBuffer.width + _x) * _RgbaImageBuffer.default.NUM_CHANNELS;\n      pixels[index] = newValues[0];\n      pixels[index + 1] = newValues[1];\n      pixels[index + 2] = newValues[2];\n      pixels[index + 3] = newValues[3];\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.imageResizing = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"../RgbaImageBuffer\"));\n\nvar _exceptions = require(\"../exceptions\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Returns the image buffer resulting of resizing the given image buffer.\n *\n * @param {RgbaImageBuffer} imgBuffer Buffer of the image to resize\n * @param {Number} widthPercentage Resizing parameter\n * @param {Number} heightPercentage Resizing parameter\n * @param {Function} interpolationMethod Interpolation method to calculate the\n * possible new lightness values obtained after applying the geometric operation\n */\n\n\nvar imageResizing = function imageResizing(imgBuffer, widthPercentage, heighPercentage, interpolationMethod) {\n  var oldWidth = imgBuffer.width;\n  var oldHeight = imgBuffer.height;\n  var widthFactor = widthPercentage / 100;\n  var heightFactor = heighPercentage / 100;\n  var newWidth = Math.floor(oldWidth * widthFactor);\n  var newHeight = Math.floor(oldHeight * heightFactor);\n\n  if (newWidth < 1) {\n    throw new _exceptions.ImageOperationException(\"ImageResizingException\", \"Width of the resized image is too small.\");\n  }\n\n  if (newHeight < 1) {\n    throw new _exceptions.ImageOperationException(\"ImageResizingException\", \"Height of the resized image is too small.\");\n  }\n\n  var inverseTransformation = function inverseTransformation(xCoord, yCoord) {\n    return {\n      x: xCoord / widthFactor,\n      y: yCoord / heightFactor\n    };\n  };\n\n  var resultPixels = new Uint8ClampedArray(newWidth * newHeight * _RgbaImageBuffer.default.NUM_CHANNELS);\n  var transformedCoords;\n  var currentIndex = 0;\n\n  for (var j = 0; j < newHeight; ++j) {\n    for (var i = 0; i < newWidth; ++i) {\n      transformedCoords = inverseTransformation(i, j);\n      var newValues = interpolationMethod(transformedCoords.x, transformedCoords.y, imgBuffer);\n      resultPixels[currentIndex] = Math.round(newValues[0]);\n      resultPixels[currentIndex + 1] = Math.round(newValues[1]);\n      resultPixels[currentIndex + 2] = Math.round(newValues[2]);\n      resultPixels[currentIndex + 3] = Math.round(newValues[3]);\n      currentIndex += _RgbaImageBuffer.default.NUM_CHANNELS;\n    }\n  }\n\n  return new _RgbaImageBuffer.default(newWidth, newHeight, resultPixels);\n};\n\nexports.imageResizing = imageResizing;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.imageRotation = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"../RgbaImageBuffer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Returns whether the given value is in range [min, max).\n * That is min <= value < max;\n */\n\n\nvar isInRange = function isInRange(value, min, max) {\n  return value >= min && value < max;\n};\n/**\n * Returns the image buffer resulting of rotating the given image buffer.\n * If the rotateAndPaintRotation flag is set to false, the transparent\n * pixels of the resulting image will be filled. The given interpolation\n * method will calculate the values of the new pixels.\n *\n * @param {RgbaImageBuffer} imgBuffer Buffer of the image to rotate\n * @param {Number} degrees Rotation parameter\n * @param {Function} interpolationMethod Interpolation method to calculate the\n * possible new lightness values obtained after applying the geometric operation\n * @param {Boolean} rotateAndPaintRotation Establishes the nature of the rotation\n */\n\n\nvar imageRotation = function imageRotation(imgBuffer, degrees, interpolationMethod, rotateAndPaintRotation) {\n  var width = imgBuffer.width;\n  var height = imgBuffer.height;\n  var radians = degrees * (Math.PI / 180);\n\n  var directTransformation = function directTransformation(xCoord, yCoord) {\n    return {\n      x: Math.cos(radians) * xCoord - Math.sin(radians) * yCoord,\n      y: Math.sin(radians) * xCoord + Math.cos(radians) * yCoord\n    };\n  };\n\n  var newImageInfo = getRotatedImageInfo(width, height, directTransformation);\n\n  if (rotateAndPaintRotation) {\n    return rotateAndPaint(imgBuffer, directTransformation, newImageInfo);\n  }\n\n  var inverseTransformation = function inverseTransformation(xCoord, yCoord) {\n    return {\n      x: Math.cos(-radians) * xCoord - Math.sin(-radians) * yCoord,\n      y: Math.sin(-radians) * xCoord + Math.cos(-radians) * yCoord\n    };\n  };\n\n  var resultPixels = new Uint8ClampedArray(newImageInfo.width * newImageInfo.height * _RgbaImageBuffer.default.NUM_CHANNELS);\n  var transformedCoords;\n  var currentIndex = 0;\n\n  for (var j = 0; j < newImageInfo.height; ++j) {\n    for (var i = 0; i < newImageInfo.width; ++i) {\n      transformedCoords = inverseTransformation(i + newImageInfo.minXCoord, j + newImageInfo.minYCoord);\n\n      if (isInRange(Math.round(transformedCoords.x), 0, width + 1) && isInRange(Math.round(transformedCoords.y), 0, height + 1)) {\n        var newValues = interpolationMethod(transformedCoords.x, transformedCoords.y, imgBuffer);\n        resultPixels[currentIndex] = Math.round(newValues[0]);\n        resultPixels[currentIndex + 1] = Math.round(newValues[1]);\n        resultPixels[currentIndex + 2] = Math.round(newValues[2]);\n        resultPixels[currentIndex + 3] = Math.round(newValues[3]);\n      } else {\n        // Background pixel\n        resultPixels[currentIndex] = 0; // R channel\n\n        resultPixels[currentIndex + 1] = 0; // G channel\n\n        resultPixels[currentIndex + 2] = 0; // B channel\n\n        resultPixels[currentIndex + 3] = 0; // A channel\n      }\n\n      currentIndex += _RgbaImageBuffer.default.NUM_CHANNELS;\n    }\n  }\n\n  return new _RgbaImageBuffer.default(newImageInfo.width, newImageInfo.height, resultPixels);\n};\n/**\n * Returns the image buffer resulting of rotating the given image buffer.\n * It may contain transparent pixels due to the nature of this rotation\n * process, the inverse tranformation it isn't used.\n *\n * @param {RgbaImageBuffer} imgBuffer Buffer of the image to rotate\n * @param {Function} directTransformation Maps the old image pixels\n * positions to the new one positions\n * @param {Object} newImageInfo Contains relevant information about\n * the resulting image\n */\n\n\nexports.imageRotation = imageRotation;\n\nvar rotateAndPaint = function rotateAndPaint(imgBuffer, directTransformation, newImageInfo) {\n  var resultPixels = new Uint8ClampedArray(newImageInfo.width * newImageInfo.height * _RgbaImageBuffer.default.NUM_CHANNELS);\n  var transformedCoords;\n  var currentIndex;\n  var originalImagePixel;\n\n  for (var j = 0; j < imgBuffer.height; ++j) {\n    for (var i = 0; i < imgBuffer.width; ++i) {\n      transformedCoords = directTransformation(i, j);\n      currentIndex = (Math.round(transformedCoords.y - newImageInfo.minYCoord) * newImageInfo.width + Math.round(transformedCoords.x - newImageInfo.minXCoord)) * _RgbaImageBuffer.default.NUM_CHANNELS; // TODO: colored images\n      // For now we assume we are operating with grayscale images\n\n      originalImagePixel = imgBuffer.getPixel({\n        x: i,\n        y: j\n      });\n      resultPixels[currentIndex] = originalImagePixel[0]; // R channel\n\n      resultPixels[currentIndex + 1] = originalImagePixel[1]; // G channel\n\n      resultPixels[currentIndex + 2] = originalImagePixel[2]; // B channel\n\n      resultPixels[currentIndex + 3] = originalImagePixel[3]; // A channel\n    }\n  }\n\n  return new _RgbaImageBuffer.default(newImageInfo.width, newImageInfo.height, resultPixels);\n};\n/**\n * Returns information about the rotated image.\n *\n * @param {Number} width Width of the image to rotate\n * @param {Number} height Height of the image to rotate\n * @param {Function} directTransformation Needed to calculate the new dimensions\n */\n\n\nvar getRotatedImageInfo = function getRotatedImageInfo(width, height, directTransformation) {\n  var upperLeftCornerRotated = directTransformation(0, 0);\n  var lowerLeftCornerRotated = directTransformation(0, height);\n  var upperRightCornerRotated = directTransformation(width, 0);\n  var lowerRightCornerRotated = directTransformation(width, height);\n  var maxXCoord = Math.max(upperLeftCornerRotated.x, lowerLeftCornerRotated.x, upperRightCornerRotated.x, lowerRightCornerRotated.x);\n  var minXCoord = Math.min(upperLeftCornerRotated.x, lowerLeftCornerRotated.x, upperRightCornerRotated.x, lowerRightCornerRotated.x);\n  var maxYCoord = Math.max(upperLeftCornerRotated.y, lowerLeftCornerRotated.y, upperRightCornerRotated.y, lowerRightCornerRotated.y);\n  var minYCoord = Math.min(upperLeftCornerRotated.y, lowerLeftCornerRotated.y, upperRightCornerRotated.y, lowerRightCornerRotated.y);\n  return {\n    width: Math.floor(Math.abs(maxXCoord - minXCoord)),\n    height: Math.floor(Math.abs(maxYCoord - minYCoord)),\n    minXCoord: minXCoord,\n    minYCoord: minYCoord\n  };\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.imageTranspose = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"../RgbaImageBuffer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Applies image transpose operation to the given image.\n *\n * @param {RgbaImageBuffer} imgBuffer Image to transform\n * @returns {RgbaImageBuffer} Transformed image\n */\n\n\nvar imageTranspose = function imageTranspose(imgBuffer) {\n  var height = imgBuffer.width;\n  var width = imgBuffer.height;\n  var resultPixels = new Uint8ClampedArray(width * height * _RgbaImageBuffer.default.NUM_CHANNELS);\n  var currentIndex = 0;\n  var originalImagePixel;\n\n  for (var j = 0; j < height; ++j) {\n    for (var i = 0; i < width; ++i) {\n      originalImagePixel = imgBuffer.getPixel({\n        x: j,\n        y: i\n      });\n      resultPixels[currentIndex] = originalImagePixel[0]; // R channel\n\n      resultPixels[currentIndex + 1] = originalImagePixel[1]; // G channel\n\n      resultPixels[currentIndex + 2] = originalImagePixel[2]; // B channel\n\n      resultPixels[currentIndex + 3] = originalImagePixel[3]; // A channel\n\n      currentIndex += _RgbaImageBuffer.default.NUM_CHANNELS;\n    }\n  }\n\n  return new _RgbaImageBuffer.default(width, height, resultPixels);\n};\n\nexports.imageTranspose = imageTranspose;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.interpolationMethods = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"../RgbaImageBuffer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Returns the light value of the closest pixel of the given coordinates.\n */\n\n\nvar closestNeighbourInterpolation = function closestNeighbourInterpolation(xCoord, yCoord, imgBuffer) {\n  return imgBuffer.getPixel({\n    x: Math.round(xCoord),\n    y: Math.round(yCoord)\n  });\n};\n/**\n * Returns the light value of the given coordinates assuming that the light\n * values of the closest pixels vary linearly.\n */\n\n\nvar bilinearInterpolation = function bilinearInterpolation(xCoord, yCoord, imgBuffer) {\n  var A = imgBuffer.getPixel({\n    x: Math.floor(xCoord),\n    y: Math.ceil(yCoord)\n  });\n  var B = imgBuffer.getPixel({\n    x: Math.ceil(xCoord),\n    y: Math.ceil(yCoord)\n  });\n  var C = imgBuffer.getPixel({\n    x: Math.floor(xCoord),\n    y: Math.floor(yCoord)\n  });\n  var D = imgBuffer.getPixel({\n    x: Math.ceil(xCoord),\n    y: Math.floor(yCoord)\n  });\n  var p = xCoord - Math.floor(xCoord);\n  var q = yCoord - Math.floor(yCoord);\n  var transform = [];\n\n  for (var i = 0; i < _RgbaImageBuffer.default.NUM_CHANNELS; ++i) {\n    transform[i] = C[i] + (D[i] - C[i]) * p + (A[i] - C[i]) * q + (B[i] + C[i] - A[i] - D[i]) * p * q;\n  }\n\n  return transform;\n};\n\nvar interpolationMethods = {\n  closestNeighbourInterpolation: closestNeighbourInterpolation,\n  bilinearInterpolation: bilinearInterpolation\n};\nexports.interpolationMethods = interpolationMethods;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.linearTransformation = linearTransformation;\n\nvar _transformImage = require(\"./transformImage\");\n\nvar _exceptions = require(\"../exceptions\");\n\nfunction linearTransformation(imgBuffer, points) {\n  console.log({\n    imgBuffer: imgBuffer,\n    points: points\n  });\n  validatePoints(points, imgBuffer);\n  var sections = points.map(extractSections);\n  var lookupTable = (0, _transformImage.createLookupTable)(function (dim) {\n    var currentSections = sections[dim];\n    var currentSectionIndex = 0;\n    return function (value) {\n      var _currentSections$curr = currentSections[currentSectionIndex],\n          frontier = _currentSections$curr.frontier,\n          slope = _currentSections$curr.slope,\n          yIntercept = _currentSections$curr.yIntercept;\n\n      if (value > frontier) {\n        currentSectionIndex += 1;\n      }\n\n      var newValue = Math.round(slope * value + yIntercept);\n      var newValueClipped = Math.min(Math.max(newValue, 0), 255);\n      return newValueClipped;\n    };\n  });\n  return (0, _transformImage.applyLookupTable)(imgBuffer, lookupTable);\n}\n\nfunction validatePoints(points) {\n  if (points.length !== 3) {\n    throw new _exceptions.ImageOperationException(\"LinearTransformationException\", \"Linear transformation needs 3 sets of points, one for each color dimension\");\n  }\n\n  points.forEach(function (points, dim) {\n    if (points.length < 2) {\n      throw new _exceptions.ImageOperationException(\"LinearTransformationException\", \"Linear transformation needs at least 2 points for each dimension. Color dimension number \".concat(dim, \" has \").concat(points.length));\n    }\n\n    for (var i = 0; i < points.length - 1; ++i) {\n      var current = points[i];\n      var next = points[i + 1];\n\n      if (current.x > next.x) {\n        throw new _exceptions.ImageOperationException(\"LinearTransformationException\", \"Points must be ordered according to the x coordinate value\");\n      }\n\n      if (current.x === next.x) {\n        throw new _exceptions.ImageOperationException(\"LinearTransformationException\", \"Different points should not have the same x coordinate value\");\n      }\n    }\n\n    if (points[0].x > 0) {\n      throw new _exceptions.ImageOperationException(\"LinearTransformationException\", \"X coordinate value of the first point should be less or equal to 0 for the color dimension number \".concat(dim));\n    }\n\n    if (points[points.length - 1].x < 255) {\n      throw new _exceptions.ImageOperationException(\"LinearTransformationException\", \"X coordinate value of the last point should be greater or equal to 255 for the color dimension number \".concat(dim));\n    }\n  });\n}\n\nfunction extractSections(points) {\n  var sections = [];\n\n  for (var i = 1; i < points.length; ++i) {\n    var current = points[i];\n    var prev = points[i - 1];\n    var slope = (current.y - prev.y) / (current.x - prev.x);\n    var yIntercept = current.y - slope * current.x;\n    var frontier = current.x;\n    sections.push({\n      slope: slope,\n      yIntercept: yIntercept,\n      frontier: frontier\n    });\n  }\n\n  return sections;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mirror = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"../RgbaImageBuffer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Applies horizontal mirror operation to the given image.\n *\n * @param {RgbaImageBuffer} imgBuffer Image to transform\n * @returns {RgbaImageBuffer} Transformed image\n */\n\n\nvar horizontalMirror = function horizontalMirror(imgBuffer) {\n  var width = imgBuffer.width;\n  var height = imgBuffer.height;\n  var resultPixels = new Uint8ClampedArray(width * height * _RgbaImageBuffer.default.NUM_CHANNELS);\n  var currentIndex = 0;\n  var originalImagePixel;\n\n  for (var j = height - 1; j >= 0; --j) {\n    for (var i = 0; i < width; ++i) {\n      originalImagePixel = imgBuffer.getPixel({\n        x: i,\n        y: j\n      });\n      resultPixels[currentIndex] = originalImagePixel[0]; // R channel\n\n      resultPixels[currentIndex + 1] = originalImagePixel[1]; // G channel\n\n      resultPixels[currentIndex + 2] = originalImagePixel[2]; // B channel\n\n      resultPixels[currentIndex + 3] = originalImagePixel[3]; // A channel\n\n      currentIndex += _RgbaImageBuffer.default.NUM_CHANNELS;\n    }\n  }\n\n  return new _RgbaImageBuffer.default(width, height, resultPixels);\n};\n/**\n * Applies vertical mirror operation to the given image.\n *\n * @param {RgbaImageBuffer} imgBuffer Image to transform\n * @returns {RgbaImageBuffer} Transformed image\n */\n\n\nvar verticalMirror = function verticalMirror(imgBuffer) {\n  var width = imgBuffer.width;\n  var height = imgBuffer.height;\n  var resultPixels = new Uint8ClampedArray(width * height * _RgbaImageBuffer.default.NUM_CHANNELS);\n  var currentIndex = 0;\n  var originalImagePixel;\n\n  for (var j = 0; j < height; ++j) {\n    for (var i = width - 1; i >= 0; --i) {\n      originalImagePixel = imgBuffer.getPixel({\n        x: i,\n        y: j\n      });\n      resultPixels[currentIndex] = originalImagePixel[0]; // R channel\n\n      resultPixels[currentIndex + 1] = originalImagePixel[1]; // G channel\n\n      resultPixels[currentIndex + 2] = originalImagePixel[2]; // B channel\n\n      resultPixels[currentIndex + 3] = originalImagePixel[3]; // A channel\n\n      currentIndex += _RgbaImageBuffer.default.NUM_CHANNELS;\n    }\n  }\n\n  return new _RgbaImageBuffer.default(width, height, resultPixels);\n};\n\nvar mirror = {\n  horizontal: horizontalMirror,\n  vertical: verticalMirror\n};\nexports.mirror = mirror;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.quantization = void 0;\n\nvar _transformImage = require(\"./transformImage\");\n\nvar _exceptions = require(\"../exceptions\");\n/**\n * Applies quantization to the given image according to the given\n * amount of levels\n *\n * @param {RgbaImageBuffer} imgBuffer Image to transform\n * @param {Number} amountOfLevels Amount of bits to represent each value of light\n * @returns {RgbaImageBuffer} Transformed image\n */\n\n\nvar quantization = function quantization(imgBuffer, amountOfLevels) {\n  if (amountOfLevels < 0 || amountOfLevels > 8) throw new _exceptions.ImageOperationException(\"QuantizationException\", \"Invalid amount of levels, the amount should be equal or greater than 0 and equal or less than 8.\");\n  if (!Number.isInteger(amountOfLevels)) throw new _exceptions.ImageOperationException(\"QuantizationException\", \"Invalid amount of levels, the value should be an integer number.\");\n  if (amountOfLevels === 8) return imgBuffer;\n  var newValues = [0];\n\n  if (amountOfLevels > 1) {\n    var part = 256 / (Math.pow(2, amountOfLevels) - 1);\n\n    while (newValues[newValues.length - 1] + part < 255) {\n      newValues.push(newValues[newValues.length - 1] + part);\n    }\n  }\n\n  newValues = newValues.map(function (value) {\n    return Math.round(value);\n  });\n\n  if (amountOfLevels > 0) {\n    newValues.push(255);\n  }\n\n  var lookupTable = (0, _transformImage.createLookupTable)(function () {\n    var index;\n    return function (value) {\n      var minDistance = Number.POSITIVE_INFINITY;\n\n      for (var j = 0; j < newValues.length; ++j) {\n        var distance = Math.abs(value - newValues[j]);\n\n        if (distance < minDistance) {\n          index = j;\n          minDistance = distance;\n        }\n      }\n\n      return newValues[index];\n    };\n  });\n  return (0, _transformImage.applyLookupTable)(imgBuffer, lookupTable);\n};\n\nexports.quantization = quantization;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.imageToSepia = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"../RgbaImageBuffer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Returns the given pixels converted to sepia\n *\n * @param {RgbaImageBuffer} imgBuffer Image Buffer base to create the sepia\n * image from\n * @returns {RgbaImageBuffer} Image buffer with sepia effect\n */\n\n\nvar imageToSepia = function imageToSepia(imgBuffer) {\n  var result = imgBuffer.copy();\n\n  for (var i = 0; i < result.pixels.length; i += _RgbaImageBuffer.default.NUM_CHANNELS) {\n    var redValue = imgBuffer.pixels[i];\n    var greenValue = imgBuffer.pixels[i + 1];\n    var blueValue = imgBuffer.pixels[i + 2];\n    result.pixels[i] = Math.min(redValue * 0.393 + greenValue * 0.769 + blueValue * 0.189, 255);\n    result.pixels[i + 1] = Math.min(redValue * 0.349 + greenValue * 0.686 + blueValue * 0.168, 255);\n    result.pixels[i + 2] = Math.min(redValue * 0.272 + greenValue * 0.534 + blueValue * 0.131, 255);\n  }\n\n  return result;\n};\n\nexports.imageToSepia = imageToSepia;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hueRotation = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"../RgbaImageBuffer\"));\n\nvar colorSpaceConversions = _interopRequireWildcard(require(\"../colorSpaceConversions\"));\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Rotates the H channel of the image\n *\n * @param {RgbaImageBuffer} imgBuffer Image Buffer base\n * @param {Number} degrees Amount of degrees for the hue rotation\n * @returns {RgbaImageBuffer} Converted image\n */\n\n\nvar hueRotation = function hueRotation(imgBuffer, degrees) {\n  var result = imgBuffer.copy();\n\n  for (var i = 0; i < result.pixels.length; i += _RgbaImageBuffer.default.NUM_CHANNELS) {\n    var rComponent = imgBuffer.pixels[i];\n    var gComponent = imgBuffer.pixels[i + 1];\n    var bComponent = imgBuffer.pixels[i + 2];\n    var HSLPixel = colorSpaceConversions.RGBToHSL({\n      r: rComponent,\n      g: gComponent,\n      b: bComponent\n    });\n    var newRGBPixel = colorSpaceConversions.HSLToRGB({\n      h: (HSLPixel.h + degrees) % 360,\n      s: HSLPixel.s,\n      l: HSLPixel.l\n    });\n    result.pixels[i] = newRGBPixel.r;\n    result.pixels[i + 1] = newRGBPixel.g;\n    result.pixels[i + 2] = newRGBPixel.b;\n  }\n\n  return result;\n};\n\nexports.hueRotation = hueRotation;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.saturateImage = void 0;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"../RgbaImageBuffer\"));\n\nvar colorSpaceConversions = _interopRequireWildcard(require(\"../colorSpaceConversions\"));\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Saturates the given image\n *\n * @param {RgbaImageBuffer} imgBuffer Image Buffer base\n * @param {Number} saturationPercentage Saturation percentage for the operation\n * @returns {RgbaImageBuffer} Converted image\n */\n\n\nvar saturateImage = function saturateImage(imgBuffer, saturationPercentage) {\n  var result = imgBuffer.copy();\n\n  for (var i = 0; i < result.pixels.length; i += _RgbaImageBuffer.default.NUM_CHANNELS) {\n    var rComponent = imgBuffer.pixels[i];\n    var gComponent = imgBuffer.pixels[i + 1];\n    var bComponent = imgBuffer.pixels[i + 2];\n    var HSLPixel = colorSpaceConversions.RGBToHSL({\n      r: rComponent,\n      g: gComponent,\n      b: bComponent\n    });\n    var newRGBPixel = colorSpaceConversions.HSLToRGB({\n      h: HSLPixel.h,\n      s: HSLPixel.s * saturationPercentage / 100,\n      l: HSLPixel.l\n    });\n    result.pixels[i] = newRGBPixel.r;\n    result.pixels[i + 1] = newRGBPixel.g;\n    result.pixels[i + 2] = newRGBPixel.b;\n  }\n\n  return result;\n};\n\nexports.saturateImage = saturateImage;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} // TODO: pollyfill ImageData constructor\n\n/**\n * Class to represent a RGBA pixel matrix (an image). This class aims to\n * abstract away the pixel related manipulations by providing a set of\n * convenience methods for iterating through pixels.\n */\n\n\nvar RgbaImageBuffer =\n/*#__PURE__*/\nfunction () {\n  _createClass(RgbaImageBuffer, null, [{\n    key: \"fromImageData\",\n\n    /** Number of channels in a RGBA pixel */\n\n    /**\n     * Convenient function to create a RgbaImage instance from an ImageData object\n     * where the width, height are copied but the pixel array is only copied the\n     * references\n     *\n     * @param {ImageData} imgData ImageData instance to create the RgbaImage from\n     * @returns {RgbaImageBuffer} Instance of RgbaImage initialized from the ImgData\n     */\n    value: function fromImageData(_ref) {\n      var width = _ref.width,\n          height = _ref.height,\n          data = _ref.data;\n      return new RgbaImageBuffer(width, height, data);\n    }\n    /**\n     * Convenient function to create an ImageData object from a RgbaImage object\n     *\n     * @param {RgbaImageBuffer} rgbaImage Instance of RgbaImage used to create the\n     * ImageData\n     * @returns {ImageData} ImageData instance with a copy of the width, height\n     * and pixels of the given RgbaImage\n     */\n\n  }, {\n    key: \"toImageData\",\n    value: function toImageData(_ref2) {\n      var width = _ref2.width,\n          height = _ref2.height,\n          pixels = _ref2.pixels;\n      var imgData = new ImageData(width, height);\n      imgData.data.set(pixels);\n      return imgData;\n    }\n    /**\n     * Creates an instance of this class. Note: this treats the given pixels as\n     * RGBA pixels\n     *\n     * @param {number} width Pixel matrix width\n     * @param {number} height Pixel matrix height\n     * @param {Uint8ClampedArray} pixels TypedArray of RGBA Pixels\n     */\n\n  }]);\n\n  function RgbaImageBuffer(width, height, pixels) {\n    var _this = this;\n\n    _classCallCheck(this, RgbaImageBuffer);\n\n    _defineProperty(this, \"toImageData\", function () {\n      return RgbaImageBuffer.toImageData(_this);\n    });\n\n    _defineProperty(this, \"copy\", function () {\n      return new RgbaImageBuffer(_this.width, _this.height, new Uint8ClampedArray(_this.pixels));\n    });\n\n    _defineProperty(this, \"getPixel\", function (_ref3) {\n      var x = _ref3.x,\n          y = _ref3.y;\n      x = Math.max(0, Math.min(_this.width - 1, x));\n      y = Math.max(0, Math.min(_this.height - 1, y));\n\n      var pixelPosition = _this._mapMatrixPositionToArray(x, y); // We tested this way and it turned to be much more performant than using slice\n\n\n      return [_this.pixels[pixelPosition], _this.pixels[pixelPosition + 1], _this.pixels[pixelPosition + 2], _this.pixels[pixelPosition + 3]];\n    });\n\n    _defineProperty(this, \"_mapMatrixPositionToArray\", function (x, y) {\n      return (y * _this.width + x) * RgbaImageBuffer.NUM_CHANNELS;\n    }); // TODO: check that everything is right (width, height > 0; width * height *\n    // rgbaDimension = pixels.length; etc)\n\n\n    this._width = width;\n    this._height = height;\n    this._pixels = pixels;\n  }\n  /** Alias for RgbaImage.toImageData(instanceOfRgbaImage) */\n\n\n  _createClass(RgbaImageBuffer, [{\n    key: \"pixels\",\n\n    /**\n     * @returns {Uint8ClampedArray} Pixels values of the image, an element for\n     * each pixel dimension (4 in case of RGBA for example)\n     */\n    get: function get() {\n      return this._pixels;\n    }\n    /** @returns {number} The width of the image */\n\n  }, {\n    key: \"width\",\n    get: function get() {\n      return this._width;\n    }\n    /** @returns {number} The height of the image */\n\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this._height;\n    }\n    /**\n     * Given a coordinate in matrix space (2 dimensions) this method returns the\n     * corresponding coordinate in vector space (1 dimension).\n     *\n     * @param {number} x Horizontal coordinate\n     * @param {number} y Vertical coordinate\n     * @returns {number} Corresponding vector coordinate\n     */\n\n  }]);\n\n  return RgbaImageBuffer;\n}();\n\nexports.default = RgbaImageBuffer;\n\n_defineProperty(RgbaImageBuffer, \"NUM_CHANNELS\", 4);","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"ImageOperationException\", {\n  enumerable: true,\n  get: function get() {\n    return _ImageOperationException.default;\n  }\n});\n\nvar _ImageOperationException = _interopRequireDefault(require(\"./ImageOperationException\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.applyLookupTable = applyLookupTable;\nexports.createLookupTable = createLookupTable;\n\nvar _RgbaImageBuffer = _interopRequireDefault(require(\"../RgbaImageBuffer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Returns a new RgbaImageBuffer resulting from applying the given lookup table\n * to the given image buffer.\n *\n * @param {RgbaImageBuffer} imgBuffer The image buffer to apply the lookup table\n * to\n * @param {number[][]} lookupTables The expected lookup table has the same shape\n * as the one returned by `createLookupTable`, i.e. for each dimension an array\n * that represents the mapping from one color value to a color value\n * @returns {RgbaImageBuffer} A new ImageBuffer resulting from applying the\n * lookup table to the given image buffer\n */\n\n\nfunction applyLookupTable(imgBuffer, lookupTables) {\n  var result = imgBuffer.copy();\n\n  for (var i = 0; i < result.pixels.length; i += _RgbaImageBuffer.default.NUM_CHANNELS) {\n    result.pixels[i] = lookupTables[0][result.pixels[i]];\n    result.pixels[i + 1] = lookupTables[1][result.pixels[i + 1]];\n    result.pixels[i + 2] = lookupTables[2][result.pixels[i + 2]];\n  }\n\n  return result;\n}\n/**\n * Creates a lookup table. A lookup table is a data structure that holds a\n * mapping from color value to color value. It is used to perform point\n * operations because it allows to perform the operation for each possible color\n * value instead of doing it for each value in an image. This allows a\n * performance boost because the number of possible color values in a dimension\n * are very few compared to the number of values that an image may have, even\n * for small sized images.\n *\n * The lookup table created with this function is done by iterating, for each\n * dimension, from the minimum value to the maximum value incrementing one by\n * one.\n *\n * @param {function(number): (function(number): number)} dimMapper A function\n * that is called for each color dimension with the current dimension index. It\n * is expected that it returns the function that will be called for each color\n * value of the respective dimension to construct the lookup table.\n * @returns {number[][]} The lookup table: for each dimension an array going\n * from the minimum value of that dimension to the maximum that represents the\n * mapping of the point operation\n */\n\n\nfunction createLookupTable(dimMapper) {\n  var lookupTables = [];\n\n  for (var dim = 0; dim < 3; ++dim) {\n    var pixelMapper = dimMapper(dim);\n    var currentLookupTable = [];\n\n    for (var value = 0; value <= 255; ++value) {\n      var mappedValue = pixelMapper(value);\n      currentLookupTable.push(mappedValue);\n    }\n\n    lookupTables.push(currentLookupTable);\n  }\n\n  return lookupTables;\n}","/**\n * Object defining the constants properties of the Grids\n */\nexport default {\n  GRID_COLUMNS: { lg: 10, md: 8, sm: 6, xs: 4, xxs: 2 },\n  LAYOUT_BREAKPOINTS: { lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 },\n  DEFAULT_GRID_ITEM_COLS: 2, // Number of columns each item is tall on creation\n  DEFAULT_GRID_ITEM_ROWS: 4, // Number of rows each item is wide on creation\n  GRID_ITEM_ROW_HEIGHT: 50 // Height in number pixels of each row\n};","import React from \"react\";\nimport { WidthProvider, Responsive } from \"react-grid-layout\";\nimport GRID_PROPERTIES from \"../../../lib/grid/gridProperties\";\n\nconst ResponsiveGrid = WidthProvider(Responsive);\n\n/**\n * react-grid-layout responsive grid with some default props given as defined in\n * gridProperties: cols, breakpoints and rowHeight\n */\nconst Grid = ({ children, ...props }) => {\n  return (\n    <ResponsiveGrid\n      cols={GRID_PROPERTIES.GRID_COLUMNS}\n      breakpoints={GRID_PROPERTIES.LAYOUT_BREAKPOINTS}\n      rowHeight={GRID_PROPERTIES.GRID_ITEM_ROW_HEIGHT}\n      {...props}\n    >\n      {children}\n    </ResponsiveGrid>\n  );\n};\n\nGrid.propTypes = ResponsiveGrid.propTypes;\nGrid.defaultProps = { layouts: {}, ...ResponsiveGrid.defaultProps };\n\nexport default Grid;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./DeleteButton.css\";\n\n/**\n * Delete button component. Renders a circular button with a\n * cross to let the user know that they can delete something.\n *\n * The parent component is notified when the user wants to\n * delete via the `onDelete` prop. If `onDelete` is not\n * provided, the button will be rendered as a disabled button\n */\nconst DeleteButton = ({ onDelete, ...props }) => (\n  <button\n    className=\"DeleteButton\"\n    onClick={onDelete}\n    onTouchEnd={onDelete}\n    disabled={!onDelete}\n    aria-label=\"delete\"\n    {...props}\n  >\n    ×\n  </button>\n);\n\nDeleteButton.propTypes = {\n  onDelete: PropTypes.func\n};\n\nDeleteButton.defaultProps = {\n  onDelete: null\n};\n\nexport default DeleteButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DeleteButton from \"../../DeleteButton\";\nimport \"./Item.css\";\n\n/**\n * Helper method to prevent the default behaviour and stop the propagation of an\n * event. This is to avoid the point events propagation down to the rest of the\n * item and thus just apply the event listener to the element that received the\n * pointer event\n */\nconst stopEvent = event => {\n  event.preventDefault();\n  event.stopPropagation();\n};\n\n/**\n * Grid Item component. Forces grid items to be draggable only by a toolbar at\n * the top and also allows to listen to delete events (renders a delete button\n * and the event fires when the user wants to delete the item). It can also\n * notifiy when the user selects and deselects this component via props\n */\nexport default class Item extends React.Component {\n  /** The rest of the props are provided by the grid */\n  static propTypes = {\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n      PropTypes.symbol,\n      PropTypes.object\n    ]).isRequired,\n    name: PropTypes.string,\n    onDelete: PropTypes.func,\n    onSelect: PropTypes.func,\n    isSelected: PropTypes.bool\n  };\n\n  static defaultProps = {\n    name: \"\",\n    onDelete: null,\n    onSelect: null,\n    onDeselect: null,\n    isSelected: false\n  };\n\n  /** We only want to allow the item being drag when the user is trying to drag\n   * it from a part of the item, a toolbar at the top */\n  state = {\n    isDraggable: false\n  };\n\n  /**\n   * Listen for document mouse up event so we can react to it even if the users\n   * triggers it out of this element\n   */\n  componentDidMount() {\n    document.addEventListener(\"mouseup\", this.onDragHandleMouseUp);\n    document.addEventListener(\"touchend\", this.onDragHandleMouseUp);\n  }\n\n  /**\n   * Clean the mouse up listener from the document when the component will be\n   * unmounted\n   */\n  componentWillUnmount() {\n    document.removeEventListener(\"mouseup\", this.onDragHandleMouseUp);\n    document.removeEventListener(\"touchend\", this.onDragHandleMouseUp);\n  }\n\n  /** Update the state to allow the item be dragged only when the user is\n   * clicking on the top toolbar */\n  onDragHandleMouseDown = () => this.setState({ isDraggable: true });\n\n  /** Update the state to forbid the item being dragged when the user stops\n   * clicking the top toolbar. This listener is attached to the document so it\n   * works even if the user drags the element out of the viewport and releses\n   * the mouse there */\n  onDragHandleMouseUp = () =>\n    this.state.isDraggable &&\n    this.setState({\n      isDraggable: false\n    });\n\n  /** Listener for the drag start event, but only allow the drag behaviour if\n   * the state says so */\n  onDragStart = event => {\n    if (this.state.isDraggable) {\n      stopEvent(event);\n      // Why onMouseDown? Because it is what the grid module give us...\n      this.props.onMouseDown && this.props.onMouseDown(event);\n    }\n  };\n\n  /** Listener for the drag start event, but only allow the drag behaviour if\n   * the state says so */\n  onTouchMove = event => {\n    if (this.state.isDraggable) {\n      stopEvent(event);\n      this.props.onTouchStart && this.props.onTouchStart(event);\n    }\n  };\n\n  /** Listener for the drag end event */\n  onDragEnd = event => {\n    if (this.state.isDraggable) {\n      stopEvent(event);\n      this.props.onMouseUp && this.props.onMouseUp(event);\n    }\n  };\n\n  onTouchEnd = event => {\n    if (this.state.isDraggable) {\n      stopEvent(event);\n      this.props.onTouchEnd && this.props.onTouchEnd(event);\n    }\n  };\n\n  /** When the user wants to delete the item, call the props `onDelete` callback\n   * with the ID of this element */\n  onDelete = () => this.props.onDelete(this.props.id);\n\n  /** When the user selects this item, call the props `onSelect` callback with\n   * the ID of this element */\n  onSelect = () => this.props.onSelect(this.props.id);\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      name,\n      onSelect,\n      onDelete,\n      isSelected\n    } = this.props;\n\n    return (\n      <div\n        className={`Item ${className} ${isSelected && \"is-selected\"}`}\n        style={style}\n        draggable={this.state.isDraggable}\n        onDragStart={this.onDragStart}\n        onTouchMove={this.onTouchMove}\n        onMouseUp={this.onDragEnd}\n        onTouchEnd={this.onTouchEnd}\n        onFocus={onSelect ? this.onSelect : null}\n        tabIndex=\"0\"\n      >\n        <div\n          onMouseDown={this.onDragHandleMouseDown}\n          onTouchStart={this.onDragHandleMouseDown}\n          className=\"Item__toolbar\"\n        >\n          <DeleteButton\n            onMouseDown={stopEvent}\n            onDelete={onDelete ? this.onDelete : null}\n          />\n          <span className=\"Item__name\">{name}</span>\n        </div>\n        <div className=\"Item__childrenContainer\">{children}</div>\n      </div>\n    );\n  }\n}\n","import Grid from \"./Grid/Grid\";\nimport Item from \"./Item/Item\";\n\nexport default {\n  Grid,\n  Item\n};\n","/**\n * Maps the given coordinates with respect to the viewport to coordinates\n * with respect to the given element\n *\n * @param {Object} coords Coordinates to map to relative coordinates\n * @param {number} coords.clientX Horizontal coordinate with respect to the app viewport\n * @param {number} coords.clientY Vertical coordinate with respect to the app viewport\n * @param {Element} parentElement Element to get the bounding box from to\n * map the given coordinates to be relative to this element\n * @returns {Object} {x, y} Mouse coordinates with respect to the given element\n */\nexport function mapToCoordinatesRelativeToElement(coords, parentElement) {\n  return mapToRelativeCoordinates(\n    coords,\n    parentElement.getBoundingClientRect()\n  );\n}\n\n/**\n * Maps the mouse coordinates from the given mouse event to relative\n * coordinates with respect to the given element bounding box\n *\n * @param {Object} coords Coordinates to map to relative coordinates\n * @param {number} coords.clientX Horizontal coordinate with respect to the app viewport\n * @param {number} coords.clientY Vertical coordinate with respect to the app viewport\n * @param {DOMRectReadOnly} parentElementBoundingBox Bounding box where to\n * map the coordinates to\n * @returns {Object} {x, y} Mouse coordinates with respect the given bounding box\n */\nexport function mapToRelativeCoordinates(coords, parentElementBoundingBox) {\n  const { top, left } = parentElementBoundingBox;\n\n  // Top and left can be real numbers. If, for example, top = 66.19\n  // it means that the top of the element is at 66.19 CSS pixels\n  // from the top of the viewport. However we want to map that\n  // to integer values. The mouse position is relative to the viewport and it is\n  // an integer value. If the element top is at 66.19 CSS pixels from the top of the\n  // viewport then the first integer pixel would be 67. Cannot be 66 because\n  // there aren't element pixels below 66.19. So to consider the top and\n  // left values as integers we have to consider the ceiling.\n\n  return {\n    x: coords.clientX - Math.ceil(left),\n    y: coords.clientY - Math.ceil(top)\n  };\n}\n\n/** Returns an object describing the rectangle enclosed by the 2 given\n * coordinates */\nexport function calculateRect(coords1, coords2, callback) {\n  const left = Math.min(coords1.x, coords2.x);\n  const right = Math.max(coords1.x, coords2.x);\n  const top = Math.min(coords1.y, coords2.y);\n  const bottom = Math.max(coords1.y, coords2.y);\n\n  if(callback && typeof callback === 'function')\n    return callback({ left, right, top, bottom });\n  \n  return { left, right, top, bottom };\n}\n\n/** Returns true if point is inside rect, false in another case */\nexport function pointInsideRect(rect, point) {\n  return  point.y <= rect.bottom && point.y >= rect.top &&\n          point.x <= rect.right && point.x >= rect.left;\n}","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { RgbaImageBuffer } from \"wiplib\";\nimport * as Coordinates from \"../../lib/coordinates\";\n\n// FIXME: the selection functionality doesn't work well when:\n// - The mouse up event is done outside the component\n// - The user wants to select a part passing the scroll\n/**\n * Component that renders an image from the given RgbaImage instance\n */\nclass ImageComponent extends Component {\n  static propTypes = {\n    /** RgbaImage instance to render */\n    rgbaImage: PropTypes.instanceOf(RgbaImageBuffer).isRequired,\n    /** Callback called with the mouse position relative to the\n     * image and the pixel value at that position */\n    onMouseMove: PropTypes.func,\n    /** Called when the user selects a region of the image */\n    onSelection: PropTypes.func.isRequired,\n    children: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    onMouseMove: null\n  };\n\n  /** Component state */\n  state = {\n    /** Flag to know if the image is currently being loaded */\n    isImageLoading: false,\n    /** Flag to know if the user clicked and is holding the mouse down */\n    isMouseDown: false,\n    /** Flag to know if the user is dragging the rect selection */\n    isDragging: false,\n    /** Coordinates of the mouse when the user started pressing it */\n    mouseDownOriginCoordinates: { x: -1, y: -1 },\n    /** Current mouse coordinates relative to the image viewport */\n    currentMouseCoordinates: { x: -1, y: -1 },\n    /** Origin coordinates of selection when user drag the selection rectangle */\n    selectionOriginCoords: { x: -1, y: -1 },\n    /** End coordinates of selection when user drag the selection rectangle */\n    selectionEndCoords: { x: -1, y: -1 },\n    /** Coordinates of the selection when user pressed down */\n    initialOriginCoords: { x: -1, y: -1 },\n    /** Coordinates of the selection when user release the mouse button */\n    initialEndCoords: { x: -1, y: -1 },\n  };\n\n  componentDidMount() {\n    // Try to get the image and draw it to the canvas If there is an error\n    // update the state.error\n    const canvas = this.refs.canvas;\n    const context = canvas.getContext(\"2d\");\n\n    canvas.width = this.props.rgbaImage.width;\n    canvas.height = this.props.rgbaImage.height;\n    context.putImageData(this.props.rgbaImage.toImageData(), 0, 0);\n\n    this.setState({\n      isImageLoading: false\n    });\n  }\n\n  /** Mouse move event handler, gets the coordinates relative to the image where\n   * the user mouse is pointing to and the pixel RGBA value there and calls\n   * props.onMouseMove \n   * \n   * If user is dragging an existing rect, the coordinates of previous selection rect\n   * will be updated, taking in account image dimensions.\n   */\n  onMouseMove = mouseEvent => {\n    if (!this.props.onMouseMove || this.state.isImageLoading) {\n      return;\n    }\n\n    const coordinates = Coordinates.mapToCoordinatesRelativeToElement(\n      mouseEvent,\n      this.refs.canvas\n    );\n    const pixel = this.props.rgbaImage.getPixel(coordinates);\n\n    if (this.state.isMouseDown && !this.state.isDragging) {\n      this.setState({\n        currentMouseCoordinates: coordinates\n      });\n    } else if(this.state.isMouseDown && this.state.isDragging) {\n      const { \n        initialOriginCoords,\n        initialEndCoords, \n        mouseDownOriginCoordinates \n      } = this.state;\n\n      let { width, height } = this.props.rgbaImage;\n      width = width - 1;\n      height = height - 1;\n      \n      const Xdiff =  coordinates.x - mouseDownOriginCoordinates.x;\n      const Ydiff = coordinates.y - mouseDownOriginCoordinates.y;\n\n      let selectionRect = Coordinates.calculateRect(initialOriginCoords, initialEndCoords, (selectionRect) => {\n        let { top, left, right, bottom } = selectionRect;\n        let originCoords = { x: left + Xdiff, y: top + Ydiff };\n        let endCoords = { x: right + Xdiff, y: bottom + Ydiff };\n        \n        let selectionWidth = Math.abs(endCoords.x - originCoords.x);\n        let selectionHeight = Math.abs(endCoords.y - originCoords.y);\n\n        if(endCoords.x > width) {\n          originCoords.x = width - selectionWidth;\n          endCoords.x = width;\n        } else if(originCoords.x < 0) {\n          originCoords.x = 0;\n          endCoords.x = selectionWidth;\n        }\n        \n        if(endCoords.y > height) {\n          originCoords.y = height - selectionHeight;\n          endCoords.y = height;\n        } else if(originCoords.y < 0) {\n          originCoords.y = 0;\n          endCoords.y = selectionHeight;\n        }\n\n        return { originCoords, endCoords };\n      });\n     \n      this.setState({\n          currentMouseCoordinates: coordinates,\n          selectionOriginCoords: selectionRect.originCoords,\n          selectionEndCoords: selectionRect.endCoords,\n      });\n    }\n    this.props.onMouseMove(coordinates, pixel);\n  };\n\n  /**\n   * Event listener for the mouse down event. Updates the state to know that the\n   * user wants to select a part of the image and sets the origin mouse\n   * coordinate. If user clicks on a previous selection region, the selection\n   * original coords will be saved.\n   */\n  onMouseDown = mouseEvent => {\n    const coordinates = Coordinates.mapToCoordinatesRelativeToElement(\n      mouseEvent,\n      this.refs.canvas\n    );\n\n    const {\n      selectionOriginCoords,\n      selectionEndCoords,\n    } = this.state;\n\n    const prevRect = Coordinates.calculateRect(selectionOriginCoords, selectionEndCoords);\n    \n    if (!Coordinates.pointInsideRect(prevRect, coordinates)) {\n      this.setState({\n        mouseDownOriginCoordinates: coordinates,\n        isMouseDown: true,\n        currentMouseCoordinates: coordinates\n      });\n    } else {\n      this.setState({\n        mouseDownOriginCoordinates: coordinates,\n        isMouseDown: true,\n        isDragging: true,\n        currentMouseCoordinates: coordinates,\n        initialOriginCoords: { x: selectionOriginCoords.x, y: selectionOriginCoords.y },\n        initialEndCoords: { x: selectionEndCoords.x, y: selectionEndCoords.y }\n      });\n    }\n  };\n\n  /**\n   * Event listener for the mouse up event. Updates the state to know that the\n   * user stopped the selection of the part of the image. Then, if the resulting\n   * rectangle has 0 width or height it is discarted. If user has moved the\n   * selection region, the new coords will be updated.\n   *\n   * MAYBE TODO: set the current mouse coordinate to the ones on mouse up TODO:\n   * notify the parent component of the selection\n   */\n  onMouseUp = () => {\n    const {\n      isMouseDown,\n      isDragging,\n      selectionOriginCoords,\n      selectionEndCoords,\n      mouseDownOriginCoordinates,\n      currentMouseCoordinates,\n    } = this.state;\n\n    if (!isMouseDown) {\n      return;\n    }\n\n    if (\n      mouseDownOriginCoordinates.x === currentMouseCoordinates.x &&\n      mouseDownOriginCoordinates.y === currentMouseCoordinates.y && !isDragging\n    ) {\n      this.setState({\n        isMouseDown: false,\n        selectionOriginCoords: { x: -1, y: -1 },\n        selectionEndCoords: { x: -1, y: -1 }\n      });\n      const { width, height } = this.props.rgbaImage;\n      this.props.onSelection({\n        originCoords: { x: 0, y: 0 },\n        endCoords: { x: width, y: height }\n      });\n    } else if(!isDragging) {\n      this.setState({\n        isMouseDown: false,\n        selectionOriginCoords: { x: mouseDownOriginCoordinates.x, y: mouseDownOriginCoordinates.y },\n        selectionEndCoords: { x: currentMouseCoordinates.x, y: currentMouseCoordinates.y }\n      });\n      this.props.onSelection({\n        originCoords: mouseDownOriginCoordinates,\n        endCoords: currentMouseCoordinates\n      });\n    } else {\n      this.setState({\n        isDragging: false,\n        isMouseDown: false,\n      });\n\n      this.props.onSelection({\n        originCoords: selectionOriginCoords,\n        endCoords: selectionEndCoords,\n      });\n    }\n  };\n\n  render() {\n    const { isDragging, isMouseDown, selectionOriginCoords, selectionEndCoords, \n      currentMouseCoordinates, mouseDownOriginCoordinates } = this.state;\n    return (\n      <div\n        style={{\n          position: \"relative\"\n        }}\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp}\n        onMouseMove={this.onMouseMove}\n      >\n        <canvas\n          ref=\"canvas\"\n          style={{\n            display: \"block\",\n            backgroundColor: \"#eee\",\n            maxHeight: \"100%\"\n          }}\n        />\n        {this.props.children({\n          originCoords: isMouseDown === true && !isDragging ? mouseDownOriginCoordinates : selectionOriginCoords,\n          endCoords: isMouseDown === true && !isDragging ? currentMouseCoordinates : selectionEndCoords\n        })}\n      </div>\n    );\n  }\n}\n\nexport default ImageComponent;","/**\n * Class to represent image load errors\n */\nexport default class ImageLoadException extends Error {\n  /**\n   * Creates an instance of this class\n   *\n   * @param {string} errorImageSrc Source of the image that caused the error\n   */\n  constructor(errorImageSrc) {\n    super(`Error loading image with src = ${errorImageSrc}`);\n    this.name = \"ImageLoadException\";\n    this.src = errorImageSrc;\n  }\n}\n","import { ImageLoadException } from \"./Exceptions\";\n\n/**\n * Returns an promise that resolves with\n * an image when it is loaded from the given source\n *\n * @param {string} src Image source\n * @returns {Promise<Image>} Image element after the content has\n * been loaded\n */\nexport function load(src) {\n  const image = new Image();\n  image.src = src;\n\n  return new Promise((resolve, reject) => {\n    image.onload = () => resolve(image);\n    image.onerror = () => reject(new ImageLoadException(src));\n  });\n}\n\n/**\n * Given a File, Blob object or any other object accepted by\n * `URL.createObjectURL`, returns the image loaded from the\n * object source\n *\n * @param {Object} obj Object to get the image source URL\n */\nexport function loadFromObject(obj) {\n  const src = URL.createObjectURL(obj);\n  return load(src).finally(() => URL.revokeObjectURL(src));\n}\n","import React from \"react\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { RgbaImageBuffer } from \"wiplib\";\nimport * as ImageHelper from \"../../lib/imageHelper\";\n\nclass LoadImageMenuItem extends React.Component {\n  /** Listener for a file input event to load the input image to the application */\n  onImageFileInputted = event => {\n    const { enqueueSnackbar, appStore } = this.props;\n    const files = event.target.files;\n\n    if (files.length !== 1 || !files[0]) {\n      enqueueSnackbar(\"Error reading image file\", {\n        variant: \"error\"\n      });\n      return;\n    }\n\n    ImageHelper.loadFromObject(files[0])\n      .then(image => {\n        const canvas = document.createElement(\"canvas\");\n        const context = canvas.getContext(\"2d\");\n\n        canvas.width = image.naturalWidth;\n        canvas.height = image.naturalHeight;\n        context.drawImage(image, 0, 0);\n\n        const imgData = context.getImageData(0, 0, canvas.width, canvas.height);\n        const imageBuffer = RgbaImageBuffer.fromImageData(imgData);\n        appStore.addImage(imageBuffer);\n        this.refs.fileInputForm.reset();\n      })\n      .catch(() => {\n        enqueueSnackbar(\"Could not load image\", {\n          variant: \"error\"\n        });\n      });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <label htmlFor=\"image-input\">\n          <MenuItem>Open</MenuItem>\n        </label>\n        <form ref=\"fileInputForm\">\n          <input\n            hidden\n            id=\"image-input\"\n            type=\"file\"\n            accept=\"image/*\"\n            name=\"image-input\"\n            onChange={this.onImageFileInputted}\n          />\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(inject(\"appStore\")(observer(LoadImageMenuItem)));\n","import React from \"react\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nclass DownloadSelectedImageMenuItem extends React.Component {\n  /** Downloads the selected region of the current selected image if any */\n  downloadCurrentImage = () => {\n    const { enqueueSnackbar, appStore } = this.props;\n    const { type, index } = appStore.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      enqueueSnackbar(\"You first need to select an image\", {\n        variant: \"warning\"\n      });\n    } else {\n      const imgInfo = appStore.imagesInfos[index];\n      const { left, top, width, height } = imgInfo.region;\n      const imageData = imgInfo.imageBuffer.toImageData();\n      const canvas = document.createElement(\"canvas\");\n      const context = canvas.getContext(\"2d\");\n\n      canvas.width = imageData.width;\n      canvas.height = imageData.height;\n      context.putImageData(imageData, 0, 0, left, top, width, height);\n\n      canvas.toBlob(\n        blob => {\n          const imgUrl = URL.createObjectURL(blob);\n          this.refs.downloadAnchor.href = imgUrl;\n          this.refs.downloadAnchor.click();\n          URL.revokeObjectURL(imgUrl);\n        },\n        null,\n        1\n      );\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <MenuItem onClick={this.downloadCurrentImage}>Download</MenuItem>\n        <div>\n          <a\n            ref=\"downloadAnchor\"\n            href=\"#download\"\n            id=\"download\"\n            hidden\n            download\n          >\n            This should not be visible. It is only used when downloading images\n          </a>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(\n  inject(\"appStore\")(observer(DownloadSelectedImageMenuItem))\n);\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport LoadImageMenuItem from \"../../ImageProcessingUi/LoadImageMenuItem\";\nimport DownloadSelectedImageMenuItem from \"../../ImageProcessingUi/DownloadSelectedImageMenuItem\";\n\n/**\n * \"File\" Appbar Dropdown menu. Contains all the options that the user can\n * choose about files (upload, download, etc)\n */\nexport default class FileSubmenu extends React.Component {\n  state = {\n    open: false\n  };\n\n  handleToggle = () => {\n    this.setState(state => ({ open: !state.open }));\n  };\n\n  handleClose = event => {\n    if (this.anchorEl.contains(event.target)) {\n      return;\n    }\n\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { open } = this.state;\n\n    return (\n      <div>\n        <Button\n          buttonRef={node => {\n            this.anchorEl = node;\n          }}\n          aria-owns={open ? \"menu-list-grow\" : undefined}\n          aria-haspopup=\"true\"\n          onClick={this.handleToggle}\n          color=\"inherit\"\n        >\n          File\n        </Button>\n        <Popper\n          open={open}\n          style={this.state.open ? {} : { display: \"none\" }}\n          anchorEl={this.anchorEl}\n          transition\n          disablePortal\n        >\n          <Paper onClick={this.handleClose}>\n            <ClickAwayListener onClickAway={this.handleClose}>\n              <MenuList>\n                <LoadImageMenuItem />\n                <DownloadSelectedImageMenuItem />\n              </MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Popper>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nclass ShowImageInfoMenuItem extends React.Component {\n  onClick = () => {\n    const { appStore, enqueueSnackbar } = this.props;\n    const { type, index } = appStore.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      enqueueSnackbar(\"You first need to select an image\", {\n        variant: \"warning\"\n      });\n      return;\n    }\n\n    this.props.appStore.openRightSideMenu();\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <MenuItem onClick={this.onClick}>See Image Info</MenuItem>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(\n  inject(\"appStore\")(observer(ShowImageInfoMenuItem))\n);\n","import React from \"react\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { operations } from \"wiplib\";\n\nconst { crop } = operations;\n\nclass CropMenuItem extends React.Component {\n  cropCurrentImage = () => {\n    const { enqueueSnackbar, appStore } = this.props;\n    const { imageSelectionMehod } = appStore;\n    const { type, index } = appStore.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      enqueueSnackbar(\"You first need to select an image\", {\n        variant: \"warning\"\n      });\n    } else if (imageSelectionMehod !== \"selection\") {\n      enqueueSnackbar(\n        \"You need to select a part of the image with the selection tool\",\n        {\n          variant: \"error\"\n        }\n      );\n    } else {\n      const { addImage, imagesInfos } = appStore;\n      addImage(crop(imagesInfos[index].imageBuffer, imagesInfos[index].region));\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <MenuItem onClick={this.cropCurrentImage}>Crop</MenuItem>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(inject(\"appStore\")(observer(CropMenuItem)));\n","/**\n * Returns an array containing the points of the line which connects the given\n * points.\n *\n * @param {Object} firstPoint Origin point of the line\n * @param {Object} secondPoint End point of the line.\n * @returns {Array} Points of the line.\n */\nexport const bresenham = (\n  firstPoint,\n  secondPoint\n) => {\n  let points = [];\n\n  const EPS = 0.0001;\n  let x0 = firstPoint.x;\n  let x1 = secondPoint.x;\n  let y0 = firstPoint.y;\n  let y1 = secondPoint.y;\n  let dx = Math.abs(x1-x0);\n  let dy = Math.abs(y1-y0);\n  let sx = (x0 < x1) ? 1 : -1;\n  let sy = (y0 < y1) ? 1 : -1;\n  let err = dx-dy;\n\n  while(true){\n    points.push({x: x0, y: y0});\n\n    if (Math.abs(x0-x1) < EPS && Math.abs(y0-y1) < EPS) {\n      break;\n    }\n    let e2 = 2 * err;\n    if (e2 > -dy) { \n      err -= dy;\n      x0  += sx; \n    }\n    if (e2 <  dx) {\n      err += dx;\n      y0  += sy; \n    }\n  }\n\n  return points;\n};","import React from \"react\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { bresenham } from \"../../lib/Bresenham\";\n\nclass ProfileMenuItem extends React.Component {\n  getProfile = () => {\n    const { enqueueSnackbar, appStore } = this.props;\n    const { imageSelectionMehod } = appStore;\n    const { type, index } = appStore.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      enqueueSnackbar(\"You first need to select an image\", {\n        variant: \"warning\"\n      });\n    } else if (imageSelectionMehod !== \"line\") {\n      enqueueSnackbar(\n        \"You need to select a line inside the image with the profile tool\",\n        {\n          variant: \"error\"\n        }\n      );\n    } else {\n      const { left, top, width, height } = appStore.imagesInfos[index].region;\n      const points = bresenham(\n        { x: left, y: top },\n        { x: left + width, y: top + height }\n      );\n      const associatedImage = appStore.imagesInfos[index].imageBuffer;\n      const profileValues = {\n        Red: [],\n        Green: [],\n        Blue: []\n      };\n\n      points.forEach(point => {\n        let pixel = associatedImage.getPixel({ x: point.x, y: point.y });\n        profileValues[\"Red\"].push(pixel[0]);\n        profileValues[\"Green\"].push(pixel[1]);\n        profileValues[\"Blue\"].push(pixel[2]);\n      });\n\n      const firstDerivativeProfileValues = {\n        Red: [],\n        Green: [],\n        Blue: []\n      };\n\n      for (let i = 1; i < profileValues[\"Red\"].length - 1; ++i)\n        Object.keys(profileValues).forEach(key => {\n          firstDerivativeProfileValues[key].push(\n            (profileValues[key][i + 1] - profileValues[key][i - 1]) / 2\n          );\n        });\n\n      appStore.openRightSideMenu();\n      appStore.addProfile(profileValues, firstDerivativeProfileValues);\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <MenuItem onClick={this.getProfile}>Profile</MenuItem>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(inject(\"appStore\")(observer(ProfileMenuItem)));\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ShowImageInfoMenuItem from \"../../ImageProcessingUi/ShowImageInfoMenuItem\";\nimport CropMenuItem from \"../../ImageProcessingUi/CropMenuItem\";\nimport ProfileMenuItem from \"../../ImageProcessingUi/ProfileMenuItem\";\n\n/**\n * \"Image\" Appbar Dropdown menu. Contains all the general options that the user\n * can choose about an image (see histogram, crop, etc)\n */\nexport default class ImageSubmenu extends React.Component {\n  state = {\n    open: false\n  };\n\n  handleToggle = () => {\n    this.setState(state => ({ open: !state.open }));\n  };\n\n  handleClose = event => {\n    if (this.anchorEl.contains(event.target)) {\n      return;\n    }\n\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { open } = this.state;\n\n    return (\n      <div>\n        <Button\n          buttonRef={node => {\n            this.anchorEl = node;\n          }}\n          aria-owns={open ? \"menu-list-grow\" : undefined}\n          aria-haspopup=\"true\"\n          onClick={this.handleToggle}\n          color=\"inherit\"\n        >\n          Image\n        </Button>\n        <Popper\n          open={open}\n          style={this.state.open ? {} : { display: \"none\" }}\n          anchorEl={this.anchorEl}\n          transition\n          disablePortal\n        >\n          <Paper onClick={this.handleClose}>\n            <ClickAwayListener onClickAway={this.handleClose}>\n              <MenuList>\n                <ShowImageInfoMenuItem />\n                <CropMenuItem />\n                <ProfileMenuItem />\n              </MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Popper>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\n/**\n * Coordinate input component to ask the user for the coordinates of a point\n */\nexport default class InputCoordinate extends React.Component {\n  static propTypes = {\n    /** Current value of the coordinate */\n    coordinate: PropTypes.object.isRequired,\n    /** Listener for coordinate changes */\n    onChange: PropTypes.func.isRequired,\n    /** Listener for coordinate delete */\n    onDelete: PropTypes.func.isRequired\n  };\n\n  onYChange = e => {\n    const number = Number.parseFloat(e.target.value);\n    this.props.onChange({\n      ...this.props.coordinate,\n      y: Number.isFinite(number) ? number : \"\"\n    });\n  };\n\n  onXChange = e => {\n    const number = Number.parseFloat(e.target.value);\n    this.props.onChange({\n      ...this.props.coordinate,\n      x: Number.isFinite(number) ? number : \"\"\n    });\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          width: \"100%\"\n        }}\n      >\n        <TextField\n          type=\"number\"\n          placeholder=\"0\"\n          value={this.props.coordinate.x}\n          onChange={this.onXChange}\n          margin=\"dense\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">x: </InputAdornment>\n            )\n          }}\n        />\n        <TextField\n          type=\"number\"\n          placeholder=\"0\"\n          value={this.props.coordinate.y}\n          onChange={this.onYChange}\n          margin=\"dense\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">y: </InputAdornment>\n            )\n          }}\n        />\n        <IconButton aria-label=\"Delete\" onClick={this.props.onDelete}>\n          <DeleteIcon />\n        </IconButton>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport {\n  XYPlot,\n  XAxis,\n  YAxis,\n  HorizontalGridLines,\n  LineSeries\n} from \"react-vis\";\nimport InputCoordinate from \"./InputCoordinate\";\nimport { operations } from \"wiplib\";\n\nconst { linearTransformation } = operations;\n\nconst styles = {\n  center: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: \"1rem\",\n    marginBottom: \"1rem\"\n  }\n};\n\n/**\n * Dialog to ask the user for the linear sections for a linear transformation\n */\nclass LinearTransformationDialog extends React.Component {\n  static propTypes = {\n    isOpen: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n  };\n\n  state = {\n    /** List of coordinates */\n    coords: [{ x: 0, y: 0 }, { x: 255, y: 255 }]\n  };\n\n  /** Returns a listener for when the user changes some coordinate */\n  onDataChange = index => newCoords => {\n    this.setState(prevState => ({\n      coords: prevState.coords.map((coord, i) =>\n        i === index ? newCoords : coord\n      )\n    }));\n  };\n\n  /** Returns a listener for when the user deletes some coordinate */\n  onDataDelete = index => () => {\n    this.setState(prevState => ({\n      coords: prevState.coords.filter((_, i) => i !== index)\n    }));\n  };\n\n  /** Listener for when the user wants to add a new coordinate */\n  addNewCoordinate = () => {\n    const newCoord =\n      this.state.coords.length < 1\n        ? { x: 0, y: 0 }\n        : this.state.coords.slice(-1)[0];\n\n    this.setState(prevState => ({ coords: [...prevState.coords, newCoord] }));\n  };\n\n  onSubmit = () => {\n    const { appStore, onClose } = this.props;\n    const { index } = appStore.selectedGridItem;\n\n    appStore.addImage(\n      linearTransformation(appStore.imagesInfos[index].imageBuffer, [\n        this.state.coords,\n        this.state.coords,\n        this.state.coords\n      ])\n    );\n\n    onClose();\n  };\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.isOpen}\n        onClose={this.props.onClose}\n        scroll=\"body\"\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Linear Sections</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please, enter the points to define the begin and end of each linear\n            section\n          </DialogContentText>\n          <div style={styles.center}>\n            <XYPlot width={300} height={300}>\n              <HorizontalGridLines />\n              <LineSeries\n                data={this.state.coords}\n                xDomain={[0, 255]}\n                yDomain={[0, 255]}\n              />\n              <XAxis />\n              <YAxis />\n            </XYPlot>\n          </div>\n          <div style={styles.center}>\n            <Button\n              onClick={this.addNewCoordinate}\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Add new coordinate\n            </Button>\n          </div>\n\n          <div>\n            {this.state.coords.map((coord, i) => (\n              <InputCoordinate\n                key={i}\n                coordinate={coord}\n                onChange={this.onDataChange(i)}\n                onDelete={this.onDataDelete(i)}\n              />\n            ))}\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.props.onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.onSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default withSnackbar(\n  inject(\"appStore\")(observer(LinearTransformationDialog))\n);\n","import React from \"react\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport LinearTransformationDialog from \"./LinearTransformationDialog\";\n\nclass LinearTransformationMenuItem extends React.Component {\n  state = {\n    isDialogOpen: false\n  };\n\n  openDialog = () => {\n    const { appStore, enqueueSnackbar } = this.props;\n    const { type, index } = appStore.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      enqueueSnackbar(\"You first need to select an image\", {\n        variant: \"warning\"\n      });\n      return;\n    }\n\n    this.setState({ isDialogOpen: true });\n  };\n  closeDialog = () => this.setState({ isDialogOpen: false });\n\n  render() {\n    return (\n      <React.Fragment>\n        <MenuItem onClick={this.openDialog}>Linear Transformation</MenuItem>\n        <LinearTransformationDialog\n          isOpen={this.state.isDialogOpen}\n          onClose={this.closeDialog}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(\n  inject(\"appStore\")(observer(LinearTransformationMenuItem))\n);\n","/**\n * Returns whether the given value is in range [min, max).\n * That is min <= value < max;\n *\n * @param {number} value  Value to check if it is in range\n * @param {number} min  Range minimum (inclusive)\n * @param {number} max  Range maximum (exclusive)\n */\nexport const isInRange = (value, min, max) => value >= min && value < max;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { observer, inject } from \"mobx-react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { isInRange } from \"../../../lib/Checks\";\nimport { operations } from \"wiplib\";\n\nconst { brightnessAndContrastAdjustment } = operations;\n\nconst styles = {\n  inputsContainer: {\n    flexWrap: \"wrap\",\n    margin: \"1rem\"\n  },\n  input: {\n    margin: \"1rem\"\n  }\n};\n\n/**\n * Dialog to prompt the user for the new brightness and contrast for the new\n * image on the adjust brightness and contrast operation\n */\nclass BrightnessAndContrastDialog extends React.Component {\n  static propTypes = {\n    isOpen: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n  };\n\n  state = {\n    brightness: 0,\n    brightnessErrorMessage: \"\",\n    contrast: 0,\n    contrastErrorMessage: \"\",\n    formChanged: false\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    const { imagesInfos, selectedGridItem } = props.appStore;\n    let oldBrightness = state.brightness;\n    let oldContrast = state.contrast;\n\n    if (selectedGridItem.index >= 0) {\n      const { extraInfo } = imagesInfos[selectedGridItem.index];\n\n      oldBrightness = extraInfo.brightnesses[0];\n      oldContrast = extraInfo.contrasts[0];\n    }\n\n    if (!state.formChanged) {\n      return {\n        brightness: +oldBrightness.toFixed(2),\n        contrast: +oldContrast.toFixed(2)\n      };\n    }\n    return null;\n  }\n\n  /** General listener for a change on the brightness or contrast input */\n  onChange = (\n    e,\n    valueStateName,\n    errorMessageStateName,\n    minPossibleValue,\n    maxPossibleValue\n  ) => {\n    const value = Number.parseFloat(e.target.value);\n\n    if (!isInRange(value, minPossibleValue, maxPossibleValue + 1)) {\n      this.setState({\n        [valueStateName]: e.target.value,\n        [errorMessageStateName]: `Required a number between ${minPossibleValue} and ${maxPossibleValue}`,\n        formChanged: true\n      });\n    } else {\n      this.setState({\n        [valueStateName]: value,\n        [errorMessageStateName]: \"\",\n        formChanged: true\n      });\n    }\n  };\n\n  /** Listener for when the user changes the brightness input value */\n  onBrightnessChange = e =>\n    this.onChange(e, \"brightness\", \"brightnessErrorMessage\", 0, 255);\n\n  /** Listener for when the user changes the contrast input value */\n  onContrastChange = e =>\n    this.onChange(e, \"contrast\", \"contrastErrorMessage\", 0, 128);\n\n  onSubmit = () => {\n    const { brightness, contrast } = this.state;\n    const { appStore } = this.props;\n    const { index } = appStore.selectedGridItem;\n\n    appStore.addImage(\n      brightnessAndContrastAdjustment(\n        appStore.imagesInfos[index].imageBuffer,\n        appStore.imagesInfos[index].extraInfo.brightnesses,\n        appStore.imagesInfos[index].extraInfo.contrasts,\n        [brightness, brightness, brightness],\n        [contrast, contrast, contrast]\n      )\n    );\n\n    this.onClose();\n  };\n\n  onClose = () => {\n    this.setState({\n      formChanged: false\n    });\n    this.props.onClose();\n  };\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.isOpen}\n        onClose={this.props.onClose}\n        scroll=\"body\"\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          Brightness and Contrast Adjustment\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please, enter the brightness and contrast for the new image\n          </DialogContentText>\n          <div className=\"center\" style={styles.inputsContainer}>\n            <TextField\n              error={!!this.state.brightnessErrorMessage}\n              label={this.state.brightnessErrorMessage}\n              type=\"number\"\n              placeholder={String(this.state.brightness)}\n              value={this.state.brightness}\n              onChange={this.onBrightnessChange}\n              margin=\"dense\"\n              style={styles.input}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">Brightness: </InputAdornment>\n                )\n              }}\n            />\n            <TextField\n              error={!!this.state.contrastErrorMessage}\n              label={this.state.contrastErrorMessage}\n              type=\"number\"\n              placeholder={String(this.state.contrast)}\n              value={this.state.contrast}\n              onChange={this.onContrastChange}\n              margin=\"dense\"\n              style={styles.input}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">Contrast: </InputAdornment>\n                )\n              }}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.onSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default inject(\"appStore\")(observer(BrightnessAndContrastDialog));\n","import React from \"react\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport BrightnessAndContrastDialog from \"./BrightnessAndContrastDialog\";\n\nclass BrightnessAndContrastMenuItem extends React.Component {\n  state = {\n    isDialogOpen: false\n  };\n\n  openDialog = () => {\n    const { appStore, enqueueSnackbar } = this.props;\n    const { type, index } = appStore.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      enqueueSnackbar(\"You first need to select an image\", {\n        variant: \"warning\"\n      });\n      return;\n    }\n\n    this.setState({ isDialogOpen: true });\n  };\n\n  closeDialog = () => this.setState({ isDialogOpen: false });\n\n  render() {\n    return (\n      <React.Fragment>\n        <MenuItem onClick={this.openDialog}>Brightness And Contrast</MenuItem>\n        <BrightnessAndContrastDialog\n          isOpen={this.state.isDialogOpen}\n          onClose={this.closeDialog}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(\n  inject(\"appStore\")(observer(BrightnessAndContrastMenuItem))\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { isInRange } from \"../../../lib/Checks\";\nimport { operations } from \"wiplib\";\n\nconst { gammaCorrection } = operations;\n\nconst styles = {\n  inputsContainer: {\n    flexWrap: \"wrap\",\n    margin: \"1rem\"\n  },\n  input: {\n    margin: \"1rem\"\n  }\n};\n\n/**\n * Dialog to prompt the user for the gamma value for the new\n * image on the gamma correction operation\n */\nclass GammaCorrectionDialog extends React.Component {\n  static propTypes = {\n    isOpen: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n  };\n\n  state = {\n    gamma: 0,\n    gammaErrorMessage: \"\"\n  };\n\n  /** General listener for a change on the gamma input */\n  onChange = (e, valueStateName, errorMessageStateName, errorMessage) => {\n    const value = Number.parseFloat(e.target.value);\n\n    if (!isInRange(value, 0, Number.POSITIVE_INFINITY)) {\n      this.setState({\n        [valueStateName]: e.target.value,\n        [errorMessageStateName]: errorMessage\n      });\n    } else {\n      this.setState({\n        [valueStateName]: value,\n        [errorMessageStateName]: \"\"\n      });\n    }\n  };\n\n  /** Listener for when the user changes the gamma input value */\n  onGammaChange = e =>\n    this.onChange(\n      e,\n      \"gamma\",\n      \"gammaErrorMessage\",\n      \"Required a value equal or greater than 0\"\n    );\n\n  onSubmit = () => {\n    const { appStore } = this.props;\n    const { index } = appStore.selectedGridItem;\n\n    appStore.addImage(\n      gammaCorrection(appStore.imagesInfos[index].imageBuffer, this.state.gamma)\n    );\n\n    this.props.onClose();\n  };\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.isOpen}\n        onClose={this.props.onClose}\n        scroll=\"body\"\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Gamma correction</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please, enter the gamma value for the new image\n          </DialogContentText>\n          <div className=\"center\" style={styles.inputsContainer}>\n            <TextField\n              error={!!this.state.gammaErrorMessage}\n              label={this.state.gammaErrorMessage}\n              type=\"number\"\n              placeholder=\"0\"\n              value={this.state.gamma}\n              onChange={this.onGammaChange}\n              margin=\"dense\"\n              style={styles.input}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">Gamma: </InputAdornment>\n                )\n              }}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.props.onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.onSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default withSnackbar(\n  inject(\"appStore\")(observer(GammaCorrectionDialog))\n);\n","import React from \"react\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport GammaCorrectionDialog from \"./GammaCorrectionDialog\";\n\nclass GammaCorrectionMenuItem extends React.Component {\n  state = {\n    isDialogOpen: false\n  };\n\n  openDialog = () => {\n    const { appStore, enqueueSnackbar } = this.props;\n    const { type, index } = appStore.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      enqueueSnackbar(\"You first need to select an image\", {\n        variant: \"warning\"\n      });\n      return;\n    }\n\n    this.setState({ isDialogOpen: true });\n  };\n\n  closeDialog = () => this.setState({ isDialogOpen: false });\n\n  render() {\n    return (\n      <React.Fragment>\n        <MenuItem onClick={this.openDialog}>Gamma Correction</MenuItem>\n        <GammaCorrectionDialog\n          isOpen={this.state.isDialogOpen}\n          onClose={this.closeDialog}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(\n  inject(\"appStore\")(observer(GammaCorrectionMenuItem))\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n  },\n});\n\nclass FilesListMenu extends React.Component {\n  state = {\n    anchorEl: null,\n    selectedIndex: this.props.selectedItemIndex,\n  };\n\n  handleClickListItem = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleMenuItemClick = (event, index, selectedItemName) => {\n    this.setState({ selectedIndex: index, anchorEl: null });\n    event[\"selectedItemName\"] = selectedItemName;\n    event[\"selectedItemIndex\"] = index;\n    this.props.onItemSelection(event);\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { anchorEl } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <List component=\"nav\">\n          <ListItem\n            disabled={this.props.isDisabled}\n            button\n            aria-haspopup=\"true\"\n            aria-label={this.props.menuTitle}\n            onClick={this.handleClickListItem}\n          >\n            <ListItemText\n              primary={this.props.menuTitle}\n              secondary={\n                (this.props.options.length > 0) ?\n                this.props.options[this.state.selectedIndex] :\n                \"None\"\n              }\n            />\n          </ListItem>\n        </List>\n        { (this.props.options.length > 0) ?\n          <Menu\n            anchorEl={anchorEl}\n            open={Boolean(anchorEl)}\n            onClose={this.handleClose}\n          >\n            {this.props.options.map((option, index) => (\n              <MenuItem\n                key={option}\n                selected={index === this.state.selectedIndex}\n                onClick={event => this.handleMenuItemClick(event, index, option)}\n              >\n                {option}\n              </MenuItem>\n            ))}\n          </Menu> :\n          null\n        }\n        \n      </div>\n    );\n  }\n}\n\nFilesListMenu.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(FilesListMenu);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FilesListMenu from \"../../Toolbar/FilesListMenu\";\nimport { operations } from \"wiplib\";\n\nconst { imagesDifference } = operations;\n\n/**\n * Dialog to prompt the user for the image name of the image to do the\n * difference operation\n */\nclass ImageDifferenceDialog extends React.Component {\n  static propTypes = {\n    isOpen: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n  };\n\n  state = {\n    imgName: \"\"\n  };\n\n  onChange = e =>\n    this.setState({\n      imgName: e.selectedItemName\n    });\n\n  onSubmit = () => {\n    const otherImgName = this.state.imgName;\n    const { appStore, enqueueSnackbar } = this.props;\n    const { index } = appStore.selectedGridItem;\n    const otherImageInfo = appStore.imagesInfos.find(\n      ({ key }) => key === otherImgName\n    );\n    const imageBuffer = otherImageInfo && otherImageInfo.imageBuffer;\n\n    if (imageBuffer === undefined) {\n      enqueueSnackbar(\n        `Couldn't find an image with the selected name (${otherImgName})`,\n        {\n          variant: \"error\"\n        }\n      );\n    } else {\n      appStore.addImage(\n        imagesDifference(appStore.imagesInfos[index].imageBuffer, imageBuffer)\n      );\n    }\n\n    this.props.onClose();\n  };\n\n  render() {\n    const activeImagesNames = this.props.appStore.imagesInfos.map(\n      img => img.key\n    );\n\n    return (\n      <Dialog\n        open={this.props.isOpen}\n        onClose={this.props.onClose}\n        scroll=\"body\"\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Image Difference</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please, select the image to perform the difference to the current\n            image\n          </DialogContentText>\n          <div className=\"center\">\n            <FilesListMenu\n              menuTitle=\"Selected image\"\n              options={activeImagesNames}\n              onItemSelection={this.onChange}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.props.onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.onSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default withSnackbar(\n  inject(\"appStore\")(observer(ImageDifferenceDialog))\n);\n","import React from \"react\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ImageDifferenceDialog from \"./ImageDifferenceDialog\";\n\nclass ImageDifferenceMenuItem extends React.Component {\n  state = {\n    isDialogOpen: false\n  };\n\n  openDialog = () => {\n    const { appStore, enqueueSnackbar } = this.props;\n    const { type, index } = appStore.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      enqueueSnackbar(\"You first need to select an image\", {\n        variant: \"warning\"\n      });\n    } else {\n      this.setState({ isDialogOpen: true });\n    }\n  };\n\n  closeDialog = () => this.setState({ isDialogOpen: false });\n\n  render() {\n    return (\n      <React.Fragment>\n        <MenuItem onClick={this.openDialog}>Image Difference</MenuItem>\n        <ImageDifferenceDialog\n          isOpen={this.state.isDialogOpen}\n          onClose={this.closeDialog}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(\n  inject(\"appStore\")(observer(ImageDifferenceMenuItem))\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { ChromePicker } from \"react-color\";\nimport FilesListMenu from \"../../Toolbar/FilesListMenu\";\nimport { operations } from \"wiplib\";\n\nconst { changesDetection } = operations;\n\n/**\n * Dialog to prompt the user for the image name of the image to do the\n * changes detection, color and threshold\n */\nclass ChangesDetectionDialog extends React.Component {\n  static propTypes = {\n    isOpen: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n  };\n\n  state = {\n    imgName: \"\",\n    rgbaColor: { r: 255, g: 0, b: 0 },\n    threshold: \"\"\n  };\n\n  onImgNameChange = e =>\n    this.setState({\n      imgName: e.selectedItemName\n    });\n\n  onThresholdChange = e => {\n    const newValue = Number.parseFloat(e.target.value);\n\n    this.setState({\n      threshold: Number.isFinite(newValue) ? newValue : \"\"\n    });\n  };\n\n  handleChangeComplete = color => this.setState({ rgbaColor: color.rgb });\n\n  onSubmit = () => {\n    const { imgName, rgbaColor, threshold } = this.state;\n    this.applyChangesDetection({\n      imgName,\n      rgbaColor,\n      threshold: threshold === \"\" ? 0 : threshold\n    });\n    this.props.onClose();\n  };\n\n  applyChangesDetection = ({ imgName, rgbaColor, threshold }) => {\n    const { appStore, enqueueSnackbar } = this.props;\n    const { index } = appStore.selectedGridItem;\n    const otherImageInfo = appStore.imagesInfos.find(\n      ({ key }) => key === imgName\n    );\n    const imageBuffer = otherImageInfo && otherImageInfo.imageBuffer;\n\n    if (imageBuffer === undefined) {\n      enqueueSnackbar(\n        `Couldn't find an image with the selected name (${imgName})`,\n        {\n          variant: \"error\"\n        }\n      );\n    } else {\n      appStore.addImage(\n        changesDetection(\n          appStore.imagesInfos[index].imageBuffer,\n          imageBuffer,\n          threshold,\n          rgbaColor\n        )\n      );\n    }\n  };\n\n  render() {\n    const activeImagesNames = this.props.appStore.imagesInfos.map(\n      img => img.key\n    );\n\n    return (\n      <Dialog\n        open={this.props.isOpen}\n        onClose={this.props.onClose}\n        scroll=\"body\"\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Changes Detection</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please, select the image to detect the changes between them. Also\n            enter the color which will be used to highlight the differences and\n            the difference threshold, value that will determine what is\n            considered a difference and what not\n          </DialogContentText>\n          <div className=\"center\" style={{ justifyContent: \"space-around\" }}>\n            <FilesListMenu\n              menuTitle=\"Selected image\"\n              options={activeImagesNames}\n              onItemSelection={this.onImgNameChange}\n            />\n            <TextField\n              placeholder=\"0\"\n              type=\"number\"\n              value={this.state.threshold}\n              onChange={this.onThresholdChange}\n              margin=\"dense\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">Threshold: </InputAdornment>\n                )\n              }}\n            />\n          </div>\n          <div className=\"center\" style={{ marginTop: \"1rem\" }}>\n            <ChromePicker\n              color={this.state.rgbaColor}\n              onChangeComplete={this.handleChangeComplete}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.props.onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.onSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default withSnackbar(\n  inject(\"appStore\")(observer(ChangesDetectionDialog))\n);\n","import React from \"react\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ChangesDetectionDialog from \"./ChangesDetectionDialog\";\n\nclass ChangesDetectionMenuItem extends React.Component {\n  state = {\n    isDialogOpen: false\n  };\n\n  openDialog = () => {\n    const { appStore, enqueueSnackbar } = this.props;\n    const { type, index } = appStore.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      enqueueSnackbar(\"You first need to select an image\", {\n        variant: \"warning\"\n      });\n      return;\n    }\n\n    this.setState({ isDialogOpen: true });\n  };\n  closeDialog = () => this.setState({ isDialogOpen: false });\n\n  render() {\n    return (\n      <React.Fragment>\n        <MenuItem onClick={this.openDialog}>Changes Detection</MenuItem>\n        <ChangesDetectionDialog\n          isOpen={this.state.isDialogOpen}\n          onClose={this.closeDialog}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(\n  inject(\"appStore\")(observer(ChangesDetectionMenuItem))\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FilesListMenu from \"../../Toolbar/FilesListMenu\";\nimport { operations } from \"wiplib\";\n\nconst { histogramSpecification } = operations;\n\n/**\n * Dialog to prompt the user for the image name of the image to do the\n * histogram specification\n */\nclass HistogramSpecificationDialog extends React.Component {\n  static propTypes = {\n    isOpen: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n  };\n\n  state = {\n    imgName: \"\"\n  };\n\n  onChange = e =>\n    this.setState({\n      imgName: e.selectedItemName\n    });\n\n  onSubmit = () => {\n    const otherImgName = this.state.imgName;\n    const { appStore, enqueueSnackbar } = this.props;\n    const { index } = appStore.selectedGridItem;\n    const otherImgIndex = appStore.imagesInfos.findIndex(\n      ({ key }) => key === otherImgName\n    );\n\n    if (otherImgIndex < 0 || otherImgIndex > appStore.imagesInfos.length) {\n      enqueueSnackbar(\n        `Couldn't find an image with the selected name (${otherImgName})`,\n        {\n          variant: \"error\"\n        }\n      );\n    } else {\n      appStore.addImage(\n        histogramSpecification(\n          appStore.imagesInfos[index].imageBuffer,\n          appStore.imagesInfos[index].extraInfo,\n          appStore.imagesInfos[otherImgIndex].extraInfo\n        )\n      );\n    }\n\n    this.props.onClose();\n  };\n\n  render() {\n    const activeImagesNames = this.props.appStore.imagesInfos.map(\n      img => img.key\n    );\n\n    return (\n      <Dialog\n        open={this.props.isOpen}\n        onClose={this.props.onClose}\n        scroll=\"body\"\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          Histogram Specificacion\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please, select the image with the histogram to perform the histogram\n            specification to the current image\n          </DialogContentText>\n          <div className=\"center\">\n            <FilesListMenu\n              menuTitle=\"Selected image\"\n              options={activeImagesNames}\n              onItemSelection={this.onChange}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.props.onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.onSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default withSnackbar(\n  inject(\"appStore\")(observer(HistogramSpecificationDialog))\n);\n","import React from \"react\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport HistogramSpecificationDialog from \"./HistogramSpecificationDialog\";\n\nclass HistogramSpecificationMenuItem extends React.Component {\n  state = {\n    isDialogOpen: false\n  };\n\n  openDialog = () => {\n    const { appStore, enqueueSnackbar } = this.props;\n    const { type, index } = appStore.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      enqueueSnackbar(\"You first need to select an image\", {\n        variant: \"warning\"\n      });\n      return;\n    }\n\n    this.setState({ isDialogOpen: true });\n  };\n\n  closeDialog = () => this.setState({ isDialogOpen: false });\n\n  render() {\n    return (\n      <React.Fragment>\n        <MenuItem onClick={this.openDialog}>Histogram Specification</MenuItem>\n        <HistogramSpecificationDialog\n          isOpen={this.state.isDialogOpen}\n          onClose={this.closeDialog}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(\n  inject(\"appStore\")(observer(HistogramSpecificationMenuItem))\n);\n","import React from \"react\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { operations } from \"wiplib\";\n\nconst { imageToGrayscale } = operations;\n\nclass GrayscaleMenuItem extends React.Component {\n  currentImageToGrayscale = () => {\n    const { enqueueSnackbar, appStore } = this.props;\n    const { type, index } = this.props.appStore.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      enqueueSnackbar(\"You first need to select an image\", {\n        variant: \"warning\"\n      });\n    } else {\n      appStore.addImage(\n        imageToGrayscale(appStore.imagesInfos[index].imageBuffer)\n      );\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <MenuItem onClick={this.currentImageToGrayscale}>To Grayscale</MenuItem>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(inject(\"appStore\")(observer(GrayscaleMenuItem)));\n","import React from \"react\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { operations } from \"wiplib\";\n\nconst { imageToSepia } = operations;\n\nclass SepiaMenuItem extends React.Component {\n  currentImageToSepia = () => {\n    const { enqueueSnackbar, appStore } = this.props;\n    const { type, index } = this.props.appStore.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      enqueueSnackbar(\"You first need to select an image\", {\n        variant: \"warning\"\n      });\n    } else {\n      appStore.addImage(imageToSepia(appStore.imagesInfos[index].imageBuffer));\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <MenuItem onClick={this.currentImageToSepia}>To Sepia</MenuItem>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(inject(\"appStore\")(observer(SepiaMenuItem)));\n","import React from \"react\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { operations } from \"wiplib\";\n\nconst { histogramEqualization } = operations;\n\nclass HistogramEqualizationMenuItem extends React.Component {\n  currentImageHistogramEqualization = () => {\n    const { enqueueSnackbar, appStore } = this.props;\n    const { type, index } = appStore.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      enqueueSnackbar(\"You first need to select an image\", {\n        variant: \"warning\"\n      });\n    } else {\n      appStore.addImage(\n        histogramEqualization(\n          appStore.imagesInfos[index].imageBuffer,\n          appStore.imagesInfos[index].extraInfo\n        )\n      );\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <MenuItem onClick={this.currentImageHistogramEqualization}>\n          Histogram Equalization\n        </MenuItem>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(\n  inject(\"appStore\")(observer(HistogramEqualizationMenuItem))\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { isInRange } from \"../../../lib/Checks\";\nimport { operations } from \"wiplib\";\n\nconst { quantization } = operations;\n\nconst styles = {\n  inputsContainer: {\n    flexWrap: \"wrap\",\n    margin: \"1rem\"\n  },\n  input: {\n    margin: \"1rem\"\n  }\n};\n\n/**\n * Dialog to prompt the user for the amount of levels for the\n * quantization operation.\n */\nclass QuantizationDialog extends React.Component {\n  static propTypes = {\n    isOpen: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n  };\n\n  state = {\n    levels: 8,\n    errorMessage: \"\"\n  };\n\n  /** General listener for a change on the level input */\n  onChange = (\n    e,\n    valueStateName,\n    errorMessageStateName,\n    minPossibleValue,\n    maxPossibleValue\n  ) => {\n    const value = Number.parseFloat(e.target.value);\n\n    if (!isInRange(value, minPossibleValue, maxPossibleValue + 1)) {\n      this.setState({\n        [valueStateName]: e.target.value,\n        [errorMessageStateName]: `Required a number between ${minPossibleValue} and ${maxPossibleValue}`\n      });\n    } else {\n      this.setState({\n        [valueStateName]: value,\n        [errorMessageStateName]: \"\"\n      });\n    }\n  };\n\n  /** Listener for when the user changes the levels input value */\n  onLevelsChange = e => this.onChange(e, \"levels\", \"errorMessage\", 0, 8);\n\n  onSubmit = () => {\n    const { levels } = this.state;\n    const { appStore } = this.props;\n    const { index } = appStore.selectedGridItem;\n\n    appStore.addImage(\n      quantization(appStore.imagesInfos[index].imageBuffer, levels)\n    );\n    this.props.onClose();\n  };\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.isOpen}\n        onClose={this.props.onClose}\n        scroll=\"body\"\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Image Resample</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please, enter the amount of levels for the quantization\n          </DialogContentText>\n          <div className=\"center\" style={styles.inputsContainer}>\n            <TextField\n              error={!!this.state.errorMessage}\n              label={this.state.errorMessage}\n              type=\"number\"\n              placeholder={String(this.state.levels)}\n              value={this.state.levels}\n              onChange={this.onLevelsChange}\n              margin=\"dense\"\n              style={styles.input}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">Levels: </InputAdornment>\n                )\n              }}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.props.onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.onSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default withSnackbar(inject(\"appStore\")(observer(QuantizationDialog)));\n","import React from \"react\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport QuantizationDialog from \"./QuantizationDialog\";\n\nclass QuantizationMenuItem extends React.Component {\n  state = {\n    isDialogOpen: false\n  };\n\n  openDialog = () => {\n    const { appStore, enqueueSnackbar } = this.props;\n    const { type, index } = appStore.selectedGridItem;\n    if (type !== \"image\" || index < 0) {\n      enqueueSnackbar(\"You first need to select an image\", {\n        variant: \"warning\"\n      });\n    } else {\n      this.setState({ isDialogOpen: true });\n    }\n  };\n\n  closeDialog = () => this.setState({ isDialogOpen: false });\n\n  render() {\n    return (\n      <React.Fragment>\n        <MenuItem onClick={this.openDialog}>Quantization</MenuItem>\n        <QuantizationDialog\n          isOpen={this.state.isDialogOpen}\n          onClose={this.closeDialog}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(inject(\"appStore\")(observer(QuantizationMenuItem)));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { isInRange } from \"../../../lib/Checks\";\nimport { operations } from \"wiplib\";\n\nconst { hueRotation } = operations;\n\nconst styles = {\n  inputsContainer: {\n    flexWrap: \"wrap\",\n    margin: \"1rem\"\n  },\n  input: {\n    margin: \"1rem\"\n  }\n};\n\n/**\n * Dialog to prompt the user for the degrees for the new\n * image on the hue rotation operation\n */\nclass HueRotationDialog extends React.Component {\n  static propTypes = {\n    isOpen: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n  };\n\n  state = {\n    degrees: 0,\n    errorMessage: \"\"\n  };\n\n  /** General listener for a change on the degrees input */\n  onChange = (e, valueStateName, errorMessageStateName, errorMessage) => {\n    const value = Number.parseFloat(e.target.value);\n\n    if (!isInRange(value, 0, Number.POSITIVE_INFINITY)) {\n      this.setState({\n        [valueStateName]: e.target.value,\n        [errorMessageStateName]: errorMessage\n      });\n    } else {\n      this.setState({\n        [valueStateName]: value,\n        [errorMessageStateName]: \"\"\n      });\n    }\n  };\n\n  /** Listener for when the user changes the degrees input value */\n  onDegreesChange = e =>\n    this.onChange(\n      e,\n      \"degrees\",\n      \"errorMessage\",\n      \"Required a value equal or greater than 0\"\n    );\n\n  onSubmit = () => {\n    const { appStore } = this.props;\n    const { index } = appStore.selectedGridItem;\n\n    appStore.addImage(\n      hueRotation(appStore.imagesInfos[index].imageBuffer, this.state.degrees)\n    );\n\n    this.props.onClose();\n  };\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.isOpen}\n        onClose={this.props.onClose}\n        scroll=\"body\"\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Hue Rotation</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please, enter the degrees for the hue rotation operation\n          </DialogContentText>\n          <div className=\"center\" style={styles.inputsContainer}>\n            <TextField\n              error={!!this.state.errorMessage}\n              label={this.state.errorMessage}\n              type=\"number\"\n              placeholder=\"0\"\n              value={this.state.degrees}\n              onChange={this.onDegreesChange}\n              margin=\"dense\"\n              style={styles.input}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">Degrees: </InputAdornment>\n                )\n              }}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.props.onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.onSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default withSnackbar(inject(\"appStore\")(observer(HueRotationDialog)));\n","import React from \"react\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport HueRotationDialog from \"./HueRotationDialog\";\n\nclass HueRotationMenuItem extends React.Component {\n  state = {\n    isDialogOpen: false\n  };\n\n  openDialog = () => {\n    const { appStore, enqueueSnackbar } = this.props;\n    const { type, index } = appStore.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      enqueueSnackbar(\"You first need to select an image\", {\n        variant: \"warning\"\n      });\n      return;\n    }\n\n    this.setState({ isDialogOpen: true });\n  };\n\n  closeDialog = () => this.setState({ isDialogOpen: false });\n\n  render() {\n    return (\n      <React.Fragment>\n        <MenuItem onClick={this.openDialog}>Hue Rotation</MenuItem>\n        <HueRotationDialog\n          isOpen={this.state.isDialogOpen}\n          onClose={this.closeDialog}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(inject(\"appStore\")(observer(HueRotationMenuItem)));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { isInRange } from \"../../../lib/Checks\";\nimport { operations } from \"wiplib\";\n\nconst { saturateImage } = operations;\n\nconst styles = {\n  inputsContainer: {\n    flexWrap: \"wrap\",\n    margin: \"1rem\"\n  },\n  input: {\n    margin: \"1rem\"\n  }\n};\n\n/**\n * Dialog to prompt the user for the percentage for the new\n * image on the saturate image operation\n */\nclass SaturateImageDialog extends React.Component {\n  static propTypes = {\n    isOpen: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n  };\n\n  state = {\n    saturationPercentage: 100,\n    errorMessage: \"\"\n  };\n\n  /** General listener for a change on the saturation percentage input */\n  onChange = (e, valueStateName, errorMessageStateName, errorMessage) => {\n    const value = Number.parseFloat(e.target.value);\n\n    if (!isInRange(value, 0, Number.POSITIVE_INFINITY)) {\n      this.setState({\n        [valueStateName]: e.target.value,\n        [errorMessageStateName]: errorMessage\n      });\n    } else {\n      this.setState({\n        [valueStateName]: value,\n        [errorMessageStateName]: \"\"\n      });\n    }\n  };\n\n  /** Listener for when the user changes the saturation percentage input value */\n  onSaturationPercentageChange = e =>\n    this.onChange(\n      e,\n      \"saturationPercentage\",\n      \"errorMessage\",\n      \"Required a value equal or greater than 0\"\n    );\n\n  onSubmit = () => {\n    const { appStore } = this.props;\n    const { index } = appStore.selectedGridItem;\n\n    appStore.addImage(\n      saturateImage(appStore.imagesInfos[index].imageBuffer, this.state.saturationPercentage)\n    );\n\n    this.props.onClose();\n  };\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.isOpen}\n        onClose={this.props.onClose}\n        scroll=\"body\"\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Saturate Image</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please, enter the saturation percentage for the saturate image operation\n          </DialogContentText>\n          <div className=\"center\" style={styles.inputsContainer}>\n            <TextField\n              error={!!this.state.errorMessage}\n              label={this.state.errorMessage}\n              type=\"number\"\n              placeholder=\"100\"\n              value={this.state.saturationPercentage}\n              onChange={this.onSaturationPercentageChange}\n              margin=\"dense\"\n              style={styles.input}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">Saturation: </InputAdornment>\n                ),\n                endAdornment: (\n                  <InputAdornment position=\"end\">% </InputAdornment>\n                )\n              }}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.props.onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.onSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default withSnackbar(inject(\"appStore\")(observer(SaturateImageDialog)));\n","import React from \"react\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport SaturateImageDialog from \"./SaturateImageDialog\";\n\nclass SaturateImageMenuItem extends React.Component {\n  state = {\n    isDialogOpen: false\n  };\n\n  openDialog = () => {\n    const { appStore, enqueueSnackbar } = this.props;\n    const { type, index } = appStore.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      enqueueSnackbar(\"You first need to select an image\", {\n        variant: \"warning\"\n      });\n      return;\n    }\n\n    this.setState({ isDialogOpen: true });\n  };\n\n  closeDialog = () => this.setState({ isDialogOpen: false });\n\n  render() {\n    return (\n      <React.Fragment>\n        <MenuItem onClick={this.openDialog}>Saturate Image</MenuItem>\n        <SaturateImageDialog\n          isOpen={this.state.isDialogOpen}\n          onClose={this.closeDialog}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(inject(\"appStore\")(observer(SaturateImageMenuItem)));\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport LinearTransformationMenuItem from \"../../ImageProcessingUi/LinearTransformationMenuItem\";\nimport BrightnessAndContrastMenuItem from \"../../ImageProcessingUi/BrightnessAndContrastMenuItem\";\nimport GammaCorrectionMenuItem from \"../../ImageProcessingUi/GammaCorrectionMenuItem\";\nimport ImageDifferenceMenuItem from \"../../ImageProcessingUi/ImageDifferenceMenuItem\";\nimport ChangesDetectionMenuItem from \"../../ImageProcessingUi/ChangesDetectionMenuItem\";\nimport HistogramSpecificationMenuItem from \"../../ImageProcessingUi/HistogramSpecificationMenuItem\";\nimport GrayscaleMenuItem from \"../../ImageProcessingUi/GrayscaleMenuItem\";\nimport SepiaMenuItem from \"../../ImageProcessingUi/SepiaMenuItem\";\nimport HistogramEqualizationMenuItem from \"../../ImageProcessingUi/HistogramEqualizationMenuItem\";\nimport QuantizationMenuItem from \"../../ImageProcessingUi/QuantizationMenuItem\";\nimport HueRotationMenuItem from \"../../ImageProcessingUi/HueRotationMenuItem\";\nimport SaturateImageMenuItem from \"../../ImageProcessingUi/SaturateImageMenuItem\";\n\n/**\n * \"Point Operations\" Appbar Dropdown menu. Contains all the point operations\n * options that the user can choose\n */\nexport default class PointOperationsSubmenu extends React.Component {\n  state = {\n    open: false\n  };\n\n  handleToggle = () => {\n    this.setState(state => ({ open: !state.open }));\n  };\n\n  handleClose = event => {\n    if (this.anchorEl.contains(event.target)) {\n      return;\n    }\n\n    this.setState({ open: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <Button\n          buttonRef={node => {\n            this.anchorEl = node;\n          }}\n          aria-owns={this.state.open ? \"file-menu-list-grow\" : undefined}\n          aria-haspopup=\"true\"\n          onClick={this.handleToggle}\n          color=\"inherit\"\n        >\n          Point Operations\n        </Button>\n        <Popper\n          open={this.state.open}\n          style={this.state.open ? {} : { display: \"none\" }}\n          anchorEl={this.anchorEl}\n          transition\n          disablePortal\n        >\n          <Paper onClick={this.handleClose}>\n            <ClickAwayListener onClickAway={this.handleClose}>\n              <MenuList>\n                <GrayscaleMenuItem />\n                <SepiaMenuItem />\n                <LinearTransformationMenuItem />\n                <BrightnessAndContrastMenuItem />\n                <GammaCorrectionMenuItem />\n                <ImageDifferenceMenuItem />\n                <ChangesDetectionMenuItem />\n                <HistogramSpecificationMenuItem />\n                <HistogramEqualizationMenuItem />\n                <QuantizationMenuItem />\n                <HueRotationMenuItem />\n                <SaturateImageMenuItem />\n              </MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Popper>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FilesListMenu from \"../../Toolbar/FilesListMenu\";\n\nconst styles = {\n  inputsContainer: {\n    flexWrap: \"wrap\"\n  },\n  input: {\n    margin: \"1rem\"\n  },\n  center: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: \"1rem\",\n    marginBottom: \"1rem\"\n  }\n};\n\n/**\n * Dialog to prompt the user for the degrees, interpolation method\n * and \"rotate and print\" flag for the rotation operation.\n */\nexport default class ImageRotationDialog extends React.Component {\n  static propTypes = {\n    isOpen: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    interpolationMethods: PropTypes.array.isRequired\n  };\n\n  state = {\n    degrees: 0,\n    degreesErrorMessage: \"\",\n    rotateAndPaint: false,\n    interpolationMethod: this.props.interpolationMethods[0],\n    selectedInterpolationMethodIndex: 0\n  };\n\n  /** Listener for when the user changes the degrees input value */\n  onDegreesChange = e => {\n    if (!Number.parseFloat(e.target.value)) {\n      this.setState({\n        degrees: e.target.value,\n        degreesErrorMessage: \"Enter an amount of degrees\"\n      });\n    } else {\n      this.setState({\n        degrees: Number.parseFloat(e.target.value),\n        degreesErrorMessage: \"\"\n      });\n    }\n  };\n\n  /** Listener for when the user changes the rotate and paint*/\n  onRotateAndPaintChange = e => {\n    this.setState({\n      rotateAndPaint: e.target.checked\n    });\n  };\n\n  /** Listener for when the user changes the interpolation method */\n  onInterpolationMethodChange = e =>\n    this.setState({\n      interpolationMethod: e.selectedItemName,\n      selectedInterpolationMethodIndex: e.selectedItemIndex\n    });\n\n  onSubmit = () => {\n    const { degrees, rotateAndPaint, interpolationMethod } = this.state;\n    this.props.onSubmit({\n      degrees,\n      rotateAndPaint,\n      interpolationMethod\n    });\n  };\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.isOpen}\n        onClose={this.props.onClose}\n        scroll=\"body\"\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Image rotation</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please, enter the rotation parameters\n          </DialogContentText>\n          <div className=\"center\" style={styles.inputsContainer}>\n            <div style={styles.center}>\n              <TextField\n                error={!!this.state.degreesErrorMessage}\n                label={this.state.degreesErrorMessage}\n                type=\"number\"\n                placeholder=\"0\"\n                value={this.state.degrees}\n                onChange={this.onDegreesChange}\n                margin=\"dense\"\n                style={styles.input}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">Degrees: </InputAdornment>\n                  )\n                }}\n              />\n            </div>\n            <FilesListMenu\n              menuTitle=\"Interpolation method\"\n              options={this.props.interpolationMethods}\n              onItemSelection={this.onInterpolationMethodChange}\n              isDisabled={this.state.rotateAndPaint}\n              selectedItemIndex={this.state.selectedInterpolationMethodIndex}\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.rotateAndPaint}\n                  onChange={this.onRotateAndPaintChange}\n                  value=\"rotateAndPaint\"\n                  color=\"primary\"\n                />\n              }\n              label=\"Rotate and paint\"\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.props.onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.onSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n","import React from \"react\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ImageRotationDialog from \"./ImageRotationDialog\";\nimport { operations } from \"wiplib\";\n\nconst { interpolationMethods, imageRotation } = operations;\n\nclass ImageRotationMenuItem extends React.Component {\n  state = {\n    isDialogOpen: false\n  };\n\n  openDialog = () => {\n    const { appStore, enqueueSnackbar } = this.props;\n    const { type, index } = appStore.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      enqueueSnackbar(\"You first need to select an image\", {\n        variant: \"warning\"\n      });\n      return;\n    }\n\n    this.setState({ isDialogOpen: true });\n  };\n\n  closeDialog = () => this.setState({ isDialogOpen: false });\n\n  rotateCurrentImage = ({ degrees, rotateAndPaint, interpolationMethod }) => {\n    const { appStore } = this.props;\n    const { index } = appStore.selectedGridItem;\n\n    appStore.addImage(\n      imageRotation(\n        appStore.imagesInfos[index].imageBuffer,\n        degrees,\n        interpolationMethods[interpolationMethod],\n        rotateAndPaint\n      )\n    );\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <MenuItem onClick={this.openDialog}>Rotation</MenuItem>\n        <ImageRotationDialog\n          isOpen={this.state.isDialogOpen}\n          onClose={this.closeDialog}\n          onSubmit={rotationInfo => {\n            this.closeDialog();\n            this.rotateCurrentImage(rotationInfo);\n          }}\n          interpolationMethods={Object.keys(interpolationMethods)}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(\n  inject(\"appStore\")(observer(ImageRotationMenuItem))\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FilesListMenu from \"../../Toolbar/FilesListMenu\";\n\nconst styles = {\n  inputsContainer: {\n    flexWrap: \"wrap\"\n  },\n  input: {\n    margin: \"1rem\"\n  },\n  center: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: \"0.4rem\",\n    marginBottom: \"0.4rem\"\n  }\n};\n\n/**\n * Dialog to prompt the user for the new dimensions and\n * interpolation method for the resizing operation.\n */\nexport default class ImageResizingDialog extends React.Component {\n  static propTypes = {\n    oldWidth: PropTypes.number.isRequired,\n    oldHeight: PropTypes.number.isRequired,\n    isOpen: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    interpolationMethods: PropTypes.array.isRequired\n  };\n\n  state = {\n    width: this.props.oldWidth,\n    widthPercentage: 100,\n    widthErrorMessage: \"\",\n    height: this.props.oldHeight,\n    heightPercentage: 100,\n    heightErrorMessage: \"\",\n    interpolationMethod: this.props.interpolationMethods[0],\n    selectedInterpolationMethodIndex: 0,\n    formChanged: false\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    if (\n      !state.formChanged &&\n      (props.oldHeight !== state.height || props.oldWidth !== state.width)\n    ) {\n      return {\n        height: props.oldHeight,\n        width: props.oldWidth,\n        widthPercentage: 100,\n        heightPercentage: 100,\n        widthErrorMessage:\n          props.oldWidth <= 0 ? \"Width must be greater than 0\" : \"\",\n        heightErrorMessage:\n          props.oldHeight <= 0 ? \"Height must be greater than 0\" : \"\"\n      };\n    }\n\n    if (props.oldHeight === 0 && props.oldWidth === 0) {\n      return {\n        widthErrorMessage: \"Select an image\",\n        heightErrorMessage: \"Select an image\",\n        width: 0,\n        widthPercentage: 0,\n        height: 0,\n        heightPercentage: 0\n      };\n    }\n    return null;\n  }\n\n  /** General listener for when the user changes dimension inputs */\n  onDimensionsChange = (\n    e,\n    dimensionName,\n    dimensionStateName,\n    oldDimensionPropName,\n    percentageStateName,\n    errorMessageStateName,\n    isPercentage\n  ) => {\n    const value = Number.parseFloat(e.target.value);\n    let dimension;\n    let percentage;\n    if (!isPercentage) {\n      dimension = Math.round(value);\n      percentage = (dimension * 100) / this.props[oldDimensionPropName];\n    } else {\n      dimension = Math.floor((value / 100) * this.props[oldDimensionPropName]);\n      percentage = value;\n    }\n    if (dimension < 1 || Number.isNaN(value)) {\n      this.setState({\n        [dimensionStateName]: isPercentage ? \"\" : e.target.value,\n        [percentageStateName]: isPercentage ? e.target.value : \"\",\n        [errorMessageStateName]: dimensionName + \" must be greater than 0\",\n        formChanged: true\n      });\n    } else {\n      this.setState({\n        [dimensionStateName]: isPercentage ? dimension : value,\n        [percentageStateName]: isPercentage ? value : percentage,\n        [errorMessageStateName]: \"\",\n        formChanged: true\n      });\n    }\n  };\n\n  /** Listener for when the user changes width input */\n  onWidthChange = e =>\n    this.onDimensionsChange(\n      e,\n      \"Width\",\n      \"width\",\n      \"oldWidth\",\n      \"widthPercentage\",\n      \"widthErrorMessage\",\n      false\n    );\n\n  /** Listener for when the user changes height input */\n  onHeightChange = e =>\n    this.onDimensionsChange(\n      e,\n      \"Height\",\n      \"height\",\n      \"oldHeight\",\n      \"heightPercentage\",\n      \"heightErrorMessage\",\n      false\n    );\n\n  /** Listener for when the user changes width percentage input */\n  onWidthPercentageChange = e =>\n    this.onDimensionsChange(\n      e,\n      \"Width\",\n      \"width\",\n      \"oldWidth\",\n      \"widthPercentage\",\n      \"widthErrorMessage\",\n      true\n    );\n\n  /** Listener for when the user changes height percentage input */\n  onHeightPercentageChange = e =>\n    this.onDimensionsChange(\n      e,\n      \"Height\",\n      \"height\",\n      \"oldHeight\",\n      \"heightPercentage\",\n      \"heightErrorMessage\",\n      true\n    );\n\n  /** Listener for when the user changes the interpolation method */\n  onInterpolationMethodChange = e =>\n    this.setState({\n      interpolationMethod: e.selectedItemName,\n      selectedInterpolationMethodIndex: e.selectedItemIndex\n    });\n\n  onSubmit = () => {\n    //TODO: Check resizing parameters\n    this.setState({\n      formChanged: false\n    });\n    const {\n      widthPercentage,\n      heightPercentage,\n      interpolationMethod\n    } = this.state;\n    this.props.onSubmit({\n      widthPercentage,\n      heightPercentage,\n      interpolationMethod\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      formChanged: false\n    });\n    this.props.onClose();\n  };\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.isOpen}\n        onClose={this.props.onClose}\n        scroll=\"body\"\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Image resizing</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please, enter the resizing parameters\n          </DialogContentText>\n          <div style={styles.center}>\n            <TextField\n              error={!!this.state.widthErrorMessage}\n              label={this.state.widthErrorMessage}\n              type=\"number\"\n              placeholder={String(this.props.oldWidth)}\n              value={this.state.width}\n              onChange={this.onWidthChange}\n              margin=\"dense\"\n              style={styles.input}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">Width: </InputAdornment>\n                ),\n                endAdornment: (\n                  <InputAdornment position=\"end\">px </InputAdornment>\n                )\n              }}\n            />\n            <TextField\n              error={!!this.state.heightErrorMessage}\n              label={this.state.heightErrorMessage}\n              type=\"number\"\n              placeholder={String(this.props.oldHeight)}\n              value={this.state.height}\n              onChange={this.onHeightChange}\n              margin=\"dense\"\n              style={styles.input}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">Height: </InputAdornment>\n                ),\n                endAdornment: (\n                  <InputAdornment position=\"end\">px </InputAdornment>\n                )\n              }}\n            />\n          </div>\n          <div className=\"center\" style={styles.inputsContainer}>\n            <div style={styles.center}>\n              <TextField\n                error={!!this.state.widthErrorMessage}\n                label={this.state.widthErrorMessage}\n                type=\"number\"\n                placeholder=\"100\"\n                value={this.state.widthPercentage}\n                onChange={this.onWidthPercentageChange}\n                margin=\"dense\"\n                style={styles.input}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      Percentage:{\" \"}\n                    </InputAdornment>\n                  ),\n                  endAdornment: (\n                    <InputAdornment position=\"end\">% </InputAdornment>\n                  )\n                }}\n              />\n              <TextField\n                error={!!this.state.heightErrorMessage}\n                label={this.state.heightErrorMessage}\n                type=\"number\"\n                placeholder=\"100\"\n                value={this.state.heightPercentage}\n                onChange={this.onHeightPercentageChange}\n                margin=\"dense\"\n                style={styles.input}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      Percentage:{\" \"}\n                    </InputAdornment>\n                  ),\n                  endAdornment: (\n                    <InputAdornment position=\"end\">% </InputAdornment>\n                  )\n                }}\n              />\n            </div>\n            <FilesListMenu\n              menuTitle=\"Interpolation method\"\n              options={this.props.interpolationMethods}\n              onItemSelection={this.onInterpolationMethodChange}\n              selectedItemIndex={this.state.selectedInterpolationMethodIndex}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.onSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n","import React from \"react\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ImageResizingDialog from \"./ImageResizingDialog\";\nimport { operations } from \"wiplib\";\n\nconst { interpolationMethods, imageResizing } = operations;\n\nclass ImageResizeMenuItem extends React.Component {\n  state = {\n    isDialogOpen: false\n  };\n\n  openDialog = () => {\n    const { appStore, enqueueSnackbar } = this.props;\n    const { type, index } = appStore.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      enqueueSnackbar(\"You first need to select an image\", {\n        variant: \"warning\"\n      });\n      return;\n    }\n\n    this.setState({ isDialogOpen: true });\n  };\n\n  closeDialog = () => this.setState({ isDialogOpen: false });\n\n  resizeCurrentImage = ({\n    widthPercentage,\n    heightPercentage,\n    interpolationMethod\n  }) => {\n    const { appStore } = this.props;\n    const { index } = appStore.selectedGridItem;\n\n    appStore.addImage(\n      imageResizing(\n        appStore.imagesInfos[index].imageBuffer,\n        widthPercentage,\n        heightPercentage,\n        interpolationMethods[interpolationMethod]\n      )\n    );\n  };\n\n  render() {\n    const { appStore } = this.props;\n    const { type, index } = appStore.selectedGridItem;\n    let selectedImageDimensions = { width: 0, height: 0 };\n\n    if (type === \"image\" && index >= 0) {\n      const imgBuffer = appStore.imagesInfos[index].imageBuffer;\n\n      selectedImageDimensions = {\n        width: imgBuffer.width,\n        height: imgBuffer.height\n      };\n    }\n\n    return (\n      <React.Fragment>\n        <MenuItem onClick={this.openDialog}>Resize</MenuItem>\n        <ImageResizingDialog\n          oldWidth={selectedImageDimensions.width}\n          oldHeight={selectedImageDimensions.height}\n          isOpen={this.state.isDialogOpen}\n          onClose={this.closeDialog}\n          onSubmit={resizeInfo => {\n            this.closeDialog();\n            this.resizeCurrentImage(resizeInfo);\n          }}\n          interpolationMethods={Object.keys(interpolationMethods)}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(inject(\"appStore\")(observer(ImageResizeMenuItem)));\n","import React from \"react\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { operations } from \"wiplib\";\n\nconst { mirror } = operations;\n\nclass VerticalMirrorMenuItem extends React.Component {\n  currentImageVerticalMirror = () => {\n    const { appStore, enqueueSnackbar } = this.props;\n    const { type, index } = appStore.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      enqueueSnackbar(\"You first need to select an image\", {\n        variant: \"warning\"\n      });\n    } else {\n      appStore.addImage(\n        mirror.vertical(appStore.imagesInfos[index].imageBuffer)\n      );\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <MenuItem onClick={this.currentImageVerticalMirror}>\n          Vertical Mirror\n        </MenuItem>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(\n  inject(\"appStore\")(observer(VerticalMirrorMenuItem))\n);\n","import React from \"react\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { operations } from \"wiplib\";\n\nconst { mirror } = operations;\n\nclass HorizontalMirrorMenuItem extends React.Component {\n  currentImageHorizontalMirror = () => {\n    const { appStore, enqueueSnackbar } = this.props;\n    const { type, index } = appStore.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      enqueueSnackbar(\"You first need to select an image\", {\n        variant: \"warning\"\n      });\n    } else {\n      appStore.addImage(\n        mirror.horizontal(appStore.imagesInfos[index].imageBuffer)\n      );\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <MenuItem onClick={this.currentImageHorizontalMirror}>\n          Horizontal Mirror\n        </MenuItem>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(\n  inject(\"appStore\")(observer(HorizontalMirrorMenuItem))\n);\n","import React from \"react\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { operations } from \"wiplib\";\n\nconst { imageTranspose } = operations;\n\nclass ImageTransposeMenuItem extends React.Component {\n  transposeImage = () => {\n    const { appStore, enqueueSnackbar } = this.props;\n    const { type, index } = appStore.selectedGridItem;\n\n    if (type !== \"image\" || index < 0) {\n      enqueueSnackbar(\"You first need to select an image\", {\n        variant: \"warning\"\n      });\n    } else {\n      appStore.addImage(\n        imageTranspose(appStore.imagesInfos[index].imageBuffer)\n      );\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <MenuItem onClick={this.transposeImage}>Image Transpose</MenuItem>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(\n  inject(\"appStore\")(observer(ImageTransposeMenuItem))\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { isInRange } from \"../../../lib/Checks\";\nimport { operations } from \"wiplib\";\n\nconst { imageResampling } = operations;\n\nconst styles = {\n  inputsContainer: {\n    flexWrap: \"wrap\",\n    margin: \"1rem\"\n  },\n  input: {\n    margin: \"1rem\"\n  }\n};\n\n/**\n * Dialog to prompt the user for the pixel block width and height\n * on the resample operation\n */\nclass ImageResampleDialog extends React.Component {\n  static propTypes = {\n    isOpen: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n  };\n\n  state = {\n    blockWidth: 1,\n    blockWidthErrorMessage: \"\",\n    blockHeight: 1,\n    blockHeightErrorMessage: \"\"\n  };\n\n  /** General listener for a change on the block width or height inputs */\n  onChange = (\n    e,\n    valueStateName,\n    errorMessageStateName,\n    minPossibleValue,\n    maxPossibleValue\n  ) => {\n    const value = Number.parseFloat(e.target.value);\n\n    if (!isInRange(value, minPossibleValue, maxPossibleValue + 1)) {\n      this.setState({\n        [valueStateName]: e.target.value,\n        [errorMessageStateName]: `Required a number between ${minPossibleValue} and ${maxPossibleValue}`\n      });\n    } else {\n      this.setState({\n        [valueStateName]: value,\n        [errorMessageStateName]: \"\"\n      });\n    }\n  };\n\n  /** Listener for when the user changes the block width input value */\n  onBlockWidthChange = e => {\n    const { index } = this.props.appStore.selectedGridItem;\n    const { imageBuffer } = this.props.appStore.imagesInfos[index];\n    this.onChange(\n      e,\n      \"blockWidth\",\n      \"blockWidthErrorMessage\",\n      1,\n      imageBuffer.width\n    );\n  };\n\n  /** Listener for when the user changes the block height input value */\n  onBlockHeightChange = e => {\n    const { index } = this.props.appStore.selectedGridItem;\n    const { imageBuffer } = this.props.appStore.imagesInfos[index];\n    this.onChange(\n      e,\n      \"blockHeight\",\n      \"blockHeightErrorMessage\",\n      1,\n      imageBuffer.height\n    );\n  };\n\n  onSubmit = () => {\n    const { blockWidth, blockHeight } = this.state;\n    const { appStore } = this.props;\n    const { index } = appStore.selectedGridItem;\n\n    appStore.addImage(\n      imageResampling(\n        appStore.imagesInfos[index].imageBuffer,\n        blockWidth,\n        blockHeight\n      )\n    );\n    this.props.onClose();\n  };\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.isOpen}\n        onClose={this.props.onClose}\n        scroll=\"body\"\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Image Resample</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please, enter the pixels block width and height\n          </DialogContentText>\n          <div className=\"center\" style={styles.inputsContainer}>\n            <TextField\n              error={!!this.state.blockWidthErrorMessage}\n              label={this.state.blockWidthErrorMessage}\n              type=\"number\"\n              placeholder={String(this.state.blockWidth)}\n              value={this.state.blockWidth}\n              onChange={this.onBlockWidthChange}\n              margin=\"dense\"\n              style={styles.input}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">Width: </InputAdornment>\n                )\n              }}\n            />\n            <TextField\n              error={!!this.state.blockHeightErrorMessage}\n              label={this.state.blockHeightErrorMessage}\n              type=\"number\"\n              placeholder={String(this.state.blockHeight)}\n              value={this.state.blockHeight}\n              onChange={this.onBlockHeightChange}\n              margin=\"dense\"\n              style={styles.input}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">Height: </InputAdornment>\n                )\n              }}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.props.onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.onSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default withSnackbar(inject(\"appStore\")(observer(ImageResampleDialog)));\n","import React from \"react\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ImageResampleDialog from \"./ImageResampleDialog\";\n\nclass ImageResampleMenuItem extends React.Component {\n  state = {\n    isDialogOpen: false\n  };\n\n  openDialog = () => {\n    const { appStore, enqueueSnackbar } = this.props;\n    const { type, index } = appStore.selectedGridItem;\n    if (type !== \"image\" || index < 0) {\n      enqueueSnackbar(\"You first need to select an image\", {\n        variant: \"warning\"\n      });\n    } else {\n      this.setState({ isDialogOpen: true });\n    }\n  };\n\n  closeDialog = () => this.setState({ isDialogOpen: false });\n\n  render() {\n    return (\n      <React.Fragment>\n        <MenuItem onClick={this.openDialog}>Image Resample</MenuItem>\n        <ImageResampleDialog\n          isOpen={this.state.isDialogOpen}\n          onClose={this.closeDialog}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(\n  inject(\"appStore\")(observer(ImageResampleMenuItem))\n);\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ImageRotationMenuItem from \"../../ImageProcessingUi/ImageRotationMenuItem\";\nimport ImageResizeMenuItem from \"../../ImageProcessingUi/ImageResizeMenuItem\";\nimport VerticalMirrorMenuItem from \"../../ImageProcessingUi/VerticalMirrorMenuItem\";\nimport HorizontalMirrorMenuItem from \"../../ImageProcessingUi/HorizontalMirrorMenuItem\";\nimport ImageTransposeMenuItem from \"../../ImageProcessingUi/ImageTransposeMenuItem\";\nimport ImageResampleMenuItem from \"../../ImageProcessingUi/ImageResampleMenuItem\";\n\n/**\n * \"Geometric Operations\" Appbar Dropdown menu. Contains all the geometric operations\n * options that the user can choose\n */\nexport default class GeometricOperationsSubmenu extends React.Component {\n  state = {\n    open: false\n  };\n\n  handleToggle = () => {\n    this.setState(state => ({ open: !state.open }));\n  };\n\n  handleClose = event => {\n    if (this.anchorEl.contains(event.target)) {\n      return;\n    }\n    this.setState({ open: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <Button\n          buttonRef={node => {\n            this.anchorEl = node;\n          }}\n          aria-owns={this.state.open ? \"file-menu-list-grow\" : undefined}\n          aria-haspopup=\"true\"\n          onClick={this.handleToggle}\n          color=\"inherit\"\n        >\n          Geometric Operations\n        </Button>\n        <Popper\n          open={this.state.open}\n          style={this.state.open ? {} : { display: \"none\" }}\n          anchorEl={this.anchorEl}\n          transition\n          disablePortal\n        >\n          <Paper onClick={this.handleClose}>\n            <ClickAwayListener onClickAway={this.handleClose}>\n              <MenuList>\n                <ImageRotationMenuItem />\n                <ImageResizeMenuItem />\n                <VerticalMirrorMenuItem />\n                <HorizontalMirrorMenuItem />\n                <ImageTransposeMenuItem />\n                <ImageResampleMenuItem />\n              </MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Popper>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport FileSubmenu from \"./Submenus/FileSubmenu\";\nimport ImageSubmenu from \"./Submenus/ImageSubmenu\";\nimport PointOperationsSubmenu from \"./Submenus/PointOperationsSubmenu\";\nimport GeometricOperationsSubmenu from \"./Submenus/GeometricOperationsSubmenu\";\n\nconst AppToolbar = () => (\n  <AppBar position=\"static\">\n    <Toolbar>\n      <FileSubmenu />\n      <ImageSubmenu />\n      <PointOperationsSubmenu />\n      <GeometricOperationsSubmenu />\n    </Toolbar>\n  </AppBar>\n);\n\nexport default AppToolbar;\n\n//                 <a className=\"navbar-item\" href=\"https://github.com/carlosdg/ImageProcessor.git\">\n//                     <img alt=\"logo\" src=\"https://i.imgur.com/DckFstm.png\" height=\"50\"/>\n//                 </a>\n","import React from \"react\";\nimport { calculateRect } from \"../../lib/coordinates\";\n\nconst SelectionOverlay = ({ originCoords, endCoords }) => {\n  const position = calculateRect(originCoords, endCoords);\n  return (\n    position.bottom - position.top > 0 && \n    position.right - position.left > 0 && \n      <div\n        className=\"region-select\"\n        style={{\n          width: `${position.right - position.left - 1}px`,\n          height: `${position.bottom - position.top - 1}px`,\n          top: position.top + \"px\",\n          left: position.left + \"px\",\n          right: position.right + \"px\",\n          bottom: position.bottom + \"px\",\n        }}\n      />\n  );\n};\n\nexport default SelectionOverlay;\n","import React from \"react\";\n\n/**\n * Line to show when the user is dragging the mouse over a canvas to\n * select a profile of the image\n */\nconst LineOverlay = ({ originCoords, endCoords }) => (\n  <svg\n    style={{\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    }}\n    height=\"100%\"\n    width=\"100%\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <line\n      stroke=\"#000\"\n      strokeWidth=\"2\"\n      x1={originCoords.x}\n      y1={originCoords.y}\n      x2={endCoords.x}\n      y2={endCoords.y}\n    />\n  </svg>\n);\nexport default LineOverlay;\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport CropSquareIcon from \"@material-ui/icons/CropSquare\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport \"./SelectionToolbar.css\";\n\nclass SelectionToolbar extends React.Component {\n  render() {\n    const {\n      imageSelectionMehod,\n      updateImageSelectionMehod\n    } = this.props.appStore;\n\n    return (\n      <Toolbar className=\"selection-toolbar\">\n        <Button\n          style={\n            imageSelectionMehod !== \"selection\"\n              ? { margin: \"0 0.5rem\" }\n              : {\n                  margin: \"0 0.5rem\",\n                  backgroundColor: \"#3f51b5\",\n                  color: \"white\"\n                }\n          }\n          onClick={() => updateImageSelectionMehod(\"selection\")}\n        >\n          <Tooltip\n            title=\"Select a portion of an image\"\n            aria-label=\"Select a portion of an image\"\n          >\n            <CropSquareIcon />\n          </Tooltip>\n        </Button>\n        <Button\n          style={\n            imageSelectionMehod !== \"line\"\n              ? { margin: \"0 0.5rem\" }\n              : {\n                  margin: \"0 0.5rem\",\n                  backgroundColor: \"#3f51b5\",\n                  color: \"white\"\n                }\n          }\n          onClick={() => updateImageSelectionMehod(\"line\")}\n        >\n          <Tooltip\n            title=\"Select a line in the image to create a profile\"\n            aria-label=\"Select a line in the image to create a profile\"\n          >\n            <EditIcon />\n          </Tooltip>\n        </Button>\n      </Toolbar>\n    );\n  }\n}\n\nexport default inject(\"appStore\")(observer(SelectionToolbar));\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport DeleteButton from \"../DeleteButton\";\nimport \"./RightSideMenu.css\";\n\nclass RightSideMenu extends React.Component {\n  render() {\n    return (\n      <div\n        className=\"right-side-menu-container\"\n        style={{\n          width: !this.props.appStore.rightSideMenu.open ? \"0px\" : \"\"\n        }}\n      >\n        <div className=\"right-side-menu-title\">\n          <DeleteButton\n            onDelete={this.props.appStore.closeRightSideMenu}\n            style={{ visibility: \"hidden\", width: \"2rem\", height: \"2rem\", marginLeft: \"1rem\" }}\n          />\n          <span>{this.props.appStore.rightSideMenu.menuTitle}</span>\n          <DeleteButton\n            onDelete={this.props.appStore.closeRightSideMenu}\n            style={{ width: \"2rem\", height: \"2rem\", marginRight: \"1rem\" }}\n          />\n\n        </div>\n        <div className=\"right-side-menu-feed\">\n          {this.props.appStore.rightSideMenu.menuContent.map(\n            (menuItem, index) => {\n              return (\n                  <React.Fragment key={index}>\n                    {menuItem}\n                  </React.Fragment>\n              );\n            }\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default inject(\"appStore\")(observer(RightSideMenu));\n","import React, { Component } from \"react\";\nimport InteractiveGrid from \"../InteractiveGrid\";\nimport ImageComponent from \"../ImageComponent\";\nimport AppToolbar from \"../Toolbar\";\nimport \"./App.css\";\nimport { withSnackbar } from \"notistack\";\nimport { observer, inject } from \"mobx-react\";\nimport SelectionOverlay from \"../Overlays/SelectionOverlay\";\nimport LineOverlay from \"../Overlays/LineOverlay\";\nimport { calculateRect } from \"../../lib/coordinates\";\nimport SelectionToolbar from \"../Toolbar/SelectionToolbar\";\nimport RightSideMenu from \"../RightSideMenu\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass App extends Component {\n  /** Callback that updates the pixel value and coordinates currently under the\n   * user's mouse */\n  onMouseMoveOverImage = (pixelCoords, pixelValue) => {\n    this.props.appStore.setCurrentPixel(pixelCoords, pixelValue);\n  };\n\n  /** Returns a callback that updates the region of the asked image info */\n  onImageRegionSelection = index => ({ originCoords, endCoords }) => {\n    const { top, left, right, bottom } = calculateRect(originCoords, endCoords);\n\n    const newRegion = {\n      top,\n      left,\n      width: right - left,\n      height: bottom - top\n    };\n\n    if (newRegion.width !== 0 && newRegion.height !== 0) {\n      this.props.appStore.updateImageRegion(index, newRegion);\n    }\n  };\n\n  getImageOverlay = () => {\n    switch (this.props.appStore.imageSelectionMehod) {\n      case \"selection\":\n        return ({ originCoords, endCoords }) => (\n          <SelectionOverlay originCoords={originCoords} endCoords={endCoords} />\n        );\n      case \"line\":\n        return ({ originCoords, endCoords }) => (\n          <LineOverlay originCoords={originCoords} endCoords={endCoords} />\n        );\n      default:\n        throw new Error(\n          `Invalid option ${this.props.appStore.imageSelectionMehod}`\n        );\n    }\n  };\n\n  getDisplayForPixelUnderMouse() {\n    const { pixelValue, pixelCoords } = this.props.appStore;\n    const currentPixelRgbaValue = `rgba(${pixelValue.join(\", \")})`;\n    return (\n      <div\n        style={{\n          display: \"flex\"\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            margin: \"0.4rem\",\n            borderRadius: \"5px\",\n            width: \"250px\",\n            border: \"1px solid #000\",\n            boxShadow: `1px 1px 10px -5px ${currentPixelRgbaValue}`,\n            overflow: \"hidden\"\n          }}\n        >\n          <span\n            style={{\n              width: \"2.5rem\",\n              height: \"1.9rem\",\n              backgroundColor: currentPixelRgbaValue\n            }}\n          />\n          <span\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              marginLeft: \"10px\",\n              paddingRight: \"10px\"\n            }}\n          >\n            {currentPixelRgbaValue}\n          </span>\n        </div>\n        <div\n          style={{\n            width: \"130px\",\n            display: \"flex\",\n            margin: \"0.4rem\",\n            borderRadius: \"5px\",\n            border: \"1px solid #000\",\n            boxShadow: \"1px 1px 10px -5px black\"\n          }}\n        >\n          <span\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              padding: \"0 10px 0\"\n            }}\n          >\n            <FontAwesomeIcon style={{ marginRight: \"5px\" }} icon=\"arrows-alt\" />\n            {pixelCoords.x}, {pixelCoords.y}\n          </span>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"app-container\">\n          <AppToolbar />\n          <SelectionToolbar />\n          <main className=\"main\">\n            <div\n              className=\"main__wrapper\"\n              style={\n                !this.props.appStore.rightSideMenu.open\n                  ? {\n                      width: \"100%\"\n                    }\n                  : {}\n              }\n            >\n              {this.getGridComponent()}\n            </div>\n            <RightSideMenu />\n          </main>\n          <footer\n            style={{\n              boxShadow: \"-3px 0px 10px -5px rgba(0, 0, 0, 0.8)\"\n            }}\n          >\n            {this.getDisplayForPixelUnderMouse()}\n          </footer>\n        </div>\n      </div>\n    );\n  }\n\n  // Methods to keep the render method cleaner\n\n  getGridComponent() {\n    return (\n      <InteractiveGrid.Grid\n        key={this.props.appStore.rightSideMenu.open}\n        layouts={this.props.appStore.gridLayouts}\n        onLayoutChange={this.props.appStore.updateLayout}\n      >\n        {this.props.appStore.imagesInfos.map((image, index) =>\n          this.getImageGridItem(image, index)\n        )}\n      </InteractiveGrid.Grid>\n    );\n  }\n\n  getImageGridItem({ imageBuffer, key }, index) {\n    return (\n      <InteractiveGrid.Item\n        key={key}\n        id={index}\n        name={key}\n        onDelete={this.props.appStore.removeImageInfo}\n        onSelect={() => this.props.appStore.updateSelectedImageItem(index)}\n        isSelected={this.props.appStore.isGridItemSelected(\"image\", index)}\n      >\n        <div className=\"center\">\n          <div className=\"scrollable\">\n            <ImageComponent\n              rgbaImage={imageBuffer}\n              onMouseMove={this.onMouseMoveOverImage}\n              onSelection={this.onImageRegionSelection(index)}\n            >\n              {this.getImageOverlay()}\n            </ImageComponent>\n          </div>\n        </div>\n      </InteractiveGrid.Item>\n    );\n  }\n}\n\nexport default withSnackbar(inject(\"appStore\")(observer(App)));\n","import GRID_PROPERTIES from \"./gridProperties\";\n\n/**\n * Returns an emoty object of layouts for different viewport sizes, as defined\n * in GRID_PROPERTIES.\n */\nconst createNewSetOfLayouts = () => {\n  const layouts = {};\n\n  Object.keys(GRID_PROPERTIES.GRID_COLUMNS).forEach(\n    layoutName => (layouts[layoutName] = [])\n  );\n\n  return layouts;\n};\n\n/**\n * Returns an object defining the default information for being part of a grid\n * layout\n */\nconst createNewElementLayoutInfo = id => ({\n  i: id,\n  x: 0,\n  y: Infinity,\n  w: GRID_PROPERTIES.DEFAULT_GRID_ITEM_COLS,\n  h: GRID_PROPERTIES.DEFAULT_GRID_ITEM_ROWS,\n  minW: GRID_PROPERTIES.DEFAULT_GRID_ITEM_COLS,\n  minH: GRID_PROPERTIES.DEFAULT_GRID_ITEM_ROWS\n});\n\n/**\n * Returns a new set set of layouts resulting from adding a default layout\n * information for the new elements with the given IDs\n *\n * @param {Object} currentLayouts Layouts object to where the new element\n * information is going to be added\n * @param {Array<String | number>} newElementsIds IDs of the elements to add to\n * the layout\n */\nconst addNewElementsToLayouts = (currentLayouts, newElementsIds) => {\n  const newElementsLayoutInfos = newElementsIds.map(createNewElementLayoutInfo);\n  const newLayouts = createNewSetOfLayouts();\n\n  Object.keys(currentLayouts).forEach(layoutName => {\n    newLayouts[layoutName] = currentLayouts[layoutName].concat(\n      newElementsLayoutInfos\n    );\n  });\n\n  return newLayouts;\n};\n\n/**\n * Returns a new set of layouts without the elements with the given IDs\n *\n * @param {Object} currentLayouts Layouts object\n * @param {Array<String | number>} ids IDs of the elements to remove\n */\nconst removeElementsFromLayout = (currentLayouts, ids) => {\n  const newLayouts = {};\n\n  Object.keys(currentLayouts).forEach(layoutName => {\n    newLayouts[layoutName] = currentLayouts[layoutName].filter(\n      ({ i }) => !ids.includes(i)\n    );\n  });\n\n  return newLayouts;\n};\n\nexport {\n  createNewSetOfLayouts,\n  addNewElementsToLayouts,\n  removeElementsFromLayout\n};\n","import React, { Component } from \"react\";\nimport \"react-vis/dist/style.css\";\nimport {\n  FlexibleXYPlot,\n  XAxis,\n  YAxis,\n  VerticalGridLines,\n  HorizontalGridLines,\n  VerticalRectSeries,\n  Hint\n} from \"react-vis\";\n\nclass HistogramComponent extends Component {\n  state = {\n    emphasizedValue: null,\n    histogramVisualizationData: [],\n    colorName: this.props.colorName\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    if (\n      (state.colorName && props.colorName !== state.colorName) ||\n      state.histogramVisualizationData !== props.histogramVisualizationData\n    ) {\n      return {\n        emphasizedValue: state.emphasizedValue,\n        histogramVisualizationData: props.histogram.map((value, index) => ({\n          x0: index,\n          x: index + 1,\n          y: value\n        })),\n        colorName: props.colorName\n      };\n    }\n    return null;\n  }\n\n  componentDidMount() {\n    this.setState({\n      histogramVisualizationData: this.props.histogram.map((value, index) => ({\n        x0: index,\n        x: index + 1,\n        y: value\n      }))\n    });\n  }\n\n  render() {\n    return (\n      <FlexibleXYPlot\n        margin={{\n          left: 70\n        }}\n        onMouseLeave={() => this.setState({ emphasizedValue: null })}\n      >\n        <VerticalGridLines />\n        <HorizontalGridLines />\n        <XAxis />\n        <YAxis />\n        <VerticalRectSeries\n          onNearestX={value => this.setState({ emphasizedValue: value })}\n          data={this.state.histogramVisualizationData}\n          color={this.state.colorName}\n        />\n        {this.state.emphasizedValue ? (\n          <Hint\n            value={this.state.emphasizedValue}\n            align={{ horizontal: \"auto\", vertical: \"top\" }}\n            style={{ fontSize: 14 }}\n            format={dataPoint => {\n              return [\n                {\n                  title: \"Value: \" + dataPoint.x0,\n                  value: \"Count: \" + dataPoint.y\n                }\n              ];\n            }}\n          />\n        ) : null}\n      </FlexibleXYPlot>\n    );\n  }\n}\n\nexport default HistogramComponent;\n","export const leftButtonBaseStyle = {\n  borderRight: 0,\n  borderTopRightRadius: 0,\n  borderBottomRightRadius: 0\n};\nexport const middleButtonBaseStyle = {\n  borderRadius: 0\n};\nexport const rightButtonBaseStyle = {\n  borderLeft: 0,\n  borderTopLeftRadius: 0,\n  borderBottomLeftRadius: 0\n};\nexport const buttonStyles = [\n  leftButtonBaseStyle,\n  middleButtonBaseStyle,\n  rightButtonBaseStyle\n];\n","import React from \"react\";\nimport HistogramComponent from \"../HistogramComponent\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { buttonStyles } from \"../../lib/threeButtonStyles\";\nimport sizeMe from 'react-sizeme';\n\nconst colorNames = [\"Red\", \"Green\", \"Blue\"];\n\n/**\n * Renders the given histogram and its information\n */\n class HistogramAndInfoComponent extends React.Component {\n  state = {\n    currentTab: 0,\n    currentChannel: 0\n  };\n\n  updateCurrentTab = (_, newTab) => this.setState({ currentTab: newTab });\n  updateCurrentChannel = (_, newChannel) =>\n    this.setState({ currentChannel: newChannel });\n\n  render() {\n    const { currentTab, currentChannel } = this.state;\n    const { histograms, cumulativeHistograms, ...extraInfo } = this.props.data;\n\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\"\n          }}\n        >\n          <Button\n            variant={currentTab === 0 ? \"contained\" : \"outlined\"}\n            color={currentTab === 0 ? \"primary\" : \"default\"}\n            style={\n              currentTab === 0\n                ? {\n                    boxShadow: \"0px 4px 6px -5px black\",\n                    ...buttonStyles[0]\n                  }\n                : buttonStyles[0]\n            }\n            onClick={e => this.updateCurrentTab(e, 0)}\n          >\n            Histogram\n          </Button>\n          <Button\n            variant={currentTab === 1 ? \"contained\" : \"outlined\"}\n            color={currentTab === 1 ? \"primary\" : \"default\"}\n            style={\n              currentTab === 1\n                ? {\n                    boxShadow: \"0px 4px 6px -5px black\",\n                    ...buttonStyles[1]\n                  }\n                : buttonStyles[1]\n            }\n            onClick={e => this.updateCurrentTab(e, 1)}\n          >\n            Cumulative\n          </Button>\n          <Button\n            variant={currentTab === 2 ? \"contained\" : \"outlined\"}\n            color={currentTab === 2 ? \"primary\" : \"default\"}\n            style={\n              currentTab === 2\n                ? {\n                    boxShadow: \"0px 4px 6px -5px black\",\n                    ...buttonStyles[2]\n                  }\n                : buttonStyles[2]\n            }\n            onClick={e => this.updateCurrentTab(e, 2)}\n          >\n            Information\n          </Button>\n        </div>\n        <div\n          style={{\n            padding: \"10px 0px 0px 0px\",\n            display: \"flex\",\n            justifyContent: \"center\"\n          }}\n        >\n          { this.state.currentTab !== 2 && colorNames.map((colorName, i) => {\n            return (\n              <Button\n                variant={currentChannel === i ? \"contained\" : \"outlined\"}\n                color={currentChannel === i ? \"primary\" : \"default\"}\n                style={buttonStyles[i]}\n                onClick={e => this.updateCurrentChannel(e, i)}\n                key={i}\n              >\n                {colorName}\n              </Button>\n            );\n          })}\n        </div>\n        <div\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            maxHeight: \"80%\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          }}\n        >\n          {currentTab === 0 && (\n            <HistogramComponent\n              histogram={histograms[currentChannel]}\n              colorName={colorNames[currentChannel]}\n            />\n          )}\n          {currentTab === 1 && (\n            <HistogramComponent\n              histogram={cumulativeHistograms[currentChannel]}\n              colorName={colorNames[currentChannel]}\n            />\n          )}\n          {currentTab === 2 && (\n            <div\n              style={{\n                display: \"flex\",\n                flexGrow: \"1\",\n                margin: \"2rem\",\n                alignSelf: \"flex-start\"\n              }}\n            >\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Variable</TableCell>\n                    <TableCell align=\"right\">Value</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableRow>\n                    <TableCell>Width</TableCell>\n                    <TableCell align=\"right\">{extraInfo.width}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Height</TableCell>\n                    <TableCell align=\"right\">{extraInfo.height}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Number of pixels</TableCell>\n                    <TableCell align=\"right\">{extraInfo.pixelCount}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Brightness</TableCell>\n                    <TableCell align=\"right\">\n                      {extraInfo.brightnesses[currentChannel].toFixed(3)}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Contrast</TableCell>\n                    <TableCell align=\"right\">\n                      {extraInfo.contrasts[currentChannel].toFixed(3)}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Minimum value</TableCell>\n                    <TableCell align=\"right\">\n                      {extraInfo.smallestNonZeroes[currentChannel]}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Maximum value</TableCell>\n                    <TableCell align=\"right\">\n                      {extraInfo.largestNonZeroes[currentChannel]}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Mode</TableCell>\n                    <TableCell align=\"right\">\n                      {extraInfo.modeValues[currentChannel]}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Entropy</TableCell>\n                    <TableCell align=\"right\">\n                      {extraInfo.entropies[currentChannel].toFixed(3)}\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </div>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default sizeMe()(HistogramAndInfoComponent)","import React, { Component } from \"react\";\nimport \"react-vis/dist/style.css\";\nimport {\n  FlexibleXYPlot,\n  XAxis,\n  YAxis,\n  VerticalGridLines,\n  HorizontalGridLines,\n  LineSeries,\n  Hint\n} from \"react-vis\";\n\nclass ProfileComponent extends Component {\n  state = {\n    emphasizedValue: null,\n    profileVisualizationData: [],\n    channel: this.props.channel\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    if (\n      (state.channel && props.channel !== state.channel) ||\n      state.profileVisualizationData !== props.profileVisualizationData\n    ) {\n      return {\n        emphasizedValue: state.emphasizedValue,\n        profileVisualizationData: props.profileValues.map((value, index) => ({\n          x: index,\n          y: value\n        })),\n        channel: props.channel\n      };\n    }\n    return null;\n  }\n\n  componentDidMount() {\n    this.setState({\n      profileVisualizationData: this.props.profileValues.map(\n        (value, index) => ({ x: index, y: value })\n      )\n    });\n  }\n\n  render() {\n    return (\n      <FlexibleXYPlot\n        margin={{\n          top: 50,\n          left: 70\n        }}\n        onMouseLeave={() => this.setState({ emphasizedValue: null })}\n      >\n        <VerticalGridLines />\n        <HorizontalGridLines />\n        <XAxis />\n        <YAxis />\n        <LineSeries\n          onNearestX={value => this.setState({ emphasizedValue: value })}\n          data={this.state.profileVisualizationData}\n          color={this.state.channel}\n        />\n        {this.state.emphasizedValue ? (\n          <Hint\n            value={this.state.emphasizedValue}\n            align={{ horizontal: \"auto\", vertical: \"top\" }}\n            style={{ fontSize: 14 }}\n            format={dataPoint => {\n              return [\n                {\n                  title: \"Pixel: \" + dataPoint.x,\n                  value: \"Value: \" + dataPoint.y\n                }\n              ];\n            }}\n          />\n        ) : null}\n      </FlexibleXYPlot>\n    );\n  }\n}\n\nexport default ProfileComponent;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ProfileComponent from \"../ProfileComponent\";\nimport { buttonStyles } from \"../../lib/threeButtonStyles\";\n\nexport default class ProfilesComponent extends React.Component {\n  state = {\n    currentTab: 0,\n    currentChannel: Object.keys(this.props.info.profileValues)[0]\n  };\n\n  updateCurrentTab = (_, newTab) => this.setState({ currentTab: newTab });\n  updateCurrentChannel = (_, newChannel) =>\n    this.setState({ currentChannel: newChannel });\n\n  render() {\n    const { currentTab, currentChannel } = this.state;\n    const { profileValues, firstDerivativeProfileValues } = this.props.info;\n\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\"\n          }}\n        >\n          <Button\n            variant={currentTab === 0 ? \"contained\" : \"outlined\"}\n            color={currentTab === 0 ? \"primary\" : \"default\"}\n            style={\n              currentTab === 0\n                ? {\n                    boxShadow: \"0px 4px 6px -5px black\",\n                    ...buttonStyles[0]\n                  }\n                : buttonStyles[0]\n            }\n            onClick={e => this.updateCurrentTab(e, 0)}\n          >\n            Profile\n          </Button>\n          <Button\n            variant={currentTab === 1 ? \"contained\" : \"outlined\"}\n            color={currentTab === 1 ? \"primary\" : \"default\"}\n            style={\n              currentTab === 1\n                ? {\n                    boxShadow: \"0px 4px 6px -5px black\",\n                    ...buttonStyles[2]\n                  }\n                : buttonStyles[2]\n            }\n            onClick={e => this.updateCurrentTab(e, 1)}\n          >\n            First Derivative\n          </Button>\n        </div>\n        <div\n          style={{\n            padding: \"10px 0px 0px 0px\",\n            display: \"flex\",\n            justifyContent: \"center\"\n          }}\n        >\n          {Object.keys(profileValues).map((key, i) => {\n            return (\n              <Button\n                variant={currentChannel === key ? \"contained\" : \"outlined\"}\n                color={currentChannel === key ? \"primary\" : \"default\"}\n                style={buttonStyles[i]}\n                onClick={e => this.updateCurrentChannel(e, key)}\n                key={key}\n              >\n                {key}\n              </Button>\n            );\n          })}\n        </div>\n        <div\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            maxHeight: \"80%\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          }}\n        >\n          {currentTab === 0 && (\n            <ProfileComponent\n              profileValues={profileValues[currentChannel]}\n              channel={currentChannel}\n            />\n          )}\n          {currentTab === 1 && (\n            <ProfileComponent\n              profileValues={firstDerivativeProfileValues[currentChannel]}\n              channel={currentChannel}\n            />\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport { observable, action, decorate } from \"mobx\";\nimport { ImageInfo } from \"wiplib\";\nimport * as GridLayoutHelper from \"../lib/grid/calculateLayout\";\nimport HistogramAndInfoComponent from \"../components/HistogramAndInfoComponent\";\nimport ProfilesComponent from \"../components/ProfilesComponent\";\n\nclass AppStoreSingleton {\n  /** All the information relative to the images loaded */\n  imagesInfos = [];\n  /** Grid layouts for the elements on screen */\n  gridLayouts = GridLayoutHelper.createNewSetOfLayouts();\n  /** Indicates the current method for selecting a part of the image */\n  imageSelectionMehod = \"selection\";\n  /** Information of the current grid item being selected (item type & index) */\n  selectedGridItem = { type: \"\", index: -1 };\n  /** Coordenates of the pixel that was last being pointed by the mouse */\n  pixelCoords = { x: 0, y: 0 };\n  /** Value of the pixel that was last being pointed by the mouse */\n  pixelValue = [0, 0, 0, 255];\n  /** Amount of removed images, needed for proper indexing images on the grid */\n  _removedImagesCount = 0;\n  /** Right side menu state */\n  rightSideMenu = {\n    open: false,\n    selectedImageInfo: {\n      name: \"\",\n      width: \"\",\n      height: \"\"\n    },\n    menuTitle: \"\",\n    menuContent: []\n  };\n\n  addImage = imageBuffer => {\n    const region = {\n      top: 0,\n      left: 0,\n      width: imageBuffer.width,\n      height: imageBuffer.height\n    };\n    const extraInfo = new ImageInfo(imageBuffer);\n    const key = `Image ${this.imagesInfos.length + this._removedImagesCount}`;\n\n    this.imagesInfos.push({\n      key,\n      imageBuffer,\n      region,\n      extraInfo,\n      profilesInfos: []\n    });\n\n    this.gridLayouts = GridLayoutHelper.addNewElementsToLayouts(\n      this.gridLayouts,\n      [key]\n    );\n  };\n\n  addProfile = (profileValues, firstDerivativeProfileValues) => {\n    this.imagesInfos[this.selectedGridItem.index].profilesInfos.push({\n      profileValues,\n      firstDerivativeProfileValues\n    });\n    this.updateRightSideMenuImageInfo();\n  };\n\n  removeImageInfo = index => {\n    const newLayouts = GridLayoutHelper.removeElementsFromLayout(\n      this.gridLayouts,\n      [this.imagesInfos[index].key]\n    );\n    let newSelectedItem = { ...this.selectedGridItem };\n\n    // We are removing an element from an array, we have to update the\n    // selected item index if it is the element removed or after it\n    if (index <= newSelectedItem.index) {\n      newSelectedItem.index -= 1;\n      if (newSelectedItem.index < 0) {\n        newSelectedItem.type = \"\";\n      }\n    }\n\n    this.imagesInfos = this.imagesInfos.filter((_, i) => i !== index);\n    this.gridLayouts = newLayouts;\n    this.selectedGridItem = newSelectedItem;\n    this._removedImagesCount = this._removedImagesCount + 1;\n\n    this.updateRightSideMenuImageInfo();\n    if (this.imagesInfos.length < 1) {\n      this.pixelCoords = { x: 0, y: 0 };\n      this.pixelValue = [0, 0, 0, 255];\n    }\n  };\n\n  updateImageRegion = (index, newRegion) =>\n    (this.imagesInfos[index].region = newRegion);\n\n  updateLayout = (_, newLayouts) =>\n    requestAnimationFrame(() => (this.gridLayouts = newLayouts));\n\n  updateSelectedImageItem = index => {\n    this.selectedGridItem = { type: \"image\", index };\n    this.updateRightSideMenuImageInfo();\n  };\n\n  setCurrentPixel = (coords, value) => {\n    this.pixelCoords = coords;\n    this.pixelValue = value;\n  };\n\n  updateImageSelectionMehod = newMethodType => {\n    this.imageSelectionMehod = newMethodType;\n  };\n\n  isGridItemSelected = (type, index) =>\n    this.selectedGridItem.index === index &&\n    this.selectedGridItem.type === type;\n\n  closeRightSideMenu = () => (\n    this.rightSideMenu.open = false,\n    this.rightSideMenu.menuContent = []\n  );\n\n  openRightSideMenu = () => (\n    this.rightSideMenu.open = true,\n    this.rightSideMenu.menuContent = [\n      <HistogramAndInfoComponent data={this.imagesInfos[this.selectedGridItem.index].extraInfo} />\n    ],\n    this.imagesInfos[this.selectedGridItem.index].profilesInfos.forEach(profileInfo => {\n      this.rightSideMenu.menuContent.push(\n        <ProfilesComponent info={profileInfo} />\n      );\n    })\n  );\n\n  updateRightSideMenuImageInfo = () => {\n    if (this.selectedGridItem.index === -1) {\n      this.rightSideMenu.selectedImageInfo = {\n        name: \"\",\n        width: \"\",\n        height: \"\"\n      };\n      this.rightSideMenu.menuTitle = \"\";\n      this.rightSideMenu.menuContent = [];\n    } else {\n      const selectedImageInfo = this.imagesInfos[this.selectedGridItem.index];\n      const { extraInfo } = selectedImageInfo;\n      this.rightSideMenu.menuTitle = `${selectedImageInfo.key} - Information`;\n      this.rightSideMenu.selectedImageInfo = {\n        name: selectedImageInfo.key,\n        width: selectedImageInfo.imageBuffer.width,\n        height: selectedImageInfo.imageBuffer.height\n      };\n      this.rightSideMenu.menuContent = [\n        <HistogramAndInfoComponent data={extraInfo} />\n      ];\n      selectedImageInfo.profilesInfos.forEach(profileInfo => {\n        this.rightSideMenu.menuContent.push(\n          <ProfilesComponent info={profileInfo} />\n        );\n      });\n    }\n  };\n}\n\ndecorate(AppStoreSingleton, {\n  imagesInfos: observable,\n  gridLayouts: observable,\n  imageSelectionMehod: observable,\n  selectedGridItem: observable,\n  pixelCoords: observable,\n  pixelValue: observable,\n  rightSideMenu: observable,\n  addImage: action,\n  addProfile: action,\n  updateImageRegion: action,\n  removeProfile: action,\n  updateLayout: action,\n  updateSelectedImageItem: action,\n  setCurrentPixel: action,\n  updateImageSelectionMehod: action,\n  openRightSideMenu: action,\n  closeRightSideMenu: action\n});\n\nexport default new AppStoreSingleton();\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faArrowsAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\n// react-grid-layout CSS classes\nimport \"../node_modules/react-grid-layout/css/styles.css\";\nimport \"../node_modules/react-resizable/css/styles.css\";\n\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { SnackbarProvider } from \"notistack\";\nimport Button from \"@material-ui/core/Button\";\nimport { Provider } from \"mobx-react\";\nimport appStore from \"./stores/appStore\";\n\n// Material UI color theme\nconst theme = createMuiTheme({\n  palette: {\n    common: { black: \"#000\", white: \"#fff\" },\n    background: { paper: \"#fff\", default: \"#fafafa\" },\n    primary: {\n      light: \"#7986cb\",\n      main: \"#3f51b5\",\n      dark: \"#303f9f\",\n      contrastText: \"#fff\"\n    },\n    secondary: {\n      light: \"#ff4081\",\n      main: \"#f50057\",\n      dark: \"#c51162\",\n      contrastText: \"#fff\"\n    },\n    error: {\n      light: \"#e57373\",\n      main: \"#f44336\",\n      dark: \"#d32f2f\",\n      contrastText: \"#fff\"\n    },\n    text: {\n      primary: \"rgba(0, 0, 0, 0.87)\",\n      secondary: \"rgba(0, 0, 0, 0.54)\",\n      disabled: \"rgba(0, 0, 0, 0.38)\",\n      hint: \"rgba(0, 0, 0, 0.38)\"\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n\nlibrary.add(faArrowsAlt);\n\nReactDOM.render(\n  <div>\n    <MuiThemeProvider theme={theme}>\n      <SnackbarProvider\n        maxSnack={5}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\"\n        }}\n        action={[\n          <Button color=\"inherit\" size=\"small\" key={Date.now()}>\n            Dismiss\n          </Button>\n        ]}\n      >\n        <Provider appStore={appStore}>\n          <App />\n        </Provider>\n      </SnackbarProvider>\n    </MuiThemeProvider>\n  </div>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}